{"ast":null,"code":"import React from'react';import ResponsiveContainer from'recharts/lib/component/ResponsiveContainer';import LineChart from'recharts/lib/chart/LineChart';import Line from'recharts/lib/cartesian/Line';import XAxis from'recharts/lib/cartesian/XAxis';import YAxis from'recharts/lib/cartesian/YAxis';import CartesianGrid from'recharts/lib/cartesian/CartesianGrid';import Tooltip from'recharts/lib/component/Tooltip';import Legend from'recharts/lib/component/Legend';function SimpleLineChart(passData){var data=[];for(var i=0;i<passData.passData.length;i++){data.push(passData.passData[i]);}// console.log('passdata that is being passed, ', passData);\nreturn(// 99% per https://github.com/recharts/recharts/issues/172\nReact.createElement(ResponsiveContainer,{width:\"99%\",height:320},React.createElement(LineChart,{data:data},React.createElement(XAxis,{dataKey:\"name\"}),React.createElement(YAxis,{formatter:function formatter(value){return new Intl.NumberFormat('en').format(value);}}),React.createElement(CartesianGrid,{vertical:false,strokeDasharray:\"3 3\"}),React.createElement(Tooltip,null),React.createElement(Legend,null),React.createElement(Line,{type:\"monotone\",dataKey:\"Consumed\",stroke:\"#82ca9d\",formatter:function formatter(value){return new Intl.NumberFormat('en').format(value);}}),React.createElement(Line,{type:\"monotone\",dataKey:\"Received\",stroke:\"#8884d8\",activeDot:{r:8},formatter:function formatter(value){return new Intl.NumberFormat('en').format(value);}}))));}export default SimpleLineChart;","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\SimpleLineChart\\simpleLineChart.js"],"names":["React","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","SimpleLineChart","passData","data","i","length","push","value","Intl","NumberFormat","format","r"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,4CAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,6BAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,8BAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sCAA1B,CACA,MAAOC,CAAAA,OAAP,KAAoB,gCAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,+BAAnB,CAEA,QAASC,CAAAA,eAAT,CAAyBC,QAAzB,CAAmC,CAC/B,GAAMC,CAAAA,IAAI,CAAG,EAAb,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,QAAQ,CAACA,QAAT,CAAkBG,MAAtC,CAA8CD,CAAC,EAA/C,CAAmD,CACjDD,IAAI,CAACG,IAAL,CAAUJ,QAAQ,CAACA,QAAT,CAAkBE,CAAlB,CAAV,EACD,CAED;AACA,MACI;AACA,oBAAC,mBAAD,EAAqB,KAAK,CAAC,KAA3B,CAAiC,MAAM,CAAE,GAAzC,EACI,oBAAC,SAAD,EAAW,IAAI,CAAED,IAAjB,EACI,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EADJ,CAEI,oBAAC,KAAD,EAAO,SAAS,CAAI,mBAACI,KAAD,QAAW,IAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,KAAnC,CAAX,EAApB,EAFJ,CAGI,oBAAC,aAAD,EAAe,QAAQ,CAAE,KAAzB,CAAgC,eAAe,CAAC,KAAhD,EAHJ,CAII,oBAAC,OAAD,MAJJ,CAKI,oBAAC,MAAD,MALJ,CAMI,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,UAA9B,CAAyC,MAAM,CAAC,SAAhD,CAA0D,SAAS,CAAI,mBAACA,KAAD,QAAW,IAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,KAAnC,CAAX,EAAvE,EANJ,CAOI,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,UAA9B,CAAyC,MAAM,CAAC,SAAhD,CAA0D,SAAS,CAAE,CAAEI,CAAC,CAAE,CAAL,CAArE,CAA+E,SAAS,CAAI,mBAACJ,KAAD,QAAW,IAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,KAAnC,CAAX,EAA5F,EAPJ,CADJ,CAFJ,EAcH,CAED,cAAeN,CAAAA,eAAf","sourcesContent":["import React from 'react';\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\n\r\nfunction SimpleLineChart(passData) {\r\n    const data = [];\r\n\r\n    for (let i = 0; i < passData.passData.length; i++) {\r\n      data.push(passData.passData[i]);\r\n    }\r\n\r\n    // console.log('passdata that is being passed, ', passData);\r\n    return (\r\n        // 99% per https://github.com/recharts/recharts/issues/172\r\n        <ResponsiveContainer width=\"99%\" height={320}>\r\n            <LineChart data={data}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Consumed\" stroke=\"#82ca9d\" formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                <Line type=\"monotone\" dataKey=\"Received\" stroke=\"#8884d8\" activeDot={{ r: 8 }} formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nexport default SimpleLineChart;"]},"metadata":{},"sourceType":"module"}