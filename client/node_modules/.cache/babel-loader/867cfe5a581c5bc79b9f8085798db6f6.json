{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\ExcelExport\\\\excelExport.js\";\nimport React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nvar ExcelFile = ReactExport.ExcelFile;\nvar ExcelSheet = ReactExport.ExcelFile.ExcelSheet; // const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      align: 'center'\n    }\n  };\n};\n\nvar Download =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Download, _React$Component);\n\n  function Download() {\n    _classCallCheck(this, Download);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Download).apply(this, arguments));\n  }\n\n  _createClass(Download, [{\n    key: \"render\",\n    // state = {data: [], initialData: []};\n    //\n    // contructor(props) {\n    //   const dataArray =  this.props.dataArray;\n    //   this.setState({initialData: dataArray});\n    // };\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          dataArray = _this$props.dataArray; //const dataArray = this.state.initialData;\n\n      var data = [[{\n        value: \"Rec Number\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          }\n        }\n      }, {\n        value: \"Scan Date\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          }\n        }\n      }, {\n        value: \"Scan Code\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          }\n        }\n      }, {\n        value: \"Product\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          }\n        }\n      }, {\n        value: \"Quantity\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          }\n        }\n      }, {\n        value: \"Tag Number\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            },\n            alignment: {\n              vertical: \"center\",\n              horizontal: \"center\"\n            }\n          }\n        }\n      }]];\n      var multiDataSet = [];\n      var keyHolder = [];\n      var dataHolder = [];\n      var columnsArray = [{\n        title: \"Rec Number\",\n        width: {\n          wch: 12\n        },\n        background: \"FF00FF00\",\n        style: {\n          fill: {\n            patternType: \"solid\",\n            bgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"0\"\n        }\n      }, {\n        title: \"Scan Date\",\n        width: {\n          wch: 12\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"yyyy-mm-dd\"\n        }\n      }, {\n        title: \"Scan Code\",\n        width: {\n          wch: 12\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          }\n        }\n      }, {\n        title: \"Product\",\n        width: {\n          wch: 12\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          }\n        }\n      }, {\n        title: \"Quantity\",\n        width: {\n          wch: 12\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"#,##0\"\n        }\n      }, {\n        title: \"Tag Number\",\n        width: {\n          wch: 12\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"#,##0\"\n        }\n      }]; // multiDataSet.push({ySteps: 1, columns: columnsArray});\n\n      multiDataSet.push({\n        columns: columnsArray\n      }); //have to loop through data being passed and create an array of objects\n      //looping through array being passed so array[0] will give us first object\n\n      for (var i = 0; i < dataArray.length; i++) {\n        dataHolder = [];\n        keyHolder = []; //putting all the keys of the object into an array\n\n        keyHolder = Object.keys(dataArray[i]);\n\n        for (var j = 1; j < keyHolder.length; j++) {\n          if ((i + 1) % 2 === 1) {\n            if (j === 5) {\n              dataHolder.push({\n                value: dataArray[i][keyHolder[j]],\n                style: {\n                  font: {\n                    sz: \"12\"\n                  },\n                  numFmt: \"#,##0\",\n                  alignment: {\n                    vertical: \"center\",\n                    horizontal: \"center\"\n                  }\n                }\n              });\n            } else {\n              dataHolder.push({\n                value: dataArray[i][keyHolder[j]],\n                style: {\n                  font: {\n                    sz: \"12\"\n                  },\n                  alignment: {\n                    vertical: \"center\",\n                    horizontal: \"center\"\n                  }\n                }\n              });\n            }\n          } else {\n            if (j === 5) {\n              dataHolder.push({\n                value: dataArray[i][keyHolder[j]],\n                style: {\n                  font: {\n                    sz: \"12\"\n                  },\n                  fill: {\n                    patternType: \"solid\",\n                    fgColor: {\n                      rgb: \"b5e7a0\"\n                    }\n                  },\n                  numFmt: \"#,##0\",\n                  alignment: {\n                    vertical: \"center\",\n                    horizontal: \"center\"\n                  }\n                }\n              });\n            } else {\n              dataHolder.push({\n                value: dataArray[i][keyHolder[j]],\n                style: {\n                  font: {\n                    sz: \"12\"\n                  },\n                  fill: {\n                    patternType: \"solid\",\n                    fgColor: {\n                      rgb: \"b5e7a0\"\n                    }\n                  },\n                  alignment: {\n                    vertical: \"center\",\n                    horizontal: \"center\"\n                  }\n                }\n              });\n            }\n          }\n        }\n\n        data.push(dataHolder);\n      }\n\n      multiDataSet[0].data = data; //multiDataSet[0].data = data;\n      //this.setState({data: multiDataSet});\n\n      console.log(\"This is the object being created: \", multiDataSet);\n      console.log(\"This is the original object passed as param: \", dataArray);\n      return React.createElement(ExcelFile, {\n        element: React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"Download Report\"),\n        filename: \"Report Request\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(ExcelSheet, {\n        dataSet: multiDataSet,\n        name: \"Scanned_Report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Download;\n}(React.Component);\n\nexport default withStyles(styles)(Download);","map":{"version":3,"sources":["C:\\Users\\avidal\\ClientDashBoard\\client\\src\\components\\ExcelExport\\excelExport.js"],"names":["React","ReactExport","Button","withStyles","ExcelFile","ExcelSheet","styles","theme","button","marginTop","spacing","unit","marginLeft","display","justifyContent","align","Download","props","classes","dataArray","data","value","style","font","sz","bold","fill","patternType","fgColor","rgb","alignment","vertical","horizontal","multiDataSet","keyHolder","dataHolder","columnsArray","title","width","wch","background","bgColor","border","bottom","color","numFmt","push","columns","i","length","Object","keys","j","console","log","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst styles = theme => ({\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        align: 'center',\n    }\n\n});\n\nclass Download extends React.Component {\n    // state = {data: [], initialData: []};\n    //\n    // contructor(props) {\n    //   const dataArray =  this.props.dataArray;\n    //   this.setState({initialData: dataArray});\n    // };\n\n    render() {\n        const { classes, dataArray } = this.props;\n        //const dataArray = this.state.initialData;\n        const data = [[{\n                        value: \"Rec Number\",\n                        style: {\n                            font: {\n                                    sz: \"18\",\n                                    bold: true\n                                },\n                            fill: {\n                                    patternType: \"solid\",\n                                    fgColor:{\n                                            rgb: \"86af49\"\n                                            }\n                                    },\n                            alignment: {\n                                    vertical: \"center\",\n                                    horizontal: \"center\"}\n                                }\n                        },\n            {\n                value: \"Scan Date\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Scan Code\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Product\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Quantity\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Tag Number\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        },\n                        alignment: {\n                            vertical: \"center\",\n                            horizontal: \"center\"}\n                    }\n                }\n            }\n                    ]];\n        const multiDataSet = [];\n        let keyHolder = [];\n        let dataHolder = [];\n\n        const columnsArray = [\n            {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\",\n                style: {\n                    fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"0\"\n\n                }\n            },\n            {title: \"Scan Date\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"yyyy-mm-dd\"\n\n                }\n            },\n            {title: \"Scan Code\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n\n                }\n            },\n            {title: \"Product\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n\n                }\n            },\n            {title: \"Quantity\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"#,##0\"\n\n                }\n            },\n            {title: \"Tag Number\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"#,##0\"\n\n                }\n            }\n        ];\n\n        // multiDataSet.push({ySteps: 1, columns: columnsArray});\n        multiDataSet.push({columns: columnsArray});\n\n        //have to loop through data being passed and create an array of objects\n\n        //looping through array being passed so array[0] will give us first object\n        for (let i = 0; i < dataArray.length; i++) {\n            dataHolder = [];\n            keyHolder = [];\n            //putting all the keys of the object into an array\n            keyHolder = Object.keys(dataArray[i]);\n            for (let j = 1; j < keyHolder.length; j++) {\n                if ((i+1) % 2 === 1) {\n                    if( j === 5 ) {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }else {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }\n                }\n                else {\n                    if( j === 5 ) {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }else {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }\n                }\n            }\n            data.push(dataHolder);\n\n        }\n\n\n        multiDataSet[0].data = data;\n        //multiDataSet[0].data = data;\n        //this.setState({data: multiDataSet});\n        console.log(\"This is the object being created: \", multiDataSet);\n        console.log(\"This is the original object passed as param: \", dataArray);\n\n        return (\n            <ExcelFile element={\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    align='center'\n                >\n                    Download Report\n                </Button>\n            } filename={\"Report Request\"}>\n                {/*<ExcelSheet data={dataArray} name=\"Scanned_Report\">*/}\n                {/*    <ExcelColumn label=\"Rec Number\" value=\"recno\" />*/}\n                {/*    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>*/}\n                {/*    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>*/}\n                {/*    <ExcelColumn label=\"Product\" value=\"product\"/>*/}\n                {/*    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>*/}\n                {/*    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>*/}\n                {/*    /!*<ExcelColumn label=\"Marital Status\"*!/*/}\n                {/*                 /!*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*!/*/}\n                {/*</ExcelSheet>*/}\n                <ExcelSheet dataSet={multiDataSet} name=\"Scanned_Report\" />\n            </ExcelFile>\n        );\n    }\n}\n\nexport default withStyles(styles)(Download);\n\n"]},"metadata":{},"sourceType":"module"}