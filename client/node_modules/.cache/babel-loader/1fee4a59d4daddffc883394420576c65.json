{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\SimpleLineChart\\\\simpleLineChart.js\";\nimport React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\nimport Paper from '@material-ui/core/Paper';\n\nfunction SimpleLineChart(passData) {\n  var data = [];\n\n  for (var i = 0; i < passData.passData.length; i++) {\n    data.push(passData.passData[i]);\n  } // console.log('passdata that is being passed, ', passData);\n\n\n  return (// 99% per https://github.com/recharts/recharts/issues/172\n    React.createElement(ResponsiveContainer, {\n      width: \"99%\",\n      height: 320,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: {\n        width: '100%',\n        marginTop: 2.5 * 3,\n        hover: 'primary',\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      formatter: function formatter(value) {\n        return new Intl.NumberFormat('en').format(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      vertical: false,\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Consumed\",\n      stroke: \"#82ca9d\",\n      formatter: function formatter(value) {\n        return new Intl.NumberFormat('en').format(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Received\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      formatter: function formatter(value) {\n        return new Intl.NumberFormat('en').format(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))))\n  );\n}\n\nexport default SimpleLineChart;","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\SimpleLineChart\\simpleLineChart.js"],"names":["React","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Paper","SimpleLineChart","passData","data","i","length","push","width","marginTop","hover","overflowX","value","Intl","NumberFormat","format","r"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AAC/B,MAAMC,IAAI,GAAG,EAAb;;AAGA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACA,QAAT,CAAkBG,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjDD,IAAAA,IAAI,CAACG,IAAL,CAAUJ,QAAQ,CAACA,QAAT,CAAkBE,CAAlB,CAAV;AACD,GAN8B,CAQ/B;;;AACA,SACI;AAEA,wBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,MAAM,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE;AACdG,QAAAA,KAAK,EAAE,MADO;AAEdC,QAAAA,SAAS,EAAE,MAAM,CAFH;AAGdC,QAAAA,KAAK,EAAE,SAHO;AAIdC,QAAAA,SAAS,EAAE;AAJG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMA,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAI,mBAACQ,KAAD;AAAA,eAAW,IAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,KAAnC,CAAX;AAAA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAzB;AAAgC,MAAA,eAAe,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,MAAM,EAAC,SAAhD;AAA0D,MAAA,SAAS,EAAI,mBAACA,KAAD;AAAA,eAAW,IAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,KAAnC,CAAX;AAAA,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,MAAM,EAAC,SAAhD;AAA0D,MAAA,SAAS,EAAE;AAAEI,QAAAA,CAAC,EAAE;AAAL,OAArE;AAA+E,MAAA,SAAS,EAAI,mBAACJ,KAAD;AAAA,eAAW,IAAIC,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCH,KAAnC,CAAX;AAAA,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CANA,CADJ;AAHJ;AAuBH;;AAED,eAAeV,eAAf","sourcesContent":["import React from 'react';\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction SimpleLineChart(passData) {\r\n    const data = [];\r\n\r\n\r\n    for (let i = 0; i < passData.passData.length; i++) {\r\n      data.push(passData.passData[i]);\r\n    }\r\n\r\n    // console.log('passdata that is being passed, ', passData);\r\n    return (\r\n        // 99% per https://github.com/recharts/recharts/issues/172\r\n\r\n        <ResponsiveContainer width=\"99%\" height={320}>\r\n            <Paper className={{\r\n                width: '100%',\r\n                marginTop: 2.5 * 3,\r\n                hover: 'primary',\r\n                overflowX: 'auto'\r\n            }}>\r\n            <LineChart data={data}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Consumed\" stroke=\"#82ca9d\" formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                <Line type=\"monotone\" dataKey=\"Received\" stroke=\"#8884d8\" activeDot={{ r: 8 }} formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n            </LineChart>\r\n            </Paper>\r\n        </ResponsiveContainer>\r\n\r\n    );\r\n}\r\n\r\nexport default SimpleLineChart;"]},"metadata":{},"sourceType":"module"}