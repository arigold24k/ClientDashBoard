{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import Typography from'@material-ui/core/Typography';import Grid from'@material-ui/core/Grid';import{withStyles}from'@material-ui/core/styles';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';var styles=function styles(theme){return{button:{display:'block',marginTop:theme.spacing.unit*2},formControl:{margin:theme.spacing.unit,minWidth:120},barcode:{align:'center'}};};var PurposeForm=/*#__PURE__*/function(_React$Component){_inherits(PurposeForm,_React$Component);function PurposeForm(){var _getPrototypeOf2;var _this;_classCallCheck(this,PurposeForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(PurposeForm)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={open:false};_this.handleClose=function(){_this.setState({open:false});};_this.handleOpen=function(){_this.setState({open:true});};_this.generateBarCode=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};return _this;}_createClass(PurposeForm,[{key:\"render\",value:function render(){var classes=this.props.classes;return React.createElement(React.Fragment,null,React.createElement(Typography,{variant:\"h6\",gutterBottom:true},\"Purpose\"),React.createElement(Grid,{container:true,spacing:24,justify:'center'},React.createElement(Grid,{item:true,xs:true},React.createElement(\"form\",{autoComplete:\"off\"},React.createElement(FormControl,{className:classes.formControl},React.createElement(InputLabel,{htmlFor:\"purpose\"},\"Purpose\"),React.createElement(Select,{open:this.state.open,onClose:this.handleClose,onOpen:this.handleOpen,value:this.props.purposeval,onChange:this.props.updateval,inputProps:{name:'purpose',id:'purp'}},React.createElement(MenuItem,{value:\"\"},React.createElement(\"em\",null,\"None\")),React.createElement(MenuItem,{value:1},\"Receipt\"),React.createElement(MenuItem,{value:2},\"Consume\"),React.createElement(MenuItem,{value:3},\"Error\"),React.createElement(MenuItem,{value:4},\"Cycle Count\"),React.createElement(MenuItem,{value:5},\"Production Receipt\"))))),React.createElement(Grid,{item:true,xs:12})));}}]);return PurposeForm;}(React.Component);export default withStyles(styles)(PurposeForm);","map":{"version":3,"sources":["C:\\Users\\avidal\\ClientDashBoard\\client\\src\\components\\PurposeSection\\purpose.js"],"names":["React","Typography","Grid","withStyles","InputLabel","MenuItem","FormControl","Select","styles","theme","button","display","marginTop","spacing","unit","formControl","margin","minWidth","barcode","align","PurposeForm","state","open","handleClose","setState","handleOpen","generateBarCode","event","target","name","value","classes","props","purposeval","updateval","id","Component"],"mappings":"o/BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,MAAM,CAAE,CACJC,OAAO,CAAE,OADL,CAEJC,SAAS,CAAEH,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAqB,CAF5B,CADa,CAKrBC,WAAW,CAAE,CACTC,MAAM,CAAEP,KAAK,CAACI,OAAN,CAAcC,IADb,CAETG,QAAQ,CAAE,GAFD,CALQ,CASrBC,OAAO,CAAE,CACLC,KAAK,CAAE,QADF,CATY,CAAL,EAApB,C,GAcMC,CAAAA,W,+ZACFC,K,CAAQ,CACJC,IAAI,CAAE,KADF,C,OASRC,W,CAAc,UAAM,CAChB,MAAKC,QAAL,CAAc,CAAEF,IAAI,CAAE,KAAR,CAAd,EACH,C,OAEDG,U,CAAa,UAAM,CACf,MAAKD,QAAL,CAAc,CAAEF,IAAI,CAAE,IAAR,CAAd,EACH,C,OAEDI,e,CAAkB,SAAAC,KAAK,CAAI,CACvB,MAAKH,QAAL,oBAAgBG,KAAK,CAACC,MAAN,CAAaC,IAA7B,CAAoCF,KAAK,CAACC,MAAN,CAAaE,KAAjD,GACH,C,8EAGD,IACYC,CAAAA,OADZ,CACwB,KAAKC,KAD7B,CACYD,OADZ,CAGI,MACI,qBAAC,KAAD,CAAO,QAAP,MACI,oBAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,YAAY,KAArC,YADJ,CAII,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,EAAzB,CAA6B,OAAO,CAAE,QAAtC,EACI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,EACI,4BAAM,YAAY,CAAC,KAAnB,EAII,oBAAC,WAAD,EAAa,SAAS,CAAEA,OAAO,CAAChB,WAAhC,EACI,oBAAC,UAAD,EAAY,OAAO,CAAC,SAApB,YADJ,CAEI,oBAAC,MAAD,EACI,IAAI,CAAE,KAAKM,KAAL,CAAWC,IADrB,CAEI,OAAO,CAAE,KAAKC,WAFlB,CAGI,MAAM,CAAE,KAAKE,UAHjB,CAII,KAAK,CAAE,KAAKO,KAAL,CAAWC,UAJtB,CAKI,QAAQ,CAAE,KAAKD,KAAL,CAAWE,SALzB,CAMI,UAAU,CAAE,CACRL,IAAI,CAAE,SADE,CAERM,EAAE,CAAE,MAFI,CANhB,EAWI,oBAAC,QAAD,EAAU,KAAK,CAAC,EAAhB,EACI,qCADJ,CAXJ,CAcI,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAjB,YAdJ,CAeI,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAjB,YAfJ,CAgBI,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAjB,UAhBJ,CAiBI,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAjB,gBAjBJ,CAkBI,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAjB,uBAlBJ,CAFJ,CAJJ,CADJ,CADJ,CAyDI,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,EAzDJ,CAJJ,CADJ,CAmEH,C,yBA7FqBnC,KAAK,CAACoC,S,EAkGhC,cAAejC,CAAAA,UAAU,CAACK,MAAD,CAAV,CAAmBY,WAAnB,CAAf","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst styles = theme => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing.unit * 2,\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    barcode: {\n        align: 'center',\n    },\n});\n\nclass PurposeForm extends React.Component {\n    state = {\n        open: false,\n    };\n\n    // handleChange = event => {\n    //     this.setState({ [event.target.name]: event.target.value });\n    //     console.log(this.state);\n    // };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    generateBarCode = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render()\n    {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                    Purpose\n                </Typography>\n                <Grid container spacing={24} justify={'center'}>\n                    <Grid item xs>\n                        <form autoComplete=\"off\">\n                            {/*<Button className={classes.button} onClick={this.handleOpen}>*/}\n                                {/*Select the PURPOSE.*/}\n                            {/*</Button>*/}\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"purpose\">Purpose</InputLabel>\n                                <Select\n                                    open={this.state.open}\n                                    onClose={this.handleClose}\n                                    onOpen={this.handleOpen}\n                                    value={this.props.purposeval}\n                                    onChange={this.props.updateval}\n                                    inputProps={{\n                                        name: 'purpose',\n                                        id: 'purp',\n                                    }}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    <MenuItem value={1}>Receipt</MenuItem>\n                                    <MenuItem value={2}>Consume</MenuItem>\n                                    <MenuItem value={3}>Error</MenuItem>\n                                    <MenuItem value={4}>Cycle Count</MenuItem>\n                                    <MenuItem value={5}>Production Receipt</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    </Grid>\n                    {/*{this.props.purposeval === '' ?*/}\n                        {/*(<Grid item xs>*/}\n                        {/*</Grid>) : (*/}\n                            {/*<Grid item xs className={classes.barcode}>*/}\n                                {/*<Barcode*/}\n                                    {/*value = {purposetext(this.props.purposeval).substring(0,3) + this.props.barcodeVal}*/}\n                                    {/*// width = {2}*/}\n                                    {/*height = {100}*/}\n                                    {/*format = {\"CODE128\"}*/}\n                                    {/*displayValue = {true}*/}\n                                    {/*fontOptions = {\"\"}*/}\n                                    {/*font = {\"monospace\"}*/}\n                                    {/*textAlign = {\"center\"}*/}\n                                    {/*textPosition = {\"bottom\"}*/}\n                                    {/*textMargin = {2}*/}\n                                    {/*fontSize = {20}*/}\n                                    {/*background = {\"#ffffff\"}*/}\n                                    {/*lineColor = {\"#000000\"}*/}\n                                    {/*margin = {10}*/}\n                                    {/*marginTop = {undefined}*/}\n                                    {/*marginBottom = {undefined}*/}\n                                    {/*marginLeft = {undefined}*/}\n                                    {/*marginRight = {undefined}*/}\n                                {/*/>*/}\n                            {/*</Grid>*/}\n                        {/*)}*/}\n                    <Grid item xs={12}>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\nPurposeForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(PurposeForm);\n"]},"metadata":{},"sourceType":"module"}