{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\ExcelExport\\\\excelExport.js\";\nimport React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nvar ExcelFile = ReactExport.ExcelFile;\nvar ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nvar ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      align: 'center'\n    }\n  };\n};\n\nvar Download =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Download, _React$Component);\n\n  function Download() {\n    _classCallCheck(this, Download);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Download).apply(this, arguments));\n  }\n\n  _createClass(Download, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          dataArray = _this$props.dataArray;\n      var data = [];\n      var multiDataSet = [];\n      var keyHolder = [];\n      var dataHolder = [];\n      var columnsArray = [{\n        title: \"Rec Number\",\n        width: {\n          wpx: 20\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"0\"\n        }\n      }, {\n        title: \"Scan Date\",\n        width: {\n          wpx: 20\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"yyyy-mm-dd\"\n        }\n      }, {\n        title: \"Scan Code\",\n        width: {\n          wpx: 20\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          }\n        }\n      }, {\n        title: \"Product\",\n        width: {\n          wpx: 20\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          }\n        }\n      }, {\n        title: \"Quantity\",\n        width: {\n          wpx: 20\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"#,##0\"\n        }\n      }, {\n        title: \"Tag Number\",\n        width: {\n          wpx: 20\n        },\n        style: {\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"FF00FF00\"\n            }\n          },\n          font: {\n            sz: \"14\",\n            bold: true\n          },\n          alignment: {\n            vertical: \"center\",\n            horizontal: \"center\"\n          },\n          border: {\n            bottom: {\n              style: \"thick\",\n              color: {\n                rgb: \"FFFFAA00\"\n              }\n            }\n          },\n          numFmt: \"#,##0\"\n        }\n      }];\n      multiDataSet.push({\n        ySteps: 1,\n        columns: columnsArray\n      }); //have to loop through data being passed and create an array of objects\n      //looping through array being passed so array[0] will give us first object\n\n      for (var i = 0; i < dataArray.length(); i++) {\n        dataHolder = [];\n        keyHolder = []; //putting all the keys of the object into an array\n\n        keyHolder = Object.keys(dataArray[i]);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = keyHolder[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var key = _step.value;\n            dataHolder.push({\n              value: dataArray[i][key],\n              style: {\n                font: {\n                  sz: \"12\"\n                }\n              }\n            });\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        data.push(dataHolder);\n      }\n\n      multiDataSet[0].data = data;\n      return React.createElement(ExcelFile, {\n        element: React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Download Report\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(ExcelSheet, {\n        data: dataArray,\n        name: \"Scanned_Report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(ExcelColumn, {\n        label: \"Rec Number\",\n        value: \"recno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(ExcelColumn, {\n        label: \"Scan Date\",\n        value: \"scandate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(ExcelColumn, {\n        label: \"Scan Code\",\n        value: \"scancode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(ExcelColumn, {\n        label: \"Product\",\n        value: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(ExcelColumn, {\n        label: \"Quantity\",\n        value: \"quantity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(ExcelColumn, {\n        label: \"Tag Number\",\n        value: \"tagnum\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Download;\n}(React.Component);\n\nexport default withStyles(styles)(Download);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\ExcelExport\\excelExport.js"],"names":["React","ReactExport","Button","withStyles","ExcelFile","ExcelSheet","ExcelColumn","styles","theme","button","marginTop","spacing","unit","marginLeft","display","justifyContent","align","Download","props","classes","dataArray","data","multiDataSet","keyHolder","dataHolder","columnsArray","title","width","wpx","style","fill","patternType","fgColor","rgb","font","sz","bold","alignment","vertical","horizontal","border","bottom","color","numFmt","push","ySteps","columns","i","length","Object","keys","key","value","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    }\r\n\r\n});\r\n\r\n\r\nclass Download extends React.Component {\r\n    render() {\r\n        const { classes, dataArray } = this.props;\r\n        const data = [];\r\n        const multiDataSet = [];\r\n        let keyHolder = [];\r\n        let dataHolder = [];\r\n\r\n        const columnsArray = [\r\n            {title: \"Rec Number\", width: {wpx: 20},\r\n                style: {\r\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                    font:{sz: \"14\", bold: true},\r\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                    numFmt: \"0\"\r\n\r\n                }\r\n            },\r\n            {title: \"Scan Date\", width: {wpx: 20},\r\n                style: {\r\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                    font:{sz: \"14\", bold: true},\r\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                    numFmt: \"yyyy-mm-dd\"\r\n\r\n                }\r\n            },\r\n            {title: \"Scan Code\", width: {wpx: 20},\r\n                style: {\r\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                    font:{sz: \"14\", bold: true},\r\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n\r\n                }\r\n            },\r\n            {title: \"Product\", width: {wpx: 20},\r\n                style: {\r\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                    font:{sz: \"14\", bold: true},\r\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n\r\n                }\r\n            },\r\n            {title: \"Quantity\", width: {wpx: 20},\r\n                style: {\r\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                    font:{sz: \"14\", bold: true},\r\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                    numFmt: \"#,##0\"\r\n\r\n                }\r\n            },\r\n            {title: \"Tag Number\", width: {wpx: 20},\r\n                style: {\r\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                    font:{sz: \"14\", bold: true},\r\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                    numFmt: \"#,##0\"\r\n\r\n                }\r\n            }\r\n        ];\r\n\r\n        multiDataSet.push({ySteps: 1, columns: columnsArray});\r\n\r\n\r\n        //have to loop through data being passed and create an array of objects\r\n\r\n        //looping through array being passed so array[0] will give us first object\r\n        for (let i = 0; i < dataArray.length(); i++) {\r\n            dataHolder = [];\r\n            keyHolder = [];\r\n            //putting all the keys of the object into an array\r\n            keyHolder = Object.keys(dataArray[i]);\r\n                for (const key of keyHolder) {\r\n                    dataHolder.push({value: dataArray[i][key], style: {font: {sz: \"12\"}}});\r\n                }\r\n            data.push(dataHolder);\r\n\r\n        }\r\n\r\n        multiDataSet[0].data = data;\r\n\r\n        return (\r\n            <ExcelFile element={\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    align='center'\r\n                >\r\n                    Download Report\r\n                </Button>\r\n            }>\r\n                <ExcelSheet data={dataArray} name=\"Scanned_Report\">\r\n                    <ExcelColumn label=\"Rec Number\" value=\"recno\" />\r\n                    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>\r\n                    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>\r\n                    <ExcelColumn label=\"Product\" value=\"product\"/>\r\n                    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>\r\n                    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>\r\n                    {/*<ExcelColumn label=\"Marital Status\"*/}\r\n                                 {/*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*/}\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Download);\r\n\r\n"]},"metadata":{},"sourceType":"module"}