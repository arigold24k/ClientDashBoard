{"ast":null,"code":"var CHAR_SET = ['nnwwn', 'wnnnw', 'nwnnw', 'wwnnn', 'nnwnw', 'wnwnn', 'nwwnn', 'nnnww', 'wnnwn', 'nwnwn'];\n\nmodule.exports = function (lines) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'standard';\n  var code = [];\n  var barThreshold = Math.ceil(lines.reduce(function (pre, item) {\n    return (pre + item) / 2;\n  }, 0));\n\n  if (type === 'interleaved') {\n    // extract start/ends pair\n    var startChar = lines.splice(0, 4).map(function (line) {\n      return line > barThreshold ? 'w' : 'n';\n    }).join('');\n    var endChar = lines.splice(lines.length - 3, 3).map(function (line) {\n      return line > barThreshold ? 'w' : 'n';\n    }).join('');\n    if (startChar !== 'nnnn' || endChar !== 'wnn') return null; // Read one encoded character at a time.\n\n    while (lines.length > 0) {\n      var seg = lines.splice(0, 10);\n      var a = seg.filter(function (item, index) {\n        return index % 2 === 0;\n      }).map(function (line) {\n        return line > barThreshold ? 'w' : 'n';\n      }).join('');\n      code.push(CHAR_SET.indexOf(a));\n      var b = seg.filter(function (item, index) {\n        return index % 2 !== 0;\n      }).map(function (line) {\n        return line > barThreshold ? 'w' : 'n';\n      }).join('');\n      code.push(CHAR_SET.indexOf(b));\n    }\n  } else if (type === 'standard') {\n    // extract start/ends pair\n    var _startChar = lines.splice(0, 6).filter(function (item, index) {\n      return index % 2 === 0;\n    }).map(function (line) {\n      return line > barThreshold ? 'w' : 'n';\n    }).join('');\n\n    var _endChar = lines.splice(lines.length - 5, 5).filter(function (item, index) {\n      return index % 2 === 0;\n    }).map(function (line) {\n      return line > barThreshold ? 'w' : 'n';\n    }).join('');\n\n    if (_startChar !== 'wwn' || _endChar !== 'wnw') return null; // Read one encoded character at a time.\n\n    while (lines.length > 0) {\n      var _a = lines.splice(0, 10).filter(function (item, index) {\n        return index % 2 === 0;\n      }).map(function (line) {\n        return line > barThreshold ? 'w' : 'n';\n      }).join('');\n\n      code.push(CHAR_SET.indexOf(_a));\n    }\n  }\n\n  return code.join('');\n};","map":null,"metadata":{},"sourceType":"script"}