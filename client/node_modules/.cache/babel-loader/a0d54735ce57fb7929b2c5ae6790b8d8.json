{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\ExcelExport\\\\excelExport.js\";\nimport React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nvar ExcelFile = ReactExport.ExcelFile;\nvar ExcelSheet = ReactExport.ExcelFile.ExcelSheet; // const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      align: 'center'\n    }\n  };\n};\n\nvar Download =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Download, _React$Component);\n\n  function Download() {\n    _classCallCheck(this, Download);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Download).apply(this, arguments));\n  }\n\n  _createClass(Download, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          dataArray = _this$props.dataArray;\n      var data = [[{\n        value: \"Rec Number\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          }\n        }\n      }, {\n        value: \"Scan Date\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          }\n        }\n      }, {\n        value: \"Scan Code\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          }\n        }\n      }, {\n        value: \"Product\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          }\n        }\n      }, {\n        value: \"Quantity\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          }\n        }\n      }, {\n        value: \"Tag Number\",\n        style: {\n          font: {\n            sz: \"18\",\n            bold: true\n          },\n          fill: {\n            patternType: \"solid\",\n            fgColor: {\n              rgb: \"86af49\"\n            }\n          }\n        }\n      }]];\n      var multiDataSet = [];\n      var keyHolder = [];\n      var dataHolder = [];\n      var columnsArray = [{\n        title: \"Rec Number\",\n        width: {\n          wch: 12\n        },\n        background: \"FF00FF00\" // style: {\n        //     fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\n        //     font:{sz: \"14\", bold: true},\n        //     alignment: {vertical: \"center\", horizontal: \"center\"},\n        //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n        //     numFmt: \"0\"\n        //\n        // }\n\n      }, {\n        title: \"Scan Date\",\n        width: {\n          wch: 12\n        } // style: {\n        //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n        //     font:{sz: \"14\", bold: true},\n        //     alignment: {vertical: \"center\", horizontal: \"center\"},\n        //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n        //     numFmt: \"yyyy-mm-dd\"\n        //\n        // }\n\n      }, {\n        title: \"Scan Code\",\n        width: {\n          wch: 12\n        } // style: {\n        //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n        //     font:{sz: \"14\", bold: true},\n        //     alignment: {vertical: \"center\", horizontal: \"center\"},\n        //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n        //\n        // }\n\n      }, {\n        title: \"Product\",\n        width: {\n          wch: 12\n        } // style: {\n        //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n        //     font:{sz: \"14\", bold: true},\n        //     alignment: {vertical: \"center\", horizontal: \"center\"},\n        //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n        //\n        // }\n\n      }, {\n        title: \"Quantity\",\n        width: {\n          wch: 12\n        } // style: {\n        //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n        //     font:{sz: \"14\", bold: true},\n        //     alignment: {vertical: \"center\", horizontal: \"center\"},\n        //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n        //     numFmt: \"#,##0\"\n        //\n        // }\n\n      }, {\n        title: \"Tag Number\",\n        width: {\n          wch: 12\n        } // style: {\n        //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n        //     font:{sz: \"14\", bold: true},\n        //     alignment: {vertical: \"center\", horizontal: \"center\"},\n        //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n        //     numFmt: \"#,##0\"\n        //\n        // }\n\n      }];\n      multiDataSet.push({\n        ySteps: 1,\n        columns: columnsArray\n      }); //have to loop through data being passed and create an array of objects\n      //looping through array being passed so array[0] will give us first object\n\n      for (var i = 0; i < dataArray.length; i++) {\n        dataHolder = [];\n        keyHolder = []; //putting all the keys of the object into an array\n\n        keyHolder = Object.keys(dataArray[i]);\n\n        for (var j = 1; j < keyHolder.length; j++) {\n          if (j === 5) {\n            dataHolder.push({\n              value: dataArray[i][keyHolder[j]],\n              style: {\n                font: {\n                  sz: \"12\"\n                },\n                numFmt: \"#,##0\",\n                alignment: {\n                  vertical: \"center\",\n                  horizontal: \"center\"\n                }\n              }\n            });\n          } else {\n            dataHolder.push({\n              value: dataArray[i][keyHolder[j]],\n              style: {\n                font: {\n                  sz: \"12\"\n                },\n                alignment: {\n                  vertical: \"center\",\n                  horizontal: \"center\"\n                }\n              }\n            });\n          }\n        }\n\n        data.push(dataHolder);\n      }\n\n      multiDataSet[0].data = data;\n      console.log(\"This is the object being created: \", multiDataSet);\n      console.log(\"This is the original object passed as param: \", dataArray);\n      return React.createElement(ExcelFile, {\n        element: React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Download Report\"),\n        filename: \"Report Request\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(ExcelSheet, {\n        dataSet: multiDataSet,\n        name: \"Scanned_Report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Download;\n}(React.Component);\n\nexport default withStyles(styles)(Download);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\ExcelExport\\excelExport.js"],"names":["React","ReactExport","Button","withStyles","ExcelFile","ExcelSheet","styles","theme","button","marginTop","spacing","unit","marginLeft","display","justifyContent","align","Download","props","classes","dataArray","data","value","style","font","sz","bold","fill","patternType","fgColor","rgb","multiDataSet","keyHolder","dataHolder","columnsArray","title","width","wch","background","push","ySteps","columns","i","length","Object","keys","j","numFmt","alignment","vertical","horizontal","console","log","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    }\r\n\r\n});\r\n\r\n\r\nclass Download extends React.Component {\r\n    render() {\r\n        const { classes, dataArray } = this.props;\r\n        const data = [[{\r\n                        value: \"Rec Number\",\r\n                        style: {\r\n                            font: {\r\n                                    sz: \"18\",\r\n                                    bold: true\r\n                                },\r\n                            fill: {\r\n                                    patternType: \"solid\",\r\n                                    fgColor:{\r\n                                            rgb: \"86af49\"\r\n                                            }\r\n                                    }\r\n                                }\r\n                        },\r\n            {\r\n                value: \"Scan Date\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                value: \"Scan Code\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                value: \"Product\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                value: \"Quantity\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                value: \"Tag Number\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n                    ]];\r\n        const multiDataSet = [];\r\n        let keyHolder = [];\r\n        let dataHolder = [];\r\n\r\n        const columnsArray = [\r\n            {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\"\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"0\"\r\n                //\r\n                // }\r\n            },\r\n            {title: \"Scan Date\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"yyyy-mm-dd\"\r\n                //\r\n                // }\r\n            },\r\n            {title: \"Scan Code\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n                //\r\n                // }\r\n            },\r\n            {title: \"Product\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n                //\r\n                // }\r\n            },\r\n            {title: \"Quantity\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"#,##0\"\r\n                //\r\n                // }\r\n            },\r\n            {title: \"Tag Number\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"#,##0\"\r\n                //\r\n                // }\r\n            }\r\n        ];\r\n\r\n        multiDataSet.push({ySteps: 1, columns: columnsArray});\r\n\r\n\r\n        //have to loop through data being passed and create an array of objects\r\n\r\n        //looping through array being passed so array[0] will give us first object\r\n        for (let i = 0; i < dataArray.length; i++) {\r\n            dataHolder = [];\r\n            keyHolder = [];\r\n            //putting all the keys of the object into an array\r\n            keyHolder = Object.keys(dataArray[i]);\r\n                for (let j = 1; j < keyHolder.length; j++) {\r\n                    if( j === 5 ) {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }else {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }\r\n\r\n                }\r\n            data.push(dataHolder);\r\n\r\n        }\r\n\r\n\r\n\r\n        multiDataSet[0].data = data;\r\n\r\n        console.log(\"This is the object being created: \", multiDataSet);\r\n        console.log(\"This is the original object passed as param: \", dataArray);\r\n\r\n        return (\r\n            <ExcelFile element={\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    align='center'\r\n                >\r\n                    Download Report\r\n                </Button>\r\n            } filename={\"Report Request\"}>\r\n                {/*<ExcelSheet data={dataArray} name=\"Scanned_Report\">*/}\r\n                {/*    <ExcelColumn label=\"Rec Number\" value=\"recno\" />*/}\r\n                {/*    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>*/}\r\n                {/*    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>*/}\r\n                {/*    <ExcelColumn label=\"Product\" value=\"product\"/>*/}\r\n                {/*    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>*/}\r\n                {/*    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>*/}\r\n                {/*    /!*<ExcelColumn label=\"Marital Status\"*!/*/}\r\n                {/*                 /!*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*!/*/}\r\n                {/*</ExcelSheet>*/}\r\n                <ExcelSheet dataSet={multiDataSet} name=\"Scanned_Report\" />\r\n            </ExcelFile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Download);\r\n\r\n"]},"metadata":{},"sourceType":"module"}