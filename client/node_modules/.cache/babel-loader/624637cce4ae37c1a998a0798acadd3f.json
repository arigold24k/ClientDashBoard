{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avidal\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\SimpleLineChart\\\\simpleLineChart.js\";\nimport React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nfunction SimpleLineChart(passData) {\n  var data = [];\n\n  var formatter = function formatter(value) {\n    return \"\".concat(value, \"%\");\n  };\n\n  for (var i = 0; i < passData.passData.length; i++) {\n    data.push(passData.passData[i]);\n  } // console.log('passdata that is being passed, ', passData);\n\n\n  return (// 99% per https://github.com/recharts/recharts/issues/172\n    React.createElement(ResponsiveContainer, {\n      width: \"99%\",\n      height: 480,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      formatter: function formatter(value) {\n        return new Intl.NumberFormat('en').format(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(CartesianGrid, {\n      vertical: false,\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Consumed\",\n      stroke: \"#82ca9d\",\n      formatter: function formatter(value) {\n        return new Intl.NumberFormat('en').format(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"Received\",\n      stroke: \"#8884d8\",\n      activeDot: {\n        r: 8\n      },\n      formatter: function formatter(value) {\n        return new Intl.NumberFormat('en').format(value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })))\n  );\n}\n\nexport default SimpleLineChart;","map":{"version":3,"sources":["C:\\Users\\avidal\\ClientDashBoard\\client\\src\\components\\SimpleLineChart\\simpleLineChart.js"],"names":["React","ResponsiveContainer","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","SimpleLineChart","passData","data","formatter","value","i","length","push","Intl","NumberFormat","format","r"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AAC/B,MAAMC,IAAI,GAAG,EAAb;;AACA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,qBAAcA,KAAd;AAAA,GAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACA,QAAT,CAAkBK,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AACjDH,IAAAA,IAAI,CAACK,IAAL,CAAUN,QAAQ,CAACA,QAAT,CAAkBI,CAAlB,CAAV;AACD,GAN8B,CAQ/B;;;AACA,SACI;AAEA,wBAAC,mBAAD;AAAqB,MAAA,KAAK,EAAC,KAA3B;AAAiC,MAAA,MAAM,EAAE,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEH,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAI,mBAACE,KAAD;AAAA,eAAW,IAAII,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCN,KAAnC,CAAX;AAAA,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAE,KAAzB;AAAgC,MAAA,eAAe,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,MAAM,EAAC,SAAhD;AAA0D,MAAA,SAAS,EAAI,mBAACA,KAAD;AAAA,eAAW,IAAII,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCN,KAAnC,CAAX;AAAA,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,MAAM,EAAC,SAAhD;AAA0D,MAAA,SAAS,EAAE;AAAEO,QAAAA,CAAC,EAAE;AAAL,OAArE;AAA+E,MAAA,SAAS,EAAI,mBAACP,KAAD;AAAA,eAAW,IAAII,IAAI,CAACC,YAAT,CAAsB,IAAtB,EAA4BC,MAA5B,CAAmCN,KAAnC,CAAX;AAAA,OAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ;AAHJ;AAgBH;;AAED,eAAeJ,eAAf","sourcesContent":["import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nfunction SimpleLineChart(passData) {\n    const data = [];\n    const formatter = (value) => `${value}%`;\n\n    for (let i = 0; i < passData.passData.length; i++) {\n      data.push(passData.passData[i]);\n    }\n\n    // console.log('passdata that is being passed, ', passData);\n    return (\n        // 99% per https://github.com/recharts/recharts/issues/172\n\n        <ResponsiveContainer width=\"99%\" height={480}>\n            <LineChart data={data}>\n                <XAxis dataKey=\"name\" />\n                <YAxis formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Consumed\" stroke=\"#82ca9d\" formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\n                <Line type=\"monotone\" dataKey=\"Received\" stroke=\"#8884d8\" activeDot={{ r: 8 }} formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\n            </LineChart>\n        </ResponsiveContainer>\n\n    );\n}\n\nexport default SimpleLineChart;"]},"metadata":{},"sourceType":"module"}