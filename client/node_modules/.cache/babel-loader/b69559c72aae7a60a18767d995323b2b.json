{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\pages\\\\updatePW\\\\updatePW.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from \"prop-types\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport functions from '../../functions/functions';\nimport axios from 'axios';\nimport Modal from \"@material-ui/core/Modal\";\n\nrequire('es6-promise').polyfill();\n\nvar styles = function styles(theme) {\n  var _layout;\n\n  return {\n    modal: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: 'none'\n    },\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit // justifyContent: 'center',\n      // align: 'center',\n\n    },\n    layout: (_layout = {\n      width: 'auto',\n      marginLeft: theme.spacing.unit * 2,\n      marginRight: theme.spacing.unit * 2\n    }, _defineProperty(_layout, theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2), {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }), _defineProperty(_layout, \"textAlign\", 'center'), _layout),\n    paper: _defineProperty({\n      marginTop: theme.spacing.unit * 3,\n      marginBottom: theme.spacing.unit * 3,\n      padding: theme.spacing.unit * 2\n    }, theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2), {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    })\n  };\n};\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nvar updatePW =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(updatePW, _React$Component);\n\n  function updatePW() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, updatePW);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(updatePW)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      password: '',\n      repassword: '',\n      open: false,\n      open1: false\n    };\n\n    _this.handleSubmit = function (event, id) {\n      if (_this.state.password === _this.state.repassword && _this.state.password !== '') {\n        var encrypPW = functions.encryptPW(_this.state.password);\n        var dataObj = {\n          id: id,\n          pw: encrypPW\n        };\n        axios.post('/updateDrowssap', dataObj).then(function (res) {\n          if (res.data === 'SUCCESS') {\n            _this.setState({\n              open: true\n            });\n          } // console.log(\"Area where the data is coming back from updating password\")\n\n        }).catch(function (err) {\n          if (err) {\n            _this.setState({\n              open1: true\n            });\n          }\n        });\n        return false;\n      }\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n\n      window.location.href = '/#/login1';\n    };\n\n    _this.handleClose1 = function () {\n      _this.setState({\n        open1: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(updatePW, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var id = this.props.match.params.id;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: classes.layout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        align: \"center\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Please provide the following:\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"password\",\n        name: \"password\",\n        type: \"password\",\n        label: \"New Password\",\n        fullWidth: true,\n        autoComplete: \"password\",\n        onChange: this.handleChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), this.state.password === this.state.repassword && React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"repassword\",\n        name: \"repassword\",\n        type: \"password\",\n        label: \"Please re-enter your password.\",\n        fullWidth: true,\n        autoComplete: \"password\",\n        onChange: this.handleChange,\n        value: this.state.repassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), this.state.password !== this.state.repassword && React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        error: true,\n        id: \"repassword\",\n        name: \"repassword\",\n        type: \"password\",\n        label: \"Please re-enter your password.\",\n        fullWidth: true,\n        autoComplete: \"password\",\n        onChange: this.handleChange,\n        value: this.state.repassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), this.state.password === this.state.repassword ? React.createElement(Button, {\n        className: classes.button,\n        size: \"small\",\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: false,\n        onClick: function onClick(event) {\n          _this2.handleSubmit(id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Submit\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open,\n        onClose: this.handleClose(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.paper1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Success\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Password has successfully been updated.\"), React.createElement(Button, {\n        onClick: this.handleClose(),\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Close\"))), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open1,\n        onClose: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.paper1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Error\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Password Was not updated.\"), React.createElement(Button, {\n        onClick: this.handleClose1(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Close\")))));\n    }\n  }]);\n\n  return updatePW;\n}(React.Component);\n\nupdatePW.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(updatePW);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\clientDashboard\\ClientDashBoard\\client\\src\\pages\\updatePW\\updatePW.js"],"names":["React","Grid","Typography","TextField","Button","CssBaseline","Paper","PropTypes","withStyles","functions","axios","Modal","require","polyfill","styles","theme","modal","position","width","spacing","unit","backgroundColor","palette","background","paper","boxShadow","shadows","padding","outline","button","marginTop","marginLeft","layout","marginRight","breakpoints","up","marginBottom","getModalStyle","top","rand","left","transform","Math","round","random","updatePW","state","password","repassword","open","open1","handleSubmit","event","id","encrypPW","encryptPW","dataObj","pw","post","then","res","data","setState","catch","err","handleChange","target","name","value","handleClose","window","location","href","handleClose1","classes","props","match","params","paper1","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from \"prop-types\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport functions from '../../functions/functions';\nimport axios from 'axios';\nimport Modal from \"@material-ui/core/Modal\";\nrequire('es6-promise').polyfill();\n\n\nconst styles = theme => ({\n    modal: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        // justifyContent: 'center',\n        // align: 'center',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        textAlign: 'center',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * 6,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n\n    },\n});\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nclass updatePW extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         password: '',\n    //         repassword: ''\n    //     }\n    // }\n\n    state = {\n            password: '',\n            repassword: '',\n            open: false,\n            open1: false\n    };\n\n    handleSubmit = (event, id) => {\n        if ((this.state.password === this.state.repassword) && this.state.password !== '') {\n            const encrypPW = functions.encryptPW(this.state.password);\n            const dataObj = {\n                id,\n                pw: encrypPW,\n            };\n            axios.post('/updateDrowssap', dataObj).then((res) => {\n                if (res.data === 'SUCCESS') {\n                    this.setState({open: true});\n                }\n                // console.log(\"Area where the data is coming back from updating password\")\n            }).catch((err) => {\n                if(err) {\n                    this.setState({open1: true});\n                }\n            });\n            return false;\n        }\n    };\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name] : value\n        })\n    };\n    handleClose = () => {\n        this.setState({open: false});\n        window.location.href = '/#/login1'\n    };\n\n    handleClose1 = () => {\n        this.setState({open1: false})\n    };\n\n    render () {\n        const {classes} = this.props;\n        let id = this.props.match.params.id;\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\n                            Please provide the following:\n                        </Typography>\n                        <Grid container spacing={24}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"New Password\"\n                                    fullWidth\n                                    autoComplete=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.password}\n                                />\n                            </Grid>\n                            {(this.state.password === this.state.repassword) &&\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"repassword\"\n                                    name=\"repassword\"\n                                    type=\"password\"\n                                    label=\"Please re-enter your password.\"\n                                    fullWidth\n                                    autoComplete=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.repassword}\n                                />\n                            </Grid>\n\n                            }\n\n\n\n                            { (this.state.password !== this.state.repassword)  &&\n                            <Grid item xs={12}>\n                                <TextField\n                                    error\n                                    id=\"repassword\"\n                                    name=\"repassword\"\n                                    type=\"password\"\n                                    label=\"Please re-enter your password.\"\n                                    fullWidth\n                                    autoComplete=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.repassword}\n                                />\n                            </Grid>\n                            }\n\n                            {this.state.password === this.state.repassword ?\n                            <Button\n                                className={classes.button}\n                                size=\"small\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={false}\n                                onClick={(event) => {this.handleSubmit(id)}}\n                            >\n                                Submit\n                            </Button> :\n                                <div></div>\n\n                            }\n\n                        </Grid>\n                    </Paper>\n\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open}\n                        onClose={this.handleClose()}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Success\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Password has successfully been updated.\n                            </Typography>\n                            <Button onClick={this.handleClose()} className={classes.button}>\n                            Close\n                        </Button>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open1}\n                        onClose={this.handleClose1}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Password Was not updated.\n                            </Typography>\n                            <Button onClick={this.handleClose1()}>\n                                Close\n                            </Button>\n                        </div>\n                    </Modal>\n\n\n                </main>\n            </React.Fragment>\n        )\n    }\n}\nupdatePW.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(updatePW);"]},"metadata":{},"sourceType":"module"}