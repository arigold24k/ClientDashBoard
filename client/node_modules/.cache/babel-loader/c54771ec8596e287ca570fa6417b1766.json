{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\src\\\\components\\\\PurposeSection\\\\purpose.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Barcode from 'react-barcode';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      display: 'block',\n      marginTop: theme.spacing.unit * 2\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    barcode: {\n      align: 'center'\n    }\n  };\n};\n\nfunction purposetext(purp) {\n  switch (purp) {\n    case 1:\n      return 'Receipt';\n\n    case 2:\n      return 'Report';\n\n    case 3:\n      return 'Consume';\n\n    case 4:\n      return 'Error';\n\n    case 5:\n      return 'Cycle Count';\n\n    case 6:\n      return 'Production Receipt';\n\n    default:\n      return '';\n    // default:\n    //     throw new Error('Unknown step');\n  }\n}\n\nvar PurposeForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PurposeForm, _React$Component);\n\n  function PurposeForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PurposeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PurposeForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.generateBarCode = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    return _this;\n  }\n\n  _createClass(PurposeForm, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Purpose\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        justify: 'center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"purpose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Purpose\"), React.createElement(Select, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        onOpen: this.handleOpen,\n        value: this.props.purposeval,\n        onChange: this.props.updateval,\n        inputProps: {\n          name: 'purpose',\n          id: 'purp'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"None\")), React.createElement(MenuItem, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Receipt\"), React.createElement(MenuItem, {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Report\"), React.createElement(MenuItem, {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Consume\"), React.createElement(MenuItem, {\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Error\"), React.createElement(MenuItem, {\n        value: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Cycle Count\"), React.createElement(MenuItem, {\n        value: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Production Receipt\"))))), this.props.purposeval === '' ? React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }) : React.createElement(Grid, {\n        item: true,\n        xs: true,\n        className: classes.barcode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Barcode, {\n        value: purposetext(this.props.purposeval).substring(0, 3) + this.props.barcodeVal // width = {2}\n        ,\n        height: 100,\n        format: \"CODE128\",\n        displayValue: true,\n        fontOptions: \"\",\n        font: \"monospace\",\n        textAlign: \"center\",\n        textPosition: \"bottom\",\n        textMargin: 2,\n        fontSize: 20,\n        background: \"#ffffff\",\n        lineColor: \"#000000\",\n        margin: 10,\n        marginTop: undefined,\n        marginBottom: undefined,\n        marginLeft: undefined,\n        marginRight: undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PurposeForm;\n}(React.Component);\n\nPurposeForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(PurposeForm);\n{\n  /*<Grid item xs={24} md={12}>*/\n}\n{\n  /*<TextField required id=\"purpose\" label=\"Name on card\" fullWidth />*/\n}\n{\n  /*</Grid>*/\n}\n{\n  /*<Grid item xs={24} md={12}>*/\n}\n{\n  /*<TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />*/\n}\n{\n  /*</Grid>*/\n}\n{\n  /*<Grid item xs={12} md={6}>*/\n}\n{\n  /*<TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />*/\n}\n{\n  /*</Grid>*/\n}\n{\n  /*<Grid item xs={12} md={6}>*/\n}\n{\n  /*<TextField*/\n}\n{\n  /*required*/\n}\n{\n  /*id=\"cvv\"*/\n}\n{\n  /*label=\"CVV\"*/\n}\n{\n  /*helperText=\"Last three digits on signature strip\"*/\n}\n{\n  /*fullWidth*/\n}\n{\n  /*/>*/\n}\n{\n  /*</Grid>*/\n}","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\project2\\client\\src\\components\\PurposeSection\\purpose.js"],"names":["React","Typography","Grid","Barcode","PropTypes","withStyles","InputLabel","MenuItem","FormControl","Select","styles","theme","button","display","marginTop","spacing","unit","formControl","margin","minWidth","barcode","align","purposetext","purp","PurposeForm","state","open","handleClose","setState","handleOpen","generateBarCode","event","target","name","value","classes","props","purposeval","updateval","id","substring","barcodeVal","undefined","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Barcode from 'react-barcode';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        display: 'block',\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    barcode: {\r\n        align: 'center',\r\n    },\r\n});\r\n\r\nfunction purposetext(purp) {\r\n    switch (purp) {\r\n        case 1:\r\n            return 'Receipt';\r\n        case 2:\r\n            return 'Report';\r\n        case 3:\r\n            return 'Consume';\r\n        case 4:\r\n            return 'Error';\r\n        case 5:\r\n            return 'Cycle Count';\r\n        case 6:\r\n            return 'Production Receipt';\r\n        default:\r\n            return '';\r\n        // default:\r\n        //     throw new Error('Unknown step');\r\n    }\r\n}\r\nclass PurposeForm extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    // handleChange = event => {\r\n    //     this.setState({ [event.target.name]: event.target.value });\r\n    //     console.log(this.state);\r\n    // };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    generateBarCode = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    render()\r\n    {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Purpose\r\n                </Typography>\r\n                <Grid container spacing={24} justify={'center'}>\r\n                    <Grid item xs>\r\n                        <form autoComplete=\"off\">\r\n                            {/*<Button className={classes.button} onClick={this.handleOpen}>*/}\r\n                                {/*Select the PURPOSE.*/}\r\n                            {/*</Button>*/}\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"purpose\">Purpose</InputLabel>\r\n                                <Select\r\n                                    open={this.state.open}\r\n                                    onClose={this.handleClose}\r\n                                    onOpen={this.handleOpen}\r\n                                    value={this.props.purposeval}\r\n                                    onChange={this.props.updateval}\r\n                                    inputProps={{\r\n                                        name: 'purpose',\r\n                                        id: 'purp',\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value={1}>Receipt</MenuItem>\r\n                                    <MenuItem value={2}>Report</MenuItem>\r\n                                    <MenuItem value={3}>Consume</MenuItem>\r\n                                    <MenuItem value={4}>Error</MenuItem>\r\n                                    <MenuItem value={5}>Cycle Count</MenuItem>\r\n                                    <MenuItem value={6}>Production Receipt</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                    </Grid>\r\n                    {this.props.purposeval === '' ?\r\n                        (<Grid item xs>\r\n                        </Grid>) : (\r\n                            <Grid item xs className={classes.barcode}>\r\n                                <Barcode\r\n                                    value = {purposetext(this.props.purposeval).substring(0,3) + this.props.barcodeVal}\r\n                                    // width = {2}\r\n                                    height = {100}\r\n                                    format = {\"CODE128\"}\r\n                                    displayValue = {true}\r\n                                    fontOptions = {\"\"}\r\n                                    font = {\"monospace\"}\r\n                                    textAlign = {\"center\"}\r\n                                    textPosition = {\"bottom\"}\r\n                                    textMargin = {2}\r\n                                    fontSize = {20}\r\n                                    background = {\"#ffffff\"}\r\n                                    lineColor = {\"#000000\"}\r\n                                    margin = {10}\r\n                                    marginTop = {undefined}\r\n                                    marginBottom = {undefined}\r\n                                    marginLeft = {undefined}\r\n                                    marginRight = {undefined}\r\n                                />\r\n                            </Grid>\r\n                        )}\r\n                    <Grid item xs={12}>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nPurposeForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(PurposeForm);\r\n\r\n\r\n\r\n\r\n\r\n{/*<Grid item xs={24} md={12}>*/}\r\n{/*<TextField required id=\"purpose\" label=\"Name on card\" fullWidth />*/}\r\n{/*</Grid>*/}\r\n{/*<Grid item xs={24} md={12}>*/}\r\n{/*<TextField required id=\"cardNumber\" label=\"Card number\" fullWidth />*/}\r\n{/*</Grid>*/}\r\n{/*<Grid item xs={12} md={6}>*/}\r\n{/*<TextField required id=\"expDate\" label=\"Expiry date\" fullWidth />*/}\r\n{/*</Grid>*/}\r\n{/*<Grid item xs={12} md={6}>*/}\r\n{/*<TextField*/}\r\n{/*required*/}\r\n{/*id=\"cvv\"*/}\r\n{/*label=\"CVV\"*/}\r\n{/*helperText=\"Last three digits on signature strip\"*/}\r\n{/*fullWidth*/}\r\n{/*/>*/}\r\n{/*</Grid>*/}\r\n"]},"metadata":{},"sourceType":"module"}