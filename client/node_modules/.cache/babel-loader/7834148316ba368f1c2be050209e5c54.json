{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\SimpleTable\\\\simpleTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport classNames from 'classnames';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport orderBy from 'lodash/orderBy';\nimport TextField from '@material-ui/core/TextField';\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    _classCallCheck(this, EnhancedTableHead);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EnhancedTableHead).apply(this, arguments));\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount,\n          cols = _this$props.cols,\n          incCheckBoxHead = _this$props.incCheckBoxHead;\n      console.log(\"Enhanced header, Order: \" + order + \". OrderBy: \" + orderBy);\n      console.log(\"Enhanced header, cols props \" + cols[0].id);\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, incCheckBoxHead ? React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: numSelected === rowCount,\n        onChange: onSelectAllClick,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }) : ''), cols.map(function (cols) {\n        return React.createElement(TableCell, {\n          key: cols.id,\n          align: cols.numeric ? 'right' : 'left',\n          display: \"flex\",\n          padding: cols.disablePadding ? 'none' : 'default',\n          sortDirection: orderBy === cols.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          display: \"block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: cols.numeric ? 'bottom-end' : 'bottom-start',\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === cols.id,\n          direction: order,\n          onClick: function onClick(event) {\n            return _this.props.handleSort1(event, cols.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, cols.label))), React.createElement(\"div\", {\n          display: \"block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          name: cols.id,\n          hintText: \"Query\",\n          floatingLabelText: \"Query\",\n          value: _this.props.query,\n          onChange: function onChange(e) {\n            return _this.props.handleQueryChange(e);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        })));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.primary.main,\n      backgroundColor: lighten(theme.palette.primary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.dark\n    },\n    spacer: {\n      flex: '1 1 100%'\n    },\n    actions: {\n      color: theme.palette.text.primary\n    },\n    title: {\n      flex: '0 0 auto'\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes,\n      title = props.title;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, title)), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      hover: 'primary'\n    },\n    table: {\n      minWidth: 1020,\n      backgroundColor: 'primary'\n    },\n    highlight: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.dark\n    },\n    rowItem: {\n      width: '90%'\n    }\n  };\n};\n\nvar initialState = {\n  selected: [],\n  page: 0,\n  rowsPerPage: 5,\n  columnToSort: '',\n  sortDirection: 'desc',\n  query: '',\n  columnToQuery: ''\n};\n\nvar EnhancedTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EnhancedTable, _React$Component2);\n\n  function EnhancedTable(props) {\n    var _this2;\n\n    _classCallCheck(this, EnhancedTable);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(EnhancedTable).call(this, props));\n    _this2.state = initialState;\n\n    _this2.handleSort = function (event, columnName) {\n      console.log(\"sort event object: \");\n      console.log(\"Sort data is being hit Column Name:\", columnName);\n\n      _this2.setState({\n        columnToSort: columnName,\n        sortDirection: _this2.state.columnToSort === columnName ? _this2.state.sortDirection === 'desc' ? 'asc' : 'desc' : 'asc'\n      });\n\n      console.log(\"State of the state after the update in the sort data function \", _this2.state);\n    };\n\n    _this2.handleQueryChange1 = function (event) {\n      _this2.setState({\n        columnToQuery: event.target.name,\n        query: event.target.value\n      });\n    };\n\n    _this2.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this2.setState({\n          selected: _this2.state.rows.map(function (n) {\n            return n.id;\n          })\n        });\n\n        return;\n      }\n\n      _this2.setState({\n        selected: []\n      });\n    };\n\n    _this2.handleClick = function (event, newSel) {\n      var selected = _this2.state.selected;\n      var selectedIndex = selected.indexOf(newSel);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, newSel);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this2.setState({\n        selected: newSelected\n      });\n\n      console.log(\"update selected on dasboard being hit, \", _this2.state);\n    };\n\n    _this2.handleChangePage = function (event, page) {\n      _this2.setState({\n        page: page\n      });\n    };\n\n    _this2.handleChangeRowsPerPage = function (event) {\n      _this2.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this2.isSelected = function (id) {\n      return _this2.props.selected.indexOf(id) !== -1;\n    };\n\n    var dataPassed = _this2.props.dataPassed; //const {dataPassed, selected} = this.props;\n\n    _this2.state = _objectSpread({}, initialState, {\n      rows: dataPassed,\n      selected: []\n    });\n    return _this2;\n  }\n\n  _createClass(EnhancedTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Component Did Mount\");\n      var dataPassed = this.props.dataPassed;\n      console.log(\"component will moutn has this array being passed to it \".concat(dataPassed));\n      this.setState({\n        rows: dataPassed\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          columns = _this$props2.columns,\n          tableTitle = _this$props2.tableTitle,\n          incCheckBox = _this$props2.incCheckBox;\n      var rows = this.props.dataPassed;\n      var _this$state = this.state,\n          sortDirection = _this$state.sortDirection,\n          columnToSort = _this$state.columnToSort,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\n      var formQuery = this.state.query.toLowerCase();\n      console.log(\"data being passed to table\", this.state.columnToSort);\n      console.log(\"data being passed to table, columns\", columns);\n      console.log(\"State in the table, \", this.state);\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(EnhancedTableToolbar, {\n        numSelected: this.state.selected.length,\n        title: tableTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": tableTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        incCheckBoxHead: incCheckBox,\n        numSelected: this.state.selected.length,\n        order: sortDirection,\n        orderBy: columnToSort,\n        onSelectAllClick: this.handleSelectAllClick,\n        rowCount: rows.length,\n        cols: columns,\n        handleSort1: this.handleSort,\n        handleQueryChange: this.handleQueryChange1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, orderBy(this.state.query ? rows.filter(function (x) {\n        return x[_this3.state.columnToQuery].toLowerCase().includes(formQuery);\n      }) : rows, this.state.columnToSort, this.state.sortDirection).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          hover: true,\n          onClick: function onClick(event) {\n            return _this3.handleClick(event, row.id);\n          },\n          role: \"checkbox\",\n          tabIndex: -1,\n          className: classes.rowItem,\n          selected: _this3.isSelected(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, incCheckBox ? React.createElement(Checkbox, {\n          color: \"primary\",\n          checked: _this3.isSelected(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }) : ''), columns.map(function (col) {\n          return React.createElement(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            align: col.numeric ? \"right\" : \"left\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296\n            },\n            __self: this\n          }, col.numeric ? row[col.id].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : row[col.id]);\n        }));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 48 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EnhancedTable;\n}(React.Component);\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\SimpleTable\\simpleTable.js"],"names":["React","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","TablePagination","Checkbox","Tooltip","TableSortLabel","Typography","Toolbar","classNames","lighten","orderBy","TextField","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","cols","incCheckBoxHead","console","log","id","map","numeric","disablePadding","event","handleSort1","label","query","e","handleQueryChange","Component","propTypes","number","isRequired","func","string","toolbarStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","primary","main","backgroundColor","light","text","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","object","styles","width","marginTop","hover","table","minWidth","rowItem","initialState","selected","page","rowsPerPage","columnToSort","sortDirection","columnToQuery","EnhancedTable","state","handleSort","columnName","setState","handleQueryChange1","target","name","value","handleSelectAllClick","checked","rows","n","handleClick","newSel","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","isSelected","dataPassed","columns","tableTitle","incCheckBox","emptyRows","Math","min","formQuery","toLowerCase","tableWrapper","filter","x","includes","row","col","toString","replace","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport classNames from 'classnames';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport orderBy from 'lodash/orderBy';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n    render() {\r\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount, cols, incCheckBoxHead } = this.props;\r\n        console.log(\"Enhanced header, Order: \" + order + \". OrderBy: \" + orderBy);\r\n        console.log(\"Enhanced header, cols props \" + cols[0].id);\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        {incCheckBoxHead ? <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            color='primary'\r\n                        /> : ''}\r\n\r\n                    </TableCell>\r\n                    {cols.map(\r\n                        cols => (\r\n                            <TableCell\r\n                                key={cols.id}\r\n                                align={cols.numeric ? 'right' : 'left'}\r\n                                display='flex'\r\n                                padding={cols.disablePadding ? 'none' : 'default'}\r\n                                sortDirection={orderBy === cols.id ? order : false}\r\n                            >\r\n                                <div display='block'>\r\n                                    <Tooltip\r\n                                        title=\"Sort\"\r\n                                        placement={cols.numeric ? 'bottom-end' : 'bottom-start'}\r\n                                        enterDelay={300}\r\n                                    >\r\n                                        <TableSortLabel\r\n                                            active={orderBy === cols.id}\r\n                                            direction={order}\r\n                                            onClick={(event) => this.props.handleSort1(event, cols.id)}\r\n                                        >\r\n                                            {cols.label}\r\n                                        </TableSortLabel>\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div display='block'>\r\n                                    <TextField\r\n                                        name={cols.id}\r\n                                        hintText=\"Query\"\r\n                                        floatingLabelText=\"Query\"\r\n                                        value={this.props.query}\r\n                                        onChange={(e) => this.props.handleQueryChange(e)}\r\n\r\n                                    />\r\n                                </div>\r\n                            </TableCell>\r\n                        ),\r\n                        this,\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n}\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n    root: {\r\n        paddingRight: theme.spacing.unit,\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.primary.main,\r\n                backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.primary.dark,\r\n            },\r\n    spacer: {\r\n        flex: '1 1 100%',\r\n    },\r\n    actions: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    title: {\r\n        flex: '0 0 auto',\r\n    },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n    const { numSelected, classes, title } = props;\r\n    return (\r\n        <Toolbar\r\n            className={classNames(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <div className={classes.title}>\r\n                {numSelected > 0 ? (\r\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                        {title}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n            <div className={classes.spacer} />\r\n            <div className={classes.actions}>\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        hover: 'primary'\r\n    },\r\n    table: {\r\n        minWidth: 1020,\r\n        backgroundColor: 'primary',\r\n    },\r\n    highlight: {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    rowItem: {\r\n        width: '90%'\r\n    }\r\n});\r\nconst initialState = {\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    columnToSort: '',\r\n    sortDirection: 'desc',\r\n    query: '',\r\n    columnToQuery: '',\r\n\r\n};\r\nclass EnhancedTable extends React.Component {\r\n    state = initialState;\r\n    constructor (props) {\r\n        super(props);\r\n        const {dataPassed} = this.props;\r\n        //const {dataPassed, selected} = this.props;\r\n        this.state = {\r\n            ...initialState,\r\n            rows: dataPassed,\r\n            selected: []\r\n        };\r\n    };\r\n    handleSort = (event, columnName) => {\r\n        console.log(\"sort event object: \");\r\n        console.log(\"Sort data is being hit Column Name:\", columnName);\r\n        this.setState({\r\n            columnToSort: columnName,\r\n            sortDirection: this.state.columnToSort === columnName ? (this.state.sortDirection === 'desc' ? 'asc' : 'desc') : 'asc'\r\n        });\r\n        console.log(\"State of the state after the update in the sort data function \", this.state);\r\n    };\r\n\r\n    handleQueryChange1 = (event) => {\r\n        this.setState({\r\n            columnToQuery: event.target.name,\r\n            query: event.target.value\r\n        })\r\n    };\r\n\r\n    componentDidMount () {\r\n        console.log(\"Component Did Mount\");\r\n        const { dataPassed } = this.props;\r\n        console.log(`component will moutn has this array being passed to it ${dataPassed}`);\r\n        this.setState({\r\n            rows: dataPassed\r\n        })\r\n    };\r\n\r\n    handleSelectAllClick = event => {\r\n        if (event.target.checked) {\r\n            this.setState({ selected: this.state.rows.map(n => n.id) });\r\n            return;\r\n        }\r\n        this.setState({ selected: [] });\r\n    };\r\n\r\n    handleClick = (event, newSel) => {\r\n        const { selected } = this.state;\r\n        const selectedIndex = selected.indexOf(newSel);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, newSel);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        this.setState({\r\n            selected: newSelected\r\n        });\r\n        console.log(\"update selected on dasboard being hit, \", this.state);\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    isSelected = id => this.props.selected.indexOf(id) !== -1;\r\n\r\n    render() {\r\n        const { classes, columns, tableTitle, incCheckBox} = this.props;\r\n        const rows = this.props.dataPassed;\r\n        const { sortDirection, columnToSort, rowsPerPage, page } = this.state;\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\r\n        const formQuery = this.state.query.toLowerCase();\r\n        console.log(\"data being passed to table\", this.state.columnToSort);\r\n        console.log(\"data being passed to table, columns\", columns);\r\n        console.log(\"State in the table, \", this.state);\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <EnhancedTableToolbar numSelected={this.state.selected.length} title={tableTitle} />\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table} aria-labelledby={tableTitle}>\r\n                        <EnhancedTableHead\r\n                            incCheckBoxHead = {incCheckBox}\r\n                            numSelected={this.state.selected.length}\r\n                            order={sortDirection}\r\n                            orderBy={columnToSort}\r\n                            onSelectAllClick={this.handleSelectAllClick}\r\n                            rowCount={rows.length}\r\n                            cols={columns}\r\n                            handleSort1={this.handleSort}\r\n                            handleQueryChange={this.handleQueryChange1}\r\n                        />\r\n                        <TableBody>\r\n\r\n                            {orderBy(this.state.query ? rows.filter(x => x[this.state.columnToQuery].toLowerCase().includes(formQuery)) : rows, this.state.columnToSort, this.state.sortDirection).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                                <TableRow\r\n                                    key={row.id}\r\n                                    hover\r\n                                    onClick={event => this.handleClick(event, row.id)}\r\n                                    role=\"checkbox\"\r\n                                    tabIndex={-1}\r\n                                    className={classes.rowItem}\r\n                                    selected={this.isSelected(row.id)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        {incCheckBox ? <Checkbox color='primary' checked={this.isSelected(row.id)} /> : ''}\r\n                                    </TableCell>\r\n                                    {columns.map((col) => (\r\n                                        <TableCell component=\"th\" scope=\"row\" align={col.numeric ? \"right\" : \"left\"}>\r\n                                            {col.numeric ? row[col.id].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : row[col.id]}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 48 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);"]},"metadata":{},"sourceType":"module"}