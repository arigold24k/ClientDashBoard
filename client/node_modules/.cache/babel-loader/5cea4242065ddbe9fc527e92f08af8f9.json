{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import{withStyles}from'@material-ui/core/styles';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableHead from'@material-ui/core/TableHead';import TableRow from'@material-ui/core/TableRow';import Paper from'@material-ui/core/Paper';import TablePagination from'@material-ui/core/TablePagination';import Checkbox from'@material-ui/core/Checkbox';import Tooltip from'@material-ui/core/Tooltip';import TableSortLabel from'@material-ui/core/TableSortLabel';import Typography from'@material-ui/core/Typography';import Toolbar from'@material-ui/core/Toolbar';import classNames from'classnames';import{lighten}from'@material-ui/core/styles/colorManipulator';import orderBy from'lodash/orderBy';import TextField from'@material-ui/core/TextField';var EnhancedTableHead=/*#__PURE__*/function(_React$Component){_inherits(EnhancedTableHead,_React$Component);function EnhancedTableHead(){_classCallCheck(this,EnhancedTableHead);return _possibleConstructorReturn(this,_getPrototypeOf(EnhancedTableHead).apply(this,arguments));}_createClass(EnhancedTableHead,[{key:\"render\",value:function render(){var _this=this;var _this$props=this.props,onSelectAllClick=_this$props.onSelectAllClick,order=_this$props.order,orderBy=_this$props.orderBy,numSelected=_this$props.numSelected,rowCount=_this$props.rowCount,cols=_this$props.cols,incCheckBoxHead=_this$props.incCheckBoxHead;// console.log(\"Enhanced header, Order: \" + order + \". OrderBy: \" + orderBy);\n// console.log(\"Enhanced header, cols props \" + cols[0].id);\nreturn React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,{padding:\"checkbox\"},incCheckBoxHead?React.createElement(Checkbox,{indeterminate:numSelected>0&&numSelected<rowCount,checked:numSelected===rowCount,onChange:onSelectAllClick,color:\"primary\"}):''),cols.map(function(cols){return React.createElement(TableCell,{key:cols.id,align:cols.numeric?'right':'left',display:\"flex\",padding:cols.disablePadding?'none':'default',sortDirection:orderBy===cols.id?order:false},React.createElement(\"div\",{display:\"block\"},React.createElement(Tooltip,{title:\"Sort\",placement:cols.numeric?'bottom-end':'bottom-start',enterDelay:300},React.createElement(TableSortLabel,{active:orderBy===cols.id,direction:order,onClick:function onClick(event){return _this.props.handleSort1(event,cols.id);}},cols.label))),React.createElement(\"div\",{display:\"block\"},React.createElement(TextField,{name:cols.id,hinttext:\"Query\",floatinglabeltext:\"Query\",value:_this.props.query,onChange:function onChange(e){return _this.props.handleQueryChange(e);}})));},this)));}}]);return EnhancedTableHead;}(React.Component);var toolbarStyles=function toolbarStyles(theme){return{root:{paddingRight:theme.spacing.unit},highlight:theme.palette.type==='light'?{color:theme.palette.primary.main,backgroundColor:lighten(theme.palette.primary.light,0.85)}:{color:theme.palette.text.primary,backgroundColor:theme.palette.primary.dark},spacer:{flex:'1 1 100%'},actions:{color:theme.palette.text.primary},title:{flex:'0 0 auto'}};};var EnhancedTableToolbar=function EnhancedTableToolbar(props){var numSelected=props.numSelected,classes=props.classes,title=props.title;return React.createElement(Toolbar,{className:classNames(classes.root,_defineProperty({},classes.highlight,numSelected>0))},React.createElement(\"div\",{className:classes.title},numSelected>0?React.createElement(Typography,{color:\"inherit\",variant:\"subtitle1\"},numSelected,\" selected\"):React.createElement(Typography,{variant:\"h6\",id:\"tableTitle\"},title)),React.createElement(\"div\",{className:classes.spacer}),React.createElement(\"div\",{className:classes.actions}));};EnhancedTableToolbar=withStyles(toolbarStyles)(EnhancedTableToolbar);var styles=function styles(theme){return{root:{width:'100%',marginTop:theme.spacing.unit*3,hover:'primary'},table:{minWidth:1020,backgroundColor:'primary'},highlight:{color:theme.palette.text.primary,backgroundColor:theme.palette.primary.dark},rowItem:{width:'90%'}};};var initialState={selected:[],page:0,rowsPerPage:5,columnToSort:'',sortDirection:'desc',query:'',columnToQuery:''};var EnhancedTable=/*#__PURE__*/function(_React$Component2){_inherits(EnhancedTable,_React$Component2);function EnhancedTable(props){var _this2;_classCallCheck(this,EnhancedTable);_this2=_possibleConstructorReturn(this,_getPrototypeOf(EnhancedTable).call(this,props));_this2.state=initialState;_this2.handleSort=function(event,columnName){// console.log(\"sort event object: \");\n// console.log(\"Sort data is being hit Column Name:\", columnName);\n_this2.setState({columnToSort:columnName,sortDirection:_this2.state.columnToSort===columnName?_this2.state.sortDirection==='desc'?'asc':'desc':'asc'});// console.log(\"State of the state after the update in the sort data function \", this.state);\n};_this2.handleQueryChange1=function(event){_this2.setState({columnToQuery:event.target.name,query:event.target.value});};_this2.handleSelectAllClick=function(event){_this2.props.handleSelAll(event.target.checked,_this2.state.rows);};_this2.handleClick=function(event,id){_this2.props.handleSelected(id);};_this2.handleChangePage=function(event,page){_this2.setState({page:page});};_this2.handleChangeRowsPerPage=function(event){_this2.setState({rowsPerPage:event.target.value});};_this2.isSelected=function(id){return _this2.props.selected.indexOf(id)!==-1;};var dataPassed=_this2.props.dataPassed;//const {dataPassed, selected} = this.props;\n_this2.state=_objectSpread({},initialState,{rows:dataPassed,selected:[]});return _this2;}_createClass(EnhancedTable,[{key:\"componentDidMount\",value:function componentDidMount(){// console.log(\"Component Did Mount\");\nvar dataPassed=this.props.dataPassed;// console.log(`component will moutn has this array being passed to it ${dataPassed}`);\nthis.setState({rows:dataPassed});}},{key:\"render\",value:function render(){var _this3=this;var _this$props2=this.props,classes=_this$props2.classes,columns=_this$props2.columns,tableTitle=_this$props2.tableTitle,selected=_this$props2.selected,incCheckBox=_this$props2.incCheckBox;var rows=this.props.dataPassed;var _this$state=this.state,sortDirection=_this$state.sortDirection,columnToSort=_this$state.columnToSort,rowsPerPage=_this$state.rowsPerPage,page=_this$state.page;var emptyRows=rowsPerPage-Math.min(rowsPerPage,(rows!=null?rows.length:0)-page*rowsPerPage);var formQuery=this.state.query.toLowerCase();// console.log(\"data being passed to table\", this.state.columnToSort);\n// console.log(\"data being passed to table, columns\", columns);\n// console.log(\"State in the table, \", this.state);\nreturn React.createElement(Paper,{className:classes.root},React.createElement(EnhancedTableToolbar,{numSelected:selected.length,title:tableTitle}),React.createElement(\"div\",{className:classes.tableWrapper},React.createElement(Table,{className:classes.table,\"aria-labelledby\":tableTitle},React.createElement(EnhancedTableHead,{incCheckBoxHead:incCheckBox,numSelected:selected.length,order:sortDirection,orderBy:columnToSort,onSelectAllClick:this.handleSelectAllClick,rowCount:rows.length,cols:columns,handleSort1:this.handleSort,handleQueryChange:this.handleQueryChange1}),React.createElement(TableBody,null,orderBy(this.state.query?rows.filter(function(x){return x[_this3.state.columnToQuery].toLowerCase().includes(formQuery);}):rows,this.state.columnToSort,this.state.sortDirection).slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(row){return React.createElement(TableRow,{key:row.id,hover:true,onClick:function onClick(event){return _this3.handleClick(event,row.id);},role:\"checkbox\",tabIndex:-1,className:classes.rowItem,selected:_this3.isSelected(row.id)},React.createElement(TableCell,{padding:\"checkbox\"},incCheckBox?React.createElement(Checkbox,{color:\"primary\",checked:_this3.isSelected(row.id)}):''),columns.map(function(col){return React.createElement(TableCell,{component:\"th\",scope:\"row\",align:col.numeric?\"right\":\"left\",key:col.id},col.numeric?row[col.id].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\"):row[col.id]);}));}),emptyRows>0&&React.createElement(TableRow,{style:{height:48*emptyRows}},React.createElement(TableCell,{colSpan:6}))))),React.createElement(TablePagination,{rowsPerPageOptions:[5,10,25],component:\"div\",count:rows.length,rowsPerPage:rowsPerPage,page:page,backIconButtonProps:{'aria-label':'Previous Page'},nextIconButtonProps:{'aria-label':'Next Page'},onChangePage:this.handleChangePage,onChangeRowsPerPage:this.handleChangeRowsPerPage}));}}]);return EnhancedTable;}(React.Component);export default withStyles(styles)(EnhancedTable);// const actionsStyles = theme => ({\n//     root: {\n//         flexShrink: 0,\n//         color: theme.palette.text.secondary,\n//         marginLeft: theme.spacing.unit * 2.5,\n//     },\n// });\n//\n// class TablePaginationActions extends React.Component {\n//     handleFirstPageButtonClick = event => {\n//         this.props.onChangePage(event, 0);\n//     };\n//\n//     handleBackButtonClick = event => {\n//         this.props.onChangePage(event, this.props.page - 1);\n//     };\n//\n//     handleNextButtonClick = event => {\n//         this.props.onChangePage(event, this.props.page + 1);\n//     };\n//\n//     handleLastPageButtonClick = event => {\n//         this.props.onChangePage(\n//             event,\n//             Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n//         );\n//     };\n//\n//     render() {\n//         const { classes, count, page, rowsPerPage, theme } = this.props;\n//\n//         return (\n//             <div className={classes.root}>\n//                 <IconButton\n//                     onClick={this.handleFirstPageButtonClick}\n//                     disabled={page === 0}\n//                     aria-label=\"First Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n//                 </IconButton>\n//                 <IconButton\n//                     onClick={this.handleBackButtonClick}\n//                     disabled={page === 0}\n//                     aria-label=\"Previous Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n//                 </IconButton>\n//                 <IconButton\n//                     onClick={this.handleNextButtonClick}\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//                     aria-label=\"Next Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n//                 </IconButton>\n//                 <IconButton\n//                     onClick={this.handleLastPageButtonClick}\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//                     aria-label=\"Last Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n//                 </IconButton>\n//             </div>\n//         );\n//     }\n// }\n//\n// TablePaginationActions.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//     count: PropTypes.number.isRequired,\n//     onChangePage: PropTypes.func.isRequired,\n//     page: PropTypes.number.isRequired,\n//     rowsPerPage: PropTypes.number.isRequired,\n//     theme: PropTypes.object.isRequired,\n// };\n//\n// const TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n//     TablePaginationActions,\n// );\n//\n// const styles = theme => ({\n//     root: {\n//         width: 'auto',\n//         marginTop: theme.spacing.unit * 3,\n//     },\n//     table: {\n//         minWidth: 500,\n//     },\n//     tableWrapper: {\n//         overflowX: 'auto',\n//     },\n// });\n//\n// const initialState = {\n//     rows: [],\n//     page: 0,\n//     rowsPerPage: 5,\n// };\n//\n// class SimpleTable extends React.Component {\n//     constructor (props) {\n//         super(props);\n//         const {dataPassed} = this.props;\n//         this.state = {\n//                 ...initialState,\n//                 rows: dataPassed\n//         };\n//     }\n//     componentDidMount () {\n//         // console.log(\"Component Did Mount\");\n//         const { dataPassed } = this.props;\n//         // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\n//         this.setState({\n//             rows: dataPassed\n//         })\n//     }\n//     handleChangePage = (event, page) => {\n//         this.setState({ page });\n//     };\n//     handleChangeRowsPerPage = event => {\n//         this.setState({ page: 0, rowsPerPage: event.target.value });\n//     };\n//     render() {\n//         const { classes, columns, sortDirection, columnToSort } = this.props;\n//         const rows = this.props.dataPassed;\n//         const { rowsPerPage, page } = this.state;\n//         const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\n//         // console.log(\"This is the props \" + sortDirection + \" \" + columnToSort);\n//         return (\n//             <Paper className={classes.root}>\n//                 <div className={classes.tableWrapper}>\n//                     <Table className={classes.table}>\n//                                      <TableHead>\n//                                        <TableRow>\n//                                            <TableCell padding=\"checkbox\">\n//                                                <Checkbox />\n//                                            </TableCell>\n//                                            {columns.map((col) => (\n//                                                <TableCell align=\"left\">\n//                                                    <div onClick={() => this.props.handleSort(col.prop)}><span>{col.name} {columnToSort === col.prop ? (sortDirection === \"asc\" ? <UpArrow/> : <DownArrow/>) : null} </span></div>\n//                                                </TableCell>\n//                                            ))}\n//                                         </TableRow>\n//                                        </TableHead>\n//                         <TableBody>\n//                             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n//                                 <TableRow key={row.id}>\n//\n//                                     {columns.map((col) => (\n//                                         <TableCell component=\"th\" scope=\"row\" align=\"left\">\n//                                             {row[col.prop]}\n//                                         </TableCell>\n//                                     ))}\n//                                 </TableRow>\n//                             ))}\n//                             {emptyRows > 0 && (\n//                                 <TableRow style={{ height: 48 * emptyRows }}>\n//                                     <TableCell colSpan={6} />\n//                                 </TableRow>\n//                             )}\n//                         </TableBody>\n//                         <TableFooter>\n//                             <TableRow>\n//                                 <TablePagination\n//                                     rowsPerPageOptions={[5, 10, 25]}\n//                                     colSpan={3}\n//                                     count={rows.length}\n//                                     rowsPerPage={rowsPerPage}\n//                                     page={page}\n//                                     SelectProps={{\n//                                         native: true,\n//                                     }}\n//                                     onChangePage={this.handleChangePage}\n//                                     onChangeRowsPerPage={this.handleChangeRowsPerPage}\n//                                     ActionsComponent={TablePaginationActionsWrapped}\n//                                 />\n//                             </TableRow>\n//                         </TableFooter>\n//                     </Table>\n//                 </div>\n//             </Paper>\n//         );\n//     }\n// }\n// SimpleTable.propTypes = {\n//     classes: PropTypes.object.isRequired,\n// };\n//\n// export default withStyles(styles)(SimpleTable);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\SimpleTable\\simpleTable.js"],"names":["React","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","TablePagination","Checkbox","Tooltip","TableSortLabel","Typography","Toolbar","classNames","lighten","orderBy","TextField","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","cols","incCheckBoxHead","map","id","numeric","disablePadding","event","handleSort1","label","query","e","handleQueryChange","Component","toolbarStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","primary","main","backgroundColor","light","text","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","styles","width","marginTop","hover","table","minWidth","rowItem","initialState","selected","page","rowsPerPage","columnToSort","sortDirection","columnToQuery","EnhancedTable","state","handleSort","columnName","setState","handleQueryChange1","target","name","value","handleSelectAllClick","handleSelAll","checked","rows","handleClick","handleSelected","handleChangePage","handleChangeRowsPerPage","isSelected","indexOf","dataPassed","columns","tableTitle","incCheckBox","emptyRows","Math","min","length","formQuery","toLowerCase","tableWrapper","filter","x","includes","slice","row","col","toString","replace","height"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport classNames from 'classnames';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport orderBy from 'lodash/orderBy';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n    render() {\r\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount, cols, incCheckBoxHead } = this.props;\r\n        // console.log(\"Enhanced header, Order: \" + order + \". OrderBy: \" + orderBy);\r\n        // console.log(\"Enhanced header, cols props \" + cols[0].id);\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        {incCheckBoxHead ? <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            color='primary'\r\n                        /> : ''}\r\n\r\n                    </TableCell>\r\n                    {cols.map(\r\n                        cols => (\r\n                            <TableCell\r\n                                key={cols.id}\r\n                                align={cols.numeric ? 'right' : 'left'}\r\n                                display='flex'\r\n                                padding={cols.disablePadding ? 'none' : 'default'}\r\n                                sortDirection={orderBy === cols.id ? order : false}\r\n                            >\r\n                                <div display='block'>\r\n                                    <Tooltip\r\n                                        title=\"Sort\"\r\n                                        placement={cols.numeric ? 'bottom-end' : 'bottom-start'}\r\n                                        enterDelay={300}\r\n                                    >\r\n                                        <TableSortLabel\r\n                                            active={orderBy === cols.id}\r\n                                            direction={order}\r\n                                            onClick={(event) => this.props.handleSort1(event, cols.id)}\r\n                                        >\r\n                                            {cols.label}\r\n                                        </TableSortLabel>\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div display='block'>\r\n                                    <TextField\r\n                                        name={cols.id}\r\n                                        hinttext=\"Query\"\r\n                                        floatinglabeltext=\"Query\"\r\n                                        value={this.props.query}\r\n                                        onChange={(e) => this.props.handleQueryChange(e)}\r\n\r\n                                    />\r\n                                </div>\r\n                            </TableCell>\r\n                        ),\r\n                        this,\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n}\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n    root: {\r\n        paddingRight: theme.spacing.unit,\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.primary.main,\r\n                backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.primary.dark,\r\n            },\r\n    spacer: {\r\n        flex: '1 1 100%',\r\n    },\r\n    actions: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    title: {\r\n        flex: '0 0 auto',\r\n    },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n    const { numSelected, classes, title } = props;\r\n    return (\r\n        <Toolbar\r\n            className={classNames(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <div className={classes.title}>\r\n                {numSelected > 0 ? (\r\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                        {title}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n            <div className={classes.spacer} />\r\n            <div className={classes.actions}>\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        hover: 'primary'\r\n    },\r\n    table: {\r\n        minWidth: 1020,\r\n        backgroundColor: 'primary',\r\n    },\r\n    highlight: {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    rowItem: {\r\n        width: '90%'\r\n    }\r\n});\r\nconst initialState = {\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    columnToSort: '',\r\n    sortDirection: 'desc',\r\n    query: '',\r\n    columnToQuery: '',\r\n\r\n};\r\nclass EnhancedTable extends React.Component {\r\n    state = initialState;\r\n    constructor (props) {\r\n        super(props);\r\n        const {dataPassed} = this.props;\r\n        //const {dataPassed, selected} = this.props;\r\n        this.state = {\r\n            ...initialState,\r\n            rows: dataPassed,\r\n            selected: []\r\n        };\r\n    };\r\n    handleSort = (event, columnName) => {\r\n        // console.log(\"sort event object: \");\r\n        // console.log(\"Sort data is being hit Column Name:\", columnName);\r\n        this.setState({\r\n            columnToSort: columnName,\r\n            sortDirection: this.state.columnToSort === columnName ? (this.state.sortDirection === 'desc' ? 'asc' : 'desc') : 'asc'\r\n        });\r\n        // console.log(\"State of the state after the update in the sort data function \", this.state);\r\n    };\r\n\r\n    handleQueryChange1 = (event) => {\r\n        this.setState({\r\n            columnToQuery: event.target.name,\r\n            query: event.target.value\r\n        })\r\n    };\r\n\r\n    componentDidMount () {\r\n        // console.log(\"Component Did Mount\");\r\n        const { dataPassed } = this.props;\r\n        // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\r\n        this.setState({\r\n            rows: dataPassed\r\n        })\r\n    };\r\n\r\n    handleSelectAllClick = event => {\r\n        this.props.handleSelAll(event.target.checked, this.state.rows);\r\n    };\r\n\r\n    handleClick = (event, id) => {\r\n        this.props.handleSelected(id);\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    isSelected = id => this.props.selected.indexOf(id) !== -1;\r\n\r\n    render() {\r\n        const { classes, columns, tableTitle, selected, incCheckBox} = this.props;\r\n        const rows = this.props.dataPassed;\r\n        const { sortDirection, columnToSort, rowsPerPage, page } = this.state;\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\r\n        const formQuery = this.state.query.toLowerCase();\r\n        // console.log(\"data being passed to table\", this.state.columnToSort);\r\n        // console.log(\"data being passed to table, columns\", columns);\r\n        // console.log(\"State in the table, \", this.state);\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <EnhancedTableToolbar numSelected={selected.length} title={tableTitle} />\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table} aria-labelledby={tableTitle}>\r\n                        <EnhancedTableHead\r\n                            incCheckBoxHead = {incCheckBox}\r\n                            numSelected={selected.length}\r\n                            order={sortDirection}\r\n                            orderBy={columnToSort}\r\n                            onSelectAllClick={this.handleSelectAllClick}\r\n                            rowCount={rows.length}\r\n                            cols={columns}\r\n                            handleSort1={this.handleSort}\r\n                            handleQueryChange={this.handleQueryChange1}\r\n                        />\r\n                        <TableBody>\r\n\r\n                            {orderBy(this.state.query ? rows.filter(x => x[this.state.columnToQuery].toLowerCase().includes(formQuery)) : rows, this.state.columnToSort, this.state.sortDirection).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                                <TableRow\r\n                                    key={row.id}\r\n                                    hover\r\n                                    onClick={event => this.handleClick(event, row.id)}\r\n                                    role=\"checkbox\"\r\n                                    tabIndex={-1}\r\n                                    className={classes.rowItem}\r\n                                    selected={this.isSelected(row.id)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        {incCheckBox ? <Checkbox color='primary' checked={this.isSelected(row.id)} /> : ''}\r\n                                    </TableCell>\r\n                                    {columns.map((col) => (\r\n                                        <TableCell component=\"th\" scope=\"row\" align={col.numeric ? \"right\" : \"left\"} key={col.id}>\r\n                                            {col.numeric ? row[col.id].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : row[col.id]}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 48 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);\r\n\r\n// const actionsStyles = theme => ({\r\n//     root: {\r\n//         flexShrink: 0,\r\n//         color: theme.palette.text.secondary,\r\n//         marginLeft: theme.spacing.unit * 2.5,\r\n//     },\r\n// });\r\n//\r\n// class TablePaginationActions extends React.Component {\r\n//     handleFirstPageButtonClick = event => {\r\n//         this.props.onChangePage(event, 0);\r\n//     };\r\n//\r\n//     handleBackButtonClick = event => {\r\n//         this.props.onChangePage(event, this.props.page - 1);\r\n//     };\r\n//\r\n//     handleNextButtonClick = event => {\r\n//         this.props.onChangePage(event, this.props.page + 1);\r\n//     };\r\n//\r\n//     handleLastPageButtonClick = event => {\r\n//         this.props.onChangePage(\r\n//             event,\r\n//             Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n//         );\r\n//     };\r\n//\r\n//     render() {\r\n//         const { classes, count, page, rowsPerPage, theme } = this.props;\r\n//\r\n//         return (\r\n//             <div className={classes.root}>\r\n//                 <IconButton\r\n//                     onClick={this.handleFirstPageButtonClick}\r\n//                     disabled={page === 0}\r\n//                     aria-label=\"First Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n//                 </IconButton>\r\n//                 <IconButton\r\n//                     onClick={this.handleBackButtonClick}\r\n//                     disabled={page === 0}\r\n//                     aria-label=\"Previous Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n//                 </IconButton>\r\n//                 <IconButton\r\n//                     onClick={this.handleNextButtonClick}\r\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//                     aria-label=\"Next Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n//                 </IconButton>\r\n//                 <IconButton\r\n//                     onClick={this.handleLastPageButtonClick}\r\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//                     aria-label=\"Last Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n//                 </IconButton>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n//\r\n// TablePaginationActions.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n//     count: PropTypes.number.isRequired,\r\n//     onChangePage: PropTypes.func.isRequired,\r\n//     page: PropTypes.number.isRequired,\r\n//     rowsPerPage: PropTypes.number.isRequired,\r\n//     theme: PropTypes.object.isRequired,\r\n// };\r\n//\r\n// const TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\r\n//     TablePaginationActions,\r\n// );\r\n//\r\n// const styles = theme => ({\r\n//     root: {\r\n//         width: 'auto',\r\n//         marginTop: theme.spacing.unit * 3,\r\n//     },\r\n//     table: {\r\n//         minWidth: 500,\r\n//     },\r\n//     tableWrapper: {\r\n//         overflowX: 'auto',\r\n//     },\r\n// });\r\n//\r\n// const initialState = {\r\n//     rows: [],\r\n//     page: 0,\r\n//     rowsPerPage: 5,\r\n// };\r\n//\r\n// class SimpleTable extends React.Component {\r\n//     constructor (props) {\r\n//         super(props);\r\n//         const {dataPassed} = this.props;\r\n//         this.state = {\r\n//                 ...initialState,\r\n//                 rows: dataPassed\r\n//         };\r\n//     }\r\n//     componentDidMount () {\r\n//         // console.log(\"Component Did Mount\");\r\n//         const { dataPassed } = this.props;\r\n//         // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\r\n//         this.setState({\r\n//             rows: dataPassed\r\n//         })\r\n//     }\r\n//     handleChangePage = (event, page) => {\r\n//         this.setState({ page });\r\n//     };\r\n//     handleChangeRowsPerPage = event => {\r\n//         this.setState({ page: 0, rowsPerPage: event.target.value });\r\n//     };\r\n//     render() {\r\n//         const { classes, columns, sortDirection, columnToSort } = this.props;\r\n//         const rows = this.props.dataPassed;\r\n//         const { rowsPerPage, page } = this.state;\r\n//         const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\r\n//         // console.log(\"This is the props \" + sortDirection + \" \" + columnToSort);\r\n//         return (\r\n//             <Paper className={classes.root}>\r\n//                 <div className={classes.tableWrapper}>\r\n//                     <Table className={classes.table}>\r\n//                                      <TableHead>\r\n//                                        <TableRow>\r\n//                                            <TableCell padding=\"checkbox\">\r\n//                                                <Checkbox />\r\n//                                            </TableCell>\r\n//                                            {columns.map((col) => (\r\n//                                                <TableCell align=\"left\">\r\n//                                                    <div onClick={() => this.props.handleSort(col.prop)}><span>{col.name} {columnToSort === col.prop ? (sortDirection === \"asc\" ? <UpArrow/> : <DownArrow/>) : null} </span></div>\r\n//                                                </TableCell>\r\n//                                            ))}\r\n//                                         </TableRow>\r\n//                                        </TableHead>\r\n//                         <TableBody>\r\n//                             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n//                                 <TableRow key={row.id}>\r\n//\r\n//                                     {columns.map((col) => (\r\n//                                         <TableCell component=\"th\" scope=\"row\" align=\"left\">\r\n//                                             {row[col.prop]}\r\n//                                         </TableCell>\r\n//                                     ))}\r\n//                                 </TableRow>\r\n//                             ))}\r\n//                             {emptyRows > 0 && (\r\n//                                 <TableRow style={{ height: 48 * emptyRows }}>\r\n//                                     <TableCell colSpan={6} />\r\n//                                 </TableRow>\r\n//                             )}\r\n//                         </TableBody>\r\n//                         <TableFooter>\r\n//                             <TableRow>\r\n//                                 <TablePagination\r\n//                                     rowsPerPageOptions={[5, 10, 25]}\r\n//                                     colSpan={3}\r\n//                                     count={rows.length}\r\n//                                     rowsPerPage={rowsPerPage}\r\n//                                     page={page}\r\n//                                     SelectProps={{\r\n//                                         native: true,\r\n//                                     }}\r\n//                                     onChangePage={this.handleChangePage}\r\n//                                     onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n//                                     ActionsComponent={TablePaginationActionsWrapped}\r\n//                                 />\r\n//                             </TableRow>\r\n//                         </TableFooter>\r\n//                     </Table>\r\n//                 </div>\r\n//             </Paper>\r\n//         );\r\n//     }\r\n// }\r\n// SimpleTable.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n// };\r\n//\r\n// export default withStyles(styles)(SimpleTable);"]},"metadata":{},"sourceType":"module"}