{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\OrderDetail\\\\orderDetail.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nvar orderDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(orderDetail, _React$Component);\n\n  function orderDetail(props) {\n    var _this;\n\n    _classCallCheck(this, orderDetail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(orderDetail).call(this, props)); // this.myRef = React.createRef();\n\n    _this.focusOnField = function () {};\n\n    _this.focusUsernameInputField = function (input) {\n      if (input) {\n        input.focus();\n      }\n    };\n\n    _this.state = {\n      data1: '',\n      data2: '',\n      data3: ''\n    };\n    return _this;\n  }\n\n  _createClass(orderDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(nextProps, nextState, nextContext) {\n      this.setState({\n        data1: this.props.field1,\n        data2: this.props.field2,\n        data3: this.props.field3\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      console.log(\"Data being passed from the comp did update, \", this.state);\n\n      if (this.state.field1 === '' && this.state.field2 === '' && this.state.field3 === '') {\n        this.myRef.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Order Details - Scanned Material Count \", this.props.count), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        inputRef: function inputRef(input) {\n          _this2.myRef = input;\n        },\n        id: \"partnum\",\n        name: \"partnum\",\n        label: \"partnum\",\n        fullWidth: true,\n        autoComplete: \"pnum\",\n        onChange: this.props.updateval,\n        value: this.props.inputpart,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"quantity\",\n        name: \"quantity\",\n        label: \"Quantity\",\n        fullWidth: true,\n        autoComplete: \"qty\",\n        onChange: this.props.updateval,\n        value: this.props.inputqty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"tagnum\",\n        name: \"tagnum\",\n        label: \"Tag Number\",\n        fullWidth: true,\n        autoComplete: \"tgnum\",\n        onChange: this.props.updateval,\n        value: this.props.inputtagnum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return orderDetail;\n}(React.Component);\n\nexport default orderDetail;","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\OrderDetail\\orderDetail.js"],"names":["React","Grid","Typography","TextField","orderDetail","props","focusOnField","focusUsernameInputField","input","focus","state","data1","data2","data3","nextProps","nextState","nextContext","setState","field1","field2","field3","prevProps","prevState","snapshot","console","log","myRef","count","updateval","inputpart","inputqty","inputtagnum","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass orderDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        // this.myRef = React.createRef();\r\n        this.state={\r\n            data1: '',\r\n            data2: '',\r\n            data3: ''\r\n        };\r\n    };\r\n\r\n    componentDidMount(nextProps, nextState, nextContext) {\r\n        this.setState({\r\n            data1: this.props.field1,\r\n            data2: this.props.field2,\r\n            data3: this.props.field3\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"Data being passed from the comp did update, \", this.state);\r\n\r\n\r\n\r\n        if (this.state.field1 === '' && this.state.field2 === '' && this.state.field3 === '') {\r\n            this.myRef.focus();\r\n        }\r\n    }\r\n\r\n    focusOnField = () => {\r\n\r\n    };\r\n\r\n    focusUsernameInputField = (input) => {\r\n        if (input) {\r\n           input.focus()\r\n        }\r\n    };\r\n\r\n    render () {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order Details - Scanned Material Count {this.props.count}\r\n            </Typography>\r\n            <Grid container spacing={24}>\r\n                {/*<Grid item xs={12} sm={6}>*/}\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={(input) => {this.myRef = input}}\r\n                        id=\"partnum\"\r\n                        name=\"partnum\"\r\n                        label=\"partnum\"\r\n                        fullWidth\r\n                        autoComplete=\"pnum\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.inputpart}\r\n                        autoFocus={true}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"quantity\"\r\n                        name=\"quantity\"\r\n                        label=\"Quantity\"\r\n                        fullWidth\r\n                        autoComplete=\"qty\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.inputqty}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"tagnum\"\r\n                        name=\"tagnum\"\r\n                        label=\"Tag Number\"\r\n                        fullWidth\r\n                        autoComplete=\"tgnum\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.inputtagnum}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );}\r\n}\r\nexport default orderDetail;"]},"metadata":{},"sourceType":"module"}