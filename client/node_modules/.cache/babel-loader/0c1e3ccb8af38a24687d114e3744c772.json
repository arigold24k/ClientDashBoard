{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\src\\\\components\\\\PasswordReset\\\\passwordrst.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from \"prop-types\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport axios from 'axios';\nimport Modal from '@material-ui/core/Modal'; //import Link from '@material-ui/core/Link';\n\nvar styles = function styles(theme) {\n  var _layout;\n\n  return {\n    modal: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4,\n      outline: 'none'\n    },\n    button: {\n      marginTop: theme.spacing.unit * 3,\n      marginLeft: theme.spacing.unit // justifyContent: 'center',\n      // align: 'center',\n\n    },\n    layout: (_layout = {\n      width: 'auto',\n      marginLeft: theme.spacing.unit * 2,\n      marginRight: theme.spacing.unit * 2\n    }, _defineProperty(_layout, theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2), {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }), _defineProperty(_layout, \"textAlign\", 'center'), _layout),\n    paper: _defineProperty({\n      marginTop: theme.spacing.unit * 3,\n      marginBottom: theme.spacing.unit * 3,\n      padding: theme.spacing.unit * 2\n    }, theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2), {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3\n    })\n  };\n};\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nvar initial_State = {\n  username: '',\n  email: '',\n  open1: false,\n  open2: false,\n  open3: false,\n  open4: false\n};\n\nvar passwordrst =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(passwordrst, _React$Component);\n\n  function passwordrst(props) {\n    var _this;\n\n    _classCallCheck(this, passwordrst);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(passwordrst).call(this, props));\n\n    _this.handleSubmit = function () {\n      var dataObj = {\n        username: _this.state.username,\n        email: _this.state.email\n      };\n\n      if (_this.state.username !== '' && _this.state.email !== '') {\n        axios.post('/passwordReset', dataObj).then(function (res) {\n          //value 1 is when the username does not exist\n          // console.log(\"This is the reponse to the password reset, \", res.data);\n          if (res.status === 200) {\n            if (res.data.data === 1) {\n              //username does not match\n              _this.setState({\n                open1: true\n              });\n            } else if (res.data.data === 2) {\n              //email does not match\n              _this.setState({\n                open2: true\n              });\n            } else if (res.data.data === 3) {\n              //error adding the data\n              _this.setState({\n                open3: true\n              });\n            } else if (res.data.data) {\n              //add code to send email to client\n              _this.setState({\n                id: res.data.data.data.id\n              });\n\n              _this.handleSendEmail(_this.state.email, \"Password Reset\", \"Please follow the link below to Reset Password. \\n  \".concat(window.location.origin, \"http://localhost:3000/updateinfo/\").concat(_this.state.id));\n            }\n          }\n        }).catch(function (err) {\n          if (err) {}\n        });\n      }\n    };\n\n    _this.handleSendEmail = function (v_to_email, v_subject, v_body) {\n      var dataObj = {\n        SEND_TO: v_to_email,\n        SUBJECT: v_subject,\n        MESSAGE: v_body\n      };\n      axios.post('/sendEmail', dataObj).then(function (res) {\n        if (res.data.data && res.data.data !== 3) {\n          _this.setState({\n            open4: true\n          });\n        }\n      }).catch();\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handlemodalClose = function () {\n      _this.setState(initial_State);\n    };\n\n    _this.state = initial_State;\n    return _this;\n  }\n\n  _createClass(passwordrst, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"main\", {\n        className: classes.layout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        align: \"center\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Please provide the following:\"), React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"username\",\n        name: \"username\",\n        label: \"User Name\",\n        fullWidth: true,\n        autoComplete: \"username\",\n        onChange: this.handleChange,\n        value: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        required: true,\n        id: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        fullWidth: true,\n        autoComplete: \"usnm\",\n        onChange: this.handleChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        size: \"small\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Submit\"))))), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open1,\n        onClose: function onClose() {\n          _this2.handlemodalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Error\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.username, \" is not a valid username. Provide a valid Username.\"))), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open2,\n        onClose: function onClose() {\n          _this2.handlemodalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Error\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.state.email, \" is not a valid E-Mail. Provide a valid E-Mail.\"))), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open3,\n        onClose: function onClose() {\n          _this2.handlemodalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Error\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"There was an error processing your request.  Please try close the browser and retry.\"))), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open4,\n        onClose: function onClose() {\n          _this2.handlemodalClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.modal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Click on Link below\"), React.createElement(Typography, {\n        variant: \"subtitle1\",\n        id: \"simple-modal-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"An email has been sent to the email address on file with directions on how to reset your password.\"))));\n    }\n  }]);\n\n  return passwordrst;\n}(React.Component);\n\npasswordrst.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(passwordrst);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\PasswordReset\\passwordrst.js"],"names":["React","Grid","Typography","TextField","Button","CssBaseline","Paper","PropTypes","withStyles","axios","Modal","styles","theme","modal","position","width","spacing","unit","backgroundColor","palette","background","paper","boxShadow","shadows","padding","outline","button","marginTop","marginLeft","layout","marginRight","breakpoints","up","marginBottom","getModalStyle","top","rand","left","transform","Math","round","random","initial_State","username","email","open1","open2","open3","open4","passwordrst","props","handleSubmit","dataObj","state","post","then","res","status","data","setState","id","handleSendEmail","window","location","origin","catch","err","v_to_email","v_subject","v_body","SEND_TO","SUBJECT","MESSAGE","handleChange","event","target","name","value","handlemodalClose","classes","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport axios from 'axios';\r\nimport Modal from '@material-ui/core/Modal';\r\n//import Link from '@material-ui/core/Link';\r\n\r\n\r\nconst styles = theme => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        // justifyContent: 'center',\r\n        // align: 'center',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n        textAlign: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        padding: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * 6,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n\r\n    },\r\n});\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nconst initial_State = {\r\n    username: '',\r\n    email: '',\r\n    open1: false,\r\n    open2: false,\r\n    open3: false,\r\n    open4: false\r\n};\r\n\r\nclass passwordrst extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initial_State;\r\n    }\r\n    handleSubmit = () => {\r\n        const dataObj = {\r\n          username: this.state.username,\r\n          email: this.state.email\r\n        };\r\n        if (this.state.username !== '' && this.state.email !== '') {\r\n            axios.post('/passwordReset', dataObj).then((res) => {\r\n                //value 1 is when the username does not exist\r\n                // console.log(\"This is the reponse to the password reset, \", res.data);\r\n                if(res.status === 200) {\r\n                    if(res.data.data === 1) {\r\n                        //username does not match\r\n                        this.setState({open1: true})\r\n                    }else if (res.data.data === 2) {\r\n                        //email does not match\r\n                        this.setState({open2: true})\r\n                    }else if (res.data.data === 3) {\r\n                        //error adding the data\r\n                        this.setState({open3: true})\r\n                    }\r\n                    else if (res.data.data) {\r\n                        //add code to send email to client\r\n                        this.setState({id: res.data.data.data.id});\r\n                        this.handleSendEmail(this.state.email, \"Password Reset\", `Please follow the link below to Reset Password. \\n  ${window.location.origin}http://localhost:3000/updateinfo/${this.state.id}`);\r\n                    }\r\n                }\r\n            }).catch((err) => {\r\n                if(err) {\r\n\r\n                }\r\n            })\r\n        }\r\n    };\r\n\r\n    handleSendEmail = (v_to_email, v_subject, v_body) => {\r\n        const dataObj = {\r\n            SEND_TO: v_to_email,\r\n            SUBJECT: v_subject,\r\n            MESSAGE: v_body\r\n        };\r\n\r\n        axios.post('/sendEmail', dataObj).then((res) => {\r\n            if (res.data.data && res.data.data !== 3) {\r\n                this.setState({open4: true});\r\n            }\r\n        }).catch()\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    };\r\n    handlemodalClose = () => {\r\n          this.setState(initial_State);\r\n    };\r\n    render () {\r\n        const {classes} = this.props;\r\n        return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\r\n                    Please provide the following:\r\n                </Typography>\r\n                <Grid container spacing={24}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            label=\"User Name\"\r\n                            fullWidth\r\n                            autoComplete=\"username\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.username}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            autoComplete=\"usnm\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            className={classes.button}\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </main>\r\n        <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={this.state.open1}\r\n            onClose={() => {this.handlemodalClose()}}\r\n        >\r\n            <div style={getModalStyle()} className={classes.modal}>\r\n                <Typography variant=\"h6\" id=\"modal-title\">\r\n                    Error\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                    {this.state.username} is not a valid username. Provide a valid Username.\r\n                </Typography>\r\n            </div>\r\n        </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open2}\r\n                onClose={() => {this.handlemodalClose()}}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        Error\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                        {this.state.email} is not a valid E-Mail. Provide a valid E-Mail.\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open3}\r\n                onClose={() => {this.handlemodalClose()}}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        Error\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                        There was an error processing your request.  Please try close the browser and retry.\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open4}\r\n                onClose={() => {this.handlemodalClose()}}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        Click on Link below\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                        An email has been sent to the email address on file with directions on how to reset your password.\r\n                        {/*<Link href={`/updateinfo/${this.state.id}`} className={classes.link}>Click Here</Link>*/}\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n    </React.Fragment>\r\n        )\r\n    }\r\n}\r\npasswordrst.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(passwordrst);"]},"metadata":{},"sourceType":"module"}