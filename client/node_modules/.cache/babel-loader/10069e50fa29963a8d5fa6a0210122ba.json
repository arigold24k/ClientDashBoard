{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import ReactExport from\"react-data-export\";import Button from'@material-ui/core/Button';import withStyles from'@material-ui/core/styles/withStyles';var ExcelFile=ReactExport.ExcelFile;var ExcelSheet=ReactExport.ExcelFile.ExcelSheet;// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nvar styles=function styles(theme){return{button:{marginTop:theme.spacing.unit*3,marginLeft:theme.spacing.unit,display:'inline-flex',justifyContent:'center',align:'center'}};};var Download=/*#__PURE__*/function(_React$Component){_inherits(Download,_React$Component);function Download(){_classCallCheck(this,Download);return _possibleConstructorReturn(this,_getPrototypeOf(Download).apply(this,arguments));}_createClass(Download,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,dataArray=_this$props.dataArray;var data=[[{value:\"Rec Number\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Scan Date\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Scan Code\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Product\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Quantity\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Tag Number\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"},alignment:{vertical:\"center\",horizontal:\"center\"}}}}]];var multiDataSet=[];var keyHolder=[];var dataHolder=[];var columnsArray=[// {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\"\n// style: {\n//     fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\n//     font:{sz: \"14\", bold: true},\n//     alignment: {vertical: \"center\", horizontal: \"center\"},\n//     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n//     numFmt: \"0\"\n//\n// }\n// },\n// {title: \"Scan Date\", width: {wch: 12},\n// style: {\n//     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n//     font:{sz: \"14\", bold: true},\n//     alignment: {vertical: \"center\", horizontal: \"center\"},\n//     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n//     numFmt: \"yyyy-mm-dd\"\n//\n// }\n// },\n// {title: \"Scan Code\", width: {wch: 12},\n// style: {\n//     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n//     font:{sz: \"14\", bold: true},\n//     alignment: {vertical: \"center\", horizontal: \"center\"},\n//     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n//\n// }\n// },\n// {title: \"Product\", width: {wch: 12},\n// style: {\n//     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n//     font:{sz: \"14\", bold: true},\n//     alignment: {vertical: \"center\", horizontal: \"center\"},\n//     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n//\n// }\n// },\n// {title: \"Quantity\", width: {wch: 12},\n// style: {\n//     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n//     font:{sz: \"14\", bold: true},\n//     alignment: {vertical: \"center\", horizontal: \"center\"},\n//     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n//     numFmt: \"#,##0\"\n//\n// }\n// },\n// {title: \"Tag Number\", width: {wch: 12},\n// style: {\n//     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n//     font:{sz: \"14\", bold: true},\n//     alignment: {vertical: \"center\", horizontal: \"center\"},\n//     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n//     numFmt: \"#,##0\"\n//\n// }\n// }\n];// multiDataSet.push({ySteps: 1, columns: columnsArray});\nmultiDataSet.push({columns:columnsArray});//have to loop through data being passed and create an array of objects\n//looping through array being passed so array[0] will give us first object\nfor(var i=0;i<dataArray.length;i++){dataHolder=[];keyHolder=[];//putting all the keys of the object into an array\nkeyHolder=Object.keys(dataArray[i]);for(var j=1;j<keyHolder.length;j++){if((i+1)%2===1){if(j===5){dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},numFmt:\"#,##0\",alignment:{vertical:\"center\",horizontal:\"center\"}}});}else{dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},alignment:{vertical:\"center\",horizontal:\"center\"}}});}}else{if(j===5){dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},fill:{patternType:\"solid\",fgColor:{rgb:\"b5e7a0\"}},numFmt:\"#,##0\",alignment:{vertical:\"center\",horizontal:\"center\"}}});}else{dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},fill:{patternType:\"solid\",fgColor:{rgb:\"b5e7a0\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}});}}}data.push(dataHolder);}multiDataSet[0].data=data;console.log(\"This is the object being created: \",multiDataSet);console.log(\"This is the original object passed as param: \",dataArray);return React.createElement(ExcelFile,{element:React.createElement(Button,{variant:\"contained\",color:\"primary\",className:classes.button,align:\"center\"},\"Download Report\"),filename:\"Report Request\"},React.createElement(ExcelSheet,{dataSet:multiDataSet,name:\"Scanned_Report\"}));}}]);return Download;}(React.Component);export default withStyles(styles)(Download);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\clientDashboard\\ClientDashBoard\\client\\src\\components\\ExcelExport\\excelExport.js"],"names":["React","ReactExport","Button","withStyles","ExcelFile","ExcelSheet","styles","theme","button","marginTop","spacing","unit","marginLeft","display","justifyContent","align","Download","props","classes","dataArray","data","value","style","font","sz","bold","fill","patternType","fgColor","rgb","alignment","vertical","horizontal","multiDataSet","keyHolder","dataHolder","columnsArray","push","columns","i","length","Object","keys","j","numFmt","console","log","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    }\r\n\r\n});\r\n\r\n\r\nclass Download extends React.Component {\r\n    render() {\r\n        const { classes, dataArray } = this.props;\r\n        const data = [[{\r\n                        value: \"Rec Number\",\r\n                        style: {\r\n                            font: {\r\n                                    sz: \"18\",\r\n                                    bold: true\r\n                                },\r\n                            fill: {\r\n                                    patternType: \"solid\",\r\n                                    fgColor:{\r\n                                            rgb: \"86af49\"\r\n                                            }\r\n                                    },\r\n                            alignment: {\r\n                                    vertical: \"center\",\r\n                                    horizontal: \"center\"}\r\n                                }\r\n                        },\r\n            {\r\n                value: \"Scan Date\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Scan Code\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Product\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Quantity\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Tag Number\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        },\r\n                        alignment: {\r\n                            vertical: \"center\",\r\n                            horizontal: \"center\"}\r\n                    }\r\n                }\r\n            }\r\n                    ]];\r\n        const multiDataSet = [];\r\n        let keyHolder = [];\r\n        let dataHolder = [];\r\n\r\n        const columnsArray = [\r\n            // {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\"\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"0\"\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Scan Date\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"yyyy-mm-dd\"\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Scan Code\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Product\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Quantity\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"#,##0\"\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Tag Number\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"#,##0\"\r\n                //\r\n                // }\r\n            // }\r\n        ];\r\n\r\n        // multiDataSet.push({ySteps: 1, columns: columnsArray});\r\n        multiDataSet.push({columns: columnsArray});\r\n\r\n        //have to loop through data being passed and create an array of objects\r\n\r\n        //looping through array being passed so array[0] will give us first object\r\n        for (let i = 0; i < dataArray.length; i++) {\r\n            dataHolder = [];\r\n            keyHolder = [];\r\n            //putting all the keys of the object into an array\r\n            keyHolder = Object.keys(dataArray[i]);\r\n            for (let j = 1; j < keyHolder.length; j++) {\r\n                if ((i+1) % 2 === 1) {\r\n                    if( j === 5 ) {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }else {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }\r\n                }\r\n                else {\r\n                    if( j === 5 ) {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }else {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }\r\n                }\r\n            }\r\n            data.push(dataHolder);\r\n\r\n        }\r\n\r\n\r\n\r\n        multiDataSet[0].data = data;\r\n\r\n        console.log(\"This is the object being created: \", multiDataSet);\r\n        console.log(\"This is the original object passed as param: \", dataArray);\r\n\r\n        return (\r\n            <ExcelFile element={\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    align='center'\r\n                >\r\n                    Download Report\r\n                </Button>\r\n            } filename={\"Report Request\"}>\r\n                {/*<ExcelSheet data={dataArray} name=\"Scanned_Report\">*/}\r\n                {/*    <ExcelColumn label=\"Rec Number\" value=\"recno\" />*/}\r\n                {/*    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>*/}\r\n                {/*    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>*/}\r\n                {/*    <ExcelColumn label=\"Product\" value=\"product\"/>*/}\r\n                {/*    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>*/}\r\n                {/*    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>*/}\r\n                {/*    /!*<ExcelColumn label=\"Marital Status\"*!/*/}\r\n                {/*                 /!*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*!/*/}\r\n                {/*</ExcelSheet>*/}\r\n                <ExcelSheet dataSet={multiDataSet} name=\"Scanned_Report\" />\r\n            </ExcelFile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Download);\r\n\r\n"]},"metadata":{},"sourceType":"module"}