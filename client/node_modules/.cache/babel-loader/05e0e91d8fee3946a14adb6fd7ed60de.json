{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\avidal\\\\Documents\\\\clientDashboard\\\\ClientDashBoard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from\"react\";import ReactExport from\"react-data-export\";import Button from'@material-ui/core/Button';import withStyles from'@material-ui/core/styles/withStyles';var ExcelFile=ReactExport.ExcelFile;var ExcelSheet=ReactExport.ExcelFile.ExcelSheet;// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nvar styles=function styles(theme){return{button:{marginTop:theme.spacing.unit*3,marginLeft:theme.spacing.unit,display:'inline-flex',justifyContent:'center',align:'center'}};};var Download=/*#__PURE__*/function(_React$Component){_inherits(Download,_React$Component);function Download(){_classCallCheck(this,Download);return _possibleConstructorReturn(this,_getPrototypeOf(Download).apply(this,arguments));}_createClass(Download,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,dataArray=_this$props.dataArray;console.log(\"data array being passed is \".concat(dataArray));var data=[[{value:\"Rec Number\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Scan Date\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Scan Code\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Product\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Quantity\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}},{value:\"Tag Number\",style:{font:{sz:\"18\",bold:true},fill:{patternType:\"solid\",fgColor:{rgb:\"86af49\"},alignment:{vertical:\"center\",horizontal:\"center\"}}}}]];var multiDataSet=[];var keyHolder=[];var dataHolder=[];var columnsArray=[{title:\"Rec Number\",width:{wch:12},background:\"FF00FF00\",style:{fill:{patternType:\"solid\",bgColor:{rgb:\"FF00FF00\"}},font:{sz:\"14\",bold:true},alignment:{vertical:\"center\",horizontal:\"center\"},border:{bottom:{style:\"thick\",color:{rgb:\"FFFFAA00\"}}},numFmt:\"0\"}},{title:\"Scan Date\",width:{wch:12},style:{fill:{patternType:\"solid\",fgColor:{rgb:\"FF00FF00\"}},font:{sz:\"14\",bold:true},alignment:{vertical:\"center\",horizontal:\"center\"},border:{bottom:{style:\"thick\",color:{rgb:\"FFFFAA00\"}}},numFmt:\"yyyy-mm-dd\"}},{title:\"Scan Code\",width:{wch:12},style:{fill:{patternType:\"solid\",fgColor:{rgb:\"FF00FF00\"}},font:{sz:\"14\",bold:true},alignment:{vertical:\"center\",horizontal:\"center\"},border:{bottom:{style:\"thick\",color:{rgb:\"FFFFAA00\"}}}}},{title:\"Product\",width:{wch:12},style:{fill:{patternType:\"solid\",fgColor:{rgb:\"FF00FF00\"}},font:{sz:\"14\",bold:true},alignment:{vertical:\"center\",horizontal:\"center\"},border:{bottom:{style:\"thick\",color:{rgb:\"FFFFAA00\"}}}}},{title:\"Quantity\",width:{wch:12},style:{fill:{patternType:\"solid\",fgColor:{rgb:\"FF00FF00\"}},font:{sz:\"14\",bold:true},alignment:{vertical:\"center\",horizontal:\"center\"},border:{bottom:{style:\"thick\",color:{rgb:\"FFFFAA00\"}}},numFmt:\"#,##0\"}},{title:\"Tag Number\",width:{wch:12},style:{fill:{patternType:\"solid\",fgColor:{rgb:\"FF00FF00\"}},font:{sz:\"14\",bold:true},alignment:{vertical:\"center\",horizontal:\"center\"},border:{bottom:{style:\"thick\",color:{rgb:\"FFFFAA00\"}}},numFmt:\"#,##0\"}}];// multiDataSet.push({ySteps: 1, columns: columnsArray});\nmultiDataSet.push({columns:columnsArray});//have to loop through data being passed and create an array of objects\n//looping through array being passed so array[0] will give us first object\nfor(var i=0;i<dataArray.length;i++){dataHolder=[];keyHolder=[];//putting all the keys of the object into an array\nkeyHolder=Object.keys(dataArray[i]);for(var j=1;j<keyHolder.length;j++){if((i+1)%2===1){if(j===5){dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},numFmt:\"#,##0\",alignment:{vertical:\"center\",horizontal:\"center\"}}});}else{dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},alignment:{vertical:\"center\",horizontal:\"center\"}}});}}else{if(j===5){dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},fill:{patternType:\"solid\",fgColor:{rgb:\"b5e7a0\"}},numFmt:\"#,##0\",alignment:{vertical:\"center\",horizontal:\"center\"}}});}else{dataHolder.push({value:dataArray[i][keyHolder[j]],style:{font:{sz:\"12\"},fill:{patternType:\"solid\",fgColor:{rgb:\"b5e7a0\"}},alignment:{vertical:\"center\",horizontal:\"center\"}}});}}}data.push(dataHolder);}multiDataSet[0].data=data;//multiDataSet[0].data = data;\nconsole.log(\"This is the object being created: \",multiDataSet);console.log(\"This is the original object passed as param: \",dataArray);return React.createElement(ExcelFile,{element:React.createElement(Button,{variant:\"contained\",color:\"primary\",className:classes.button,align:\"center\"},\"Download Report\"),filename:\"Report Request\"},React.createElement(ExcelSheet,{dataSet:multiDataSet,name:\"Scanned_Report\"}));}}]);return Download;}(React.Component);export default withStyles(styles)(Download);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\clientDashboard\\ClientDashBoard\\client\\src\\components\\ExcelExport\\excelExport.js"],"names":["React","ReactExport","Button","withStyles","ExcelFile","ExcelSheet","styles","theme","button","marginTop","spacing","unit","marginLeft","display","justifyContent","align","Download","props","classes","dataArray","console","log","data","value","style","font","sz","bold","fill","patternType","fgColor","rgb","alignment","vertical","horizontal","multiDataSet","keyHolder","dataHolder","columnsArray","title","width","wch","background","bgColor","border","bottom","color","numFmt","push","columns","i","length","Object","keys","j","Component"],"mappings":"w9BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qCAAvB,CACA,GAAMC,CAAAA,SAAS,CAAGH,WAAW,CAACG,SAA9B,CACA,GAAMC,CAAAA,UAAU,CAAGJ,WAAW,CAACG,SAAZ,CAAsBC,UAAzC,CACA;AAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAAC,KAAK,QAAK,CACrBC,MAAM,CAAE,CACJC,SAAS,CAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAqB,CAD5B,CAEJC,UAAU,CAAEL,KAAK,CAACG,OAAN,CAAcC,IAFtB,CAGJE,OAAO,CAAE,aAHL,CAIJC,cAAc,CAAE,QAJZ,CAKJC,KAAK,CAAE,QALH,CADa,CAAL,EAApB,C,GAWMC,CAAAA,Q,sRACO,iBAC0B,KAAKC,KAD/B,CACGC,OADH,aACGA,OADH,CACYC,SADZ,aACYA,SADZ,CAELC,OAAO,CAACC,GAAR,sCAA0CF,SAA1C,GACA,GAAMG,CAAAA,IAAI,CAAG,CAAC,CAAC,CACCC,KAAK,CAAE,YADR,CAECC,KAAK,CAAE,CACHC,IAAI,CAAE,CACEC,EAAE,CAAE,IADN,CAEEC,IAAI,CAAE,IAFR,CADH,CAKHC,IAAI,CAAE,CACEC,WAAW,CAAE,OADf,CAEEC,OAAO,CAAC,CACAC,GAAG,CAAE,QADL,CAFV,CALH,CAWHC,SAAS,CAAE,CACHC,QAAQ,CAAE,QADP,CAEHC,UAAU,CAAE,QAFT,CAXR,CAFR,CAAD,CAkBV,CACIX,KAAK,CAAE,WADX,CAEIC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,EAAE,CAAE,IADF,CAEFC,IAAI,CAAE,IAFJ,CADH,CAKHC,IAAI,CAAE,CACFC,WAAW,CAAE,OADX,CAEFC,OAAO,CAAC,CACJC,GAAG,CAAE,QADD,CAFN,CALH,CAWHC,SAAS,CAAE,CACPC,QAAQ,CAAE,QADH,CAEPC,UAAU,CAAE,QAFL,CAXR,CAFX,CAlBU,CAoCV,CACIX,KAAK,CAAE,WADX,CAEIC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,EAAE,CAAE,IADF,CAEFC,IAAI,CAAE,IAFJ,CADH,CAKHC,IAAI,CAAE,CACFC,WAAW,CAAE,OADX,CAEFC,OAAO,CAAC,CACJC,GAAG,CAAE,QADD,CAFN,CALH,CAWHC,SAAS,CAAE,CACPC,QAAQ,CAAE,QADH,CAEPC,UAAU,CAAE,QAFL,CAXR,CAFX,CApCU,CAsDV,CACIX,KAAK,CAAE,SADX,CAEIC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,EAAE,CAAE,IADF,CAEFC,IAAI,CAAE,IAFJ,CADH,CAKHC,IAAI,CAAE,CACFC,WAAW,CAAE,OADX,CAEFC,OAAO,CAAC,CACJC,GAAG,CAAE,QADD,CAFN,CALH,CAWHC,SAAS,CAAE,CACPC,QAAQ,CAAE,QADH,CAEPC,UAAU,CAAE,QAFL,CAXR,CAFX,CAtDU,CAwEV,CACIX,KAAK,CAAE,UADX,CAEIC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,EAAE,CAAE,IADF,CAEFC,IAAI,CAAE,IAFJ,CADH,CAKHC,IAAI,CAAE,CACFC,WAAW,CAAE,OADX,CAEFC,OAAO,CAAC,CACJC,GAAG,CAAE,QADD,CAFN,CALH,CAWHC,SAAS,CAAE,CACPC,QAAQ,CAAE,QADH,CAEPC,UAAU,CAAE,QAFL,CAXR,CAFX,CAxEU,CA0FV,CACIX,KAAK,CAAE,YADX,CAEIC,KAAK,CAAE,CACHC,IAAI,CAAE,CACFC,EAAE,CAAE,IADF,CAEFC,IAAI,CAAE,IAFJ,CADH,CAKHC,IAAI,CAAE,CACFC,WAAW,CAAE,OADX,CAEFC,OAAO,CAAC,CACJC,GAAG,CAAE,QADD,CAFN,CAKFC,SAAS,CAAE,CACPC,QAAQ,CAAE,QADH,CAEPC,UAAU,CAAE,QAFL,CALT,CALH,CAFX,CA1FU,CAAD,CAAb,CA6GA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjB,CAACC,KAAK,CAAE,YAAR,CAAsBC,KAAK,CAAE,CAACC,GAAG,CAAE,EAAN,CAA7B,CAAwCC,UAAU,CAAE,UAApD,CACIlB,KAAK,CAAE,CACHI,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBc,OAAO,CAAE,CAACZ,GAAG,CAAE,UAAN,CAAhC,CADH,CAEHN,IAAI,CAAC,CAACC,EAAE,CAAE,IAAL,CAAWC,IAAI,CAAE,IAAjB,CAFF,CAGHK,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAHR,CAIHU,MAAM,CAAE,CAACC,MAAM,CAAE,CAACrB,KAAK,CAAE,OAAR,CAAiBsB,KAAK,CAAE,CAAEf,GAAG,CAAE,UAAP,CAAxB,CAAT,CAJL,CAKHgB,MAAM,CAAE,GALL,CADX,CADiB,CAWjB,CAACR,KAAK,CAAE,WAAR,CAAqBC,KAAK,CAAE,CAACC,GAAG,CAAE,EAAN,CAA5B,CACIjB,KAAK,CAAE,CACHI,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAE,CAACC,GAAG,CAAE,UAAN,CAAhC,CADH,CAEHN,IAAI,CAAC,CAACC,EAAE,CAAE,IAAL,CAAWC,IAAI,CAAE,IAAjB,CAFF,CAGHK,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAHR,CAIHU,MAAM,CAAE,CAACC,MAAM,CAAE,CAACrB,KAAK,CAAE,OAAR,CAAiBsB,KAAK,CAAE,CAAEf,GAAG,CAAE,UAAP,CAAxB,CAAT,CAJL,CAKHgB,MAAM,CAAE,YALL,CADX,CAXiB,CAqBjB,CAACR,KAAK,CAAE,WAAR,CAAqBC,KAAK,CAAE,CAACC,GAAG,CAAE,EAAN,CAA5B,CACIjB,KAAK,CAAE,CACHI,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAE,CAACC,GAAG,CAAE,UAAN,CAAhC,CADH,CAEHN,IAAI,CAAC,CAACC,EAAE,CAAE,IAAL,CAAWC,IAAI,CAAE,IAAjB,CAFF,CAGHK,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAHR,CAIHU,MAAM,CAAE,CAACC,MAAM,CAAE,CAACrB,KAAK,CAAE,OAAR,CAAiBsB,KAAK,CAAE,CAAEf,GAAG,CAAE,UAAP,CAAxB,CAAT,CAJL,CADX,CArBiB,CA8BjB,CAACQ,KAAK,CAAE,SAAR,CAAmBC,KAAK,CAAE,CAACC,GAAG,CAAE,EAAN,CAA1B,CACIjB,KAAK,CAAE,CACHI,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAE,CAACC,GAAG,CAAE,UAAN,CAAhC,CADH,CAEHN,IAAI,CAAC,CAACC,EAAE,CAAE,IAAL,CAAWC,IAAI,CAAE,IAAjB,CAFF,CAGHK,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAHR,CAIHU,MAAM,CAAE,CAACC,MAAM,CAAE,CAACrB,KAAK,CAAE,OAAR,CAAiBsB,KAAK,CAAE,CAAEf,GAAG,CAAE,UAAP,CAAxB,CAAT,CAJL,CADX,CA9BiB,CAuCjB,CAACQ,KAAK,CAAE,UAAR,CAAoBC,KAAK,CAAE,CAACC,GAAG,CAAE,EAAN,CAA3B,CACIjB,KAAK,CAAE,CACHI,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAE,CAACC,GAAG,CAAE,UAAN,CAAhC,CADH,CAEHN,IAAI,CAAC,CAACC,EAAE,CAAE,IAAL,CAAWC,IAAI,CAAE,IAAjB,CAFF,CAGHK,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAHR,CAIHU,MAAM,CAAE,CAACC,MAAM,CAAE,CAACrB,KAAK,CAAE,OAAR,CAAiBsB,KAAK,CAAE,CAAEf,GAAG,CAAE,UAAP,CAAxB,CAAT,CAJL,CAKHgB,MAAM,CAAE,OALL,CADX,CAvCiB,CAiDjB,CAACR,KAAK,CAAE,YAAR,CAAsBC,KAAK,CAAE,CAACC,GAAG,CAAE,EAAN,CAA7B,CACIjB,KAAK,CAAE,CACHI,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAE,CAACC,GAAG,CAAE,UAAN,CAAhC,CADH,CAEHN,IAAI,CAAC,CAACC,EAAE,CAAE,IAAL,CAAWC,IAAI,CAAE,IAAjB,CAFF,CAGHK,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAHR,CAIHU,MAAM,CAAE,CAACC,MAAM,CAAE,CAACrB,KAAK,CAAE,OAAR,CAAiBsB,KAAK,CAAE,CAAEf,GAAG,CAAE,UAAP,CAAxB,CAAT,CAJL,CAKHgB,MAAM,CAAE,OALL,CADX,CAjDiB,CAArB,CA6DA;AACAZ,YAAY,CAACa,IAAb,CAAkB,CAACC,OAAO,CAAEX,YAAV,CAAlB,EAEA;AAEA;AACA,IAAK,GAAIY,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG/B,SAAS,CAACgC,MAA9B,CAAsCD,CAAC,EAAvC,CAA2C,CACvCb,UAAU,CAAG,EAAb,CACAD,SAAS,CAAG,EAAZ,CACA;AACAA,SAAS,CAAGgB,MAAM,CAACC,IAAP,CAAYlC,SAAS,CAAC+B,CAAD,CAArB,CAAZ,CACA,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGlB,SAAS,CAACe,MAA9B,CAAsCG,CAAC,EAAvC,CAA2C,CACvC,GAAI,CAACJ,CAAC,CAAC,CAAH,EAAQ,CAAR,GAAc,CAAlB,CAAqB,CACjB,GAAII,CAAC,GAAK,CAAV,CAAc,CACVjB,UAAU,CAACW,IAAX,CAAgB,CAACzB,KAAK,CAAEJ,SAAS,CAAC+B,CAAD,CAAT,CAAad,SAAS,CAACkB,CAAD,CAAtB,CAAR,CAAoC9B,KAAK,CAAE,CAACC,IAAI,CAAE,CAACC,EAAE,CAAE,IAAL,CAAP,CAAmBqB,MAAM,CAAE,OAA3B,CAAoCf,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAA/C,CAA3C,CAAhB,EACH,CAFD,IAEM,CACFG,UAAU,CAACW,IAAX,CAAgB,CAACzB,KAAK,CAAEJ,SAAS,CAAC+B,CAAD,CAAT,CAAad,SAAS,CAACkB,CAAD,CAAtB,CAAR,CAAoC9B,KAAK,CAAE,CAACC,IAAI,CAAE,CAACC,EAAE,CAAE,IAAL,CAAP,CAAmBM,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAA9B,CAA3C,CAAhB,EACH,CACJ,CAND,IAOK,CACD,GAAIoB,CAAC,GAAK,CAAV,CAAc,CACVjB,UAAU,CAACW,IAAX,CAAgB,CAACzB,KAAK,CAAEJ,SAAS,CAAC+B,CAAD,CAAT,CAAad,SAAS,CAACkB,CAAD,CAAtB,CAAR,CAAoC9B,KAAK,CAAE,CAACC,IAAI,CAAE,CAACC,EAAE,CAAE,IAAL,CAAP,CAAmBE,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAC,CAACC,GAAG,CAAE,QAAN,CAA/B,CAAzB,CAA0EgB,MAAM,CAAE,OAAlF,CAA2Ff,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAAtG,CAA3C,CAAhB,EACH,CAFD,IAEM,CACFG,UAAU,CAACW,IAAX,CAAgB,CAACzB,KAAK,CAAEJ,SAAS,CAAC+B,CAAD,CAAT,CAAad,SAAS,CAACkB,CAAD,CAAtB,CAAR,CAAoC9B,KAAK,CAAE,CAACC,IAAI,CAAE,CAACC,EAAE,CAAE,IAAL,CAAP,CAAmBE,IAAI,CAAE,CAACC,WAAW,CAAE,OAAd,CAAuBC,OAAO,CAAC,CAACC,GAAG,CAAE,QAAN,CAA/B,CAAzB,CAA0EC,SAAS,CAAE,CAACC,QAAQ,CAAE,QAAX,CAAqBC,UAAU,CAAE,QAAjC,CAArF,CAA3C,CAAhB,EACH,CACJ,CACJ,CACDZ,IAAI,CAAC0B,IAAL,CAAUX,UAAV,EAEH,CAGDF,YAAY,CAAC,CAAD,CAAZ,CAAgBb,IAAhB,CAAuBA,IAAvB,CACA;AAEAF,OAAO,CAACC,GAAR,CAAY,oCAAZ,CAAkDc,YAAlD,EACAf,OAAO,CAACC,GAAR,CAAY,+CAAZ,CAA6DF,SAA7D,EAEA,MACI,qBAAC,SAAD,EAAW,OAAO,CACd,oBAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAC,SAFV,CAGI,SAAS,CAAED,OAAO,CAACV,MAHvB,CAII,KAAK,CAAC,QAJV,oBADJ,CASE,QAAQ,CAAE,gBATZ,EAoBI,oBAAC,UAAD,EAAY,OAAO,CAAE2B,YAArB,CAAmC,IAAI,CAAC,gBAAxC,EApBJ,CADJ,CAwBH,C,sBAhPkBnC,KAAK,CAACuD,S,EAmP7B,cAAepD,CAAAA,UAAU,CAACG,MAAD,CAAV,CAAmBU,QAAnB,CAAf","sourcesContent":["import React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst styles = theme => ({\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        align: 'center',\n    }\n\n});\n\nclass Download extends React.Component {\n    render() {\n        const { classes, dataArray } = this.props;\n        console.log(`data array being passed is ${dataArray}`);\n        const data = [[{\n                        value: \"Rec Number\",\n                        style: {\n                            font: {\n                                    sz: \"18\",\n                                    bold: true\n                                },\n                            fill: {\n                                    patternType: \"solid\",\n                                    fgColor:{\n                                            rgb: \"86af49\"\n                                            }\n                                    },\n                            alignment: {\n                                    vertical: \"center\",\n                                    horizontal: \"center\"}\n                                }\n                        },\n            {\n                value: \"Scan Date\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Scan Code\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Product\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Quantity\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Tag Number\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        },\n                        alignment: {\n                            vertical: \"center\",\n                            horizontal: \"center\"}\n                    }\n                }\n            }\n                    ]];\n        const multiDataSet = [];\n        let keyHolder = [];\n        let dataHolder = [];\n\n        const columnsArray = [\n            {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\",\n                style: {\n                    fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"0\"\n\n                }\n            },\n            {title: \"Scan Date\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"yyyy-mm-dd\"\n\n                }\n            },\n            {title: \"Scan Code\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n\n                }\n            },\n            {title: \"Product\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n\n                }\n            },\n            {title: \"Quantity\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"#,##0\"\n\n                }\n            },\n            {title: \"Tag Number\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"#,##0\"\n\n                }\n            }\n        ];\n\n        // multiDataSet.push({ySteps: 1, columns: columnsArray});\n        multiDataSet.push({columns: columnsArray});\n\n        //have to loop through data being passed and create an array of objects\n\n        //looping through array being passed so array[0] will give us first object\n        for (let i = 0; i < dataArray.length; i++) {\n            dataHolder = [];\n            keyHolder = [];\n            //putting all the keys of the object into an array\n            keyHolder = Object.keys(dataArray[i]);\n            for (let j = 1; j < keyHolder.length; j++) {\n                if ((i+1) % 2 === 1) {\n                    if( j === 5 ) {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }else {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }\n                }\n                else {\n                    if( j === 5 ) {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }else {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }\n                }\n            }\n            data.push(dataHolder);\n\n        }\n\n\n        multiDataSet[0].data = data;\n        //multiDataSet[0].data = data;\n\n        console.log(\"This is the object being created: \", multiDataSet);\n        console.log(\"This is the original object passed as param: \", dataArray);\n\n        return (\n            <ExcelFile element={\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    align='center'\n                >\n                    Download Report\n                </Button>\n            } filename={\"Report Request\"}>\n                {/*<ExcelSheet data={dataArray} name=\"Scanned_Report\">*/}\n                {/*    <ExcelColumn label=\"Rec Number\" value=\"recno\" />*/}\n                {/*    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>*/}\n                {/*    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>*/}\n                {/*    <ExcelColumn label=\"Product\" value=\"product\"/>*/}\n                {/*    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>*/}\n                {/*    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>*/}\n                {/*    /!*<ExcelColumn label=\"Marital Status\"*!/*/}\n                {/*                 /!*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*!/*/}\n                {/*</ExcelSheet>*/}\n                <ExcelSheet dataSet={multiDataSet} name=\"Scanned_Report\" />\n            </ExcelFile>\n        );\n    }\n}\n\nexport default withStyles(styles)(Download);\n\n"]},"metadata":{},"sourceType":"module"}