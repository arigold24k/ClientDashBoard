{"ast":null,"code":"var bcrypt = require('bcrypt-nodejs');\n\nvar saltRounds = 12;\nvar salt = bcrypt.genSaltSync(saltRounds);\nvar func_ = {\n  encryptPW: function encryptPW(password) {\n    // console.log('This is the data being passed to the encryp function, password ', password);\n    var hash = bcrypt.hashSync(password, salt); // bcrypt.hash(password, saltRounds).then(function(hash) {\n    //\n    //     if(hash) {\n    //         cb(null, hash);\n    //         console.log('This is the hash ', err);\n    //     }\n    //     cb(hash, null);\n    //     console.log('This is the hash ', data);\n    // });\n\n    if (hash) {\n      return hash;\n    } else {\n      return 0;\n    }\n  },\n  checkPW: function checkPW(passwordEnt, passwordIS) {\n    var compareVal = bcrypt.compareSync(passwordEnt, passwordIS);\n\n    if (compareVal) {\n      return compareVal;\n    }\n\n    return 0;\n  }\n};\nmodule.exports = func_;","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\clientDashboard\\ClientDashBoard\\client\\src\\functions\\functions.js"],"names":["bcrypt","require","saltRounds","salt","genSaltSync","func_","encryptPW","password","hash","hashSync","checkPW","passwordEnt","passwordIS","compareVal","compareSync","module","exports"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,IAAMC,UAAU,GAAG,EAAnB;AACA,IAAMC,IAAI,GAAGH,MAAM,CAACI,WAAP,CAAmBF,UAAnB,CAAb;AAEA,IAAMG,KAAK,GAAG;AACVC,EAAAA,SAAS,EAAE,mBAASC,QAAT,EAAmB;AAC1B;AACA,QAAIC,IAAI,GAAGR,MAAM,CAACS,QAAP,CAAgBF,QAAhB,EAA0BJ,IAA1B,CAAX,CAF0B,CAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIK,IAAJ,EAAU;AACN,aAAOA,IAAP;AACH,KAFD,MAEK;AACD,aAAO,CAAP;AACH;AACJ,GAlBS;AAmBVE,EAAAA,OAAO,EAAC,iBAASC,WAAT,EAAsBC,UAAtB,EAAkC;AACtC,QAAMC,UAAU,GAAGb,MAAM,CAACc,WAAP,CAAmBH,WAAnB,EAAgCC,UAAhC,CAAnB;;AACA,QAAGC,UAAH,EAAe;AACX,aAAOA,UAAP;AACH;;AAAA,WAAO,CAAP;AAEJ;AAzBS,CAAd;AA6BAE,MAAM,CAACC,OAAP,GAAiBX,KAAjB","sourcesContent":["const bcrypt = require('bcrypt-nodejs');\nconst saltRounds = 12;\nconst salt = bcrypt.genSaltSync(saltRounds);\n\nconst func_ = {\n    encryptPW: function(password) {\n        // console.log('This is the data being passed to the encryp function, password ', password);\n        let hash = bcrypt.hashSync(password, salt);\n        // bcrypt.hash(password, saltRounds).then(function(hash) {\n        //\n        //     if(hash) {\n        //         cb(null, hash);\n        //         console.log('This is the hash ', err);\n        //     }\n        //     cb(hash, null);\n        //     console.log('This is the hash ', data);\n        // });\n        if (hash) {\n            return hash;\n        }else{\n            return 0\n        }\n    },\n    checkPW:function(passwordEnt, passwordIS) {\n        const compareVal = bcrypt.compareSync(passwordEnt, passwordIS);\n        if(compareVal) {\n            return compareVal\n        }return 0\n\n    }\n\n};\n\nmodule.exports = func_;\n\n"]},"metadata":{},"sourceType":"module"}