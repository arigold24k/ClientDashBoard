{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\avidal\\\\Documents\\\\WebApps\\\\project2\\\\client\\\\src\\\\components\\\\MenuItems\\\\menuitems.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      display: 'block',\n      marginTop: theme.spacing.unit * 2\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    }\n  };\n};\n\nvar ControlledOpenSelect =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ControlledOpenSelect, _React$Component);\n\n  function ControlledOpenSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ControlledOpenSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ControlledOpenSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      purpose: '',\n      open: false\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ControlledOpenSelect, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"form\", {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.button,\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Select the PURPOSE.\"), React.createElement(FormControl, {\n        className: classes.formControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"purpose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Purpose\"), React.createElement(Select, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        onOpen: this.handleOpen,\n        value: this.state.purpose,\n        onChange: this.handleChange,\n        inputProps: {\n          name: 'purpose',\n          id: 'purp'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"None\")), React.createElement(MenuItem, {\n        value: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Receipt\"), React.createElement(MenuItem, {\n        value: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Report\"), React.createElement(MenuItem, {\n        value: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Consume\"), React.createElement(MenuItem, {\n        value: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Error\"), React.createElement(MenuItem, {\n        value: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Cycle Count\"), React.createElement(MenuItem, {\n        value: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Production Receipt\"))));\n    }\n  }]);\n\n  return ControlledOpenSelect;\n}(React.Component);\n\nControlledOpenSelect.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ControlledOpenSelect);","map":{"version":3,"sources":["C:\\Users\\avidal\\Documents\\WebApps\\project2\\client\\src\\components\\MenuItems\\menuitems.js"],"names":["React","PropTypes","withStyles","InputLabel","MenuItem","FormControl","Select","Button","styles","theme","button","display","marginTop","spacing","unit","formControl","margin","minWidth","ControlledOpenSelect","state","purpose","open","handleChange","event","setState","target","name","value","handleClose","handleOpen","classes","props","id","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        display: 'block',\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n});\r\n\r\nclass ControlledOpenSelect extends React.Component {\r\n    state = {\r\n        purpose: '',\r\n        open: false,\r\n    };\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <form autoComplete=\"off\">\r\n                <Button className={classes.button} onClick={this.handleOpen}>\r\n                    Select the PURPOSE.\r\n                </Button>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"purpose\">Purpose</InputLabel>\r\n                    <Select\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose}\r\n                        onOpen={this.handleOpen}\r\n                        value={this.state.purpose}\r\n                        onChange={this.handleChange}                                \r\n                        inputProps={{\r\n                            name: 'purpose',\r\n                            id: 'purp',\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={1}>Receipt</MenuItem>\r\n                        <MenuItem value={2}>Report</MenuItem>\r\n                        <MenuItem value={3}>Consume</MenuItem>\r\n                        <MenuItem value={4}>Error</MenuItem>\r\n                        <MenuItem value={5}>Cycle Count</MenuItem>\r\n                        <MenuItem value={6}>Production Receipt</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nControlledOpenSelect.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ControlledOpenSelect);\r\n\r\n"]},"metadata":{},"sourceType":"module"}