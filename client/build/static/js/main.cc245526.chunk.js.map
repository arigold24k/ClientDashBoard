{"version":3,"sources":["functions/functions.js","components/SignIn/signin.js","pages/Login1/Login1.js","components/OrderDetail/orderDetail.js","components/PurposeSection/purpose.js","components/Navbar2/navbar3.js","components/ListItems/listItems.js","pages/ClientCheckout/clientCKout.js","components/SimpleTable/simpleTable.js","components/DateSelector/dateTextBox.js","components/ExcelExport/excelExport.js","pages/Reporting/reporting.js","components/SimpleLineChart/simpleLineChart.js","pages/DashBoard/dashboard.js","components/PrivateRoute/PrivateRoute.js","components/SignUp/signUp.js","pages/SignUpPage/signuppage.js","components/PasswordReset/passwordrst.js","pages/updatePW/updatePW.js","App.js","serviceWorker.js","index.js"],"names":["bcrypt","require","salt","genSaltSync","func_","encryptPW","password","hash","hashSync","checkPW","passwordEnt","passwordIS","compareVal","compareSync","module","exports","withStyles","theme","console","log","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","margin","backgroundColor","form","submit","color","props","classes","className","component","variant","required","fullWidth","htmlFor","id","name","autoComplete","autoFocus","onChange","handleinput","type","onClick","handlesubmit","align","href","link","getModalStyle","top","rand","left","transform","Math","round","random","Login1","this","Fragment","getValue","handleadd","handleAdd","aria-labelledby","aria-describedby","open","open1","onClose","handleClose","style","modal","open3","open4","usrname","open5","React","Component","position","palette","background","boxShadow","shadows","outline","orderDetail","focusUsernameInputField","input","focus","prevProps","prevState","snapshot","inputpart","inputqty","inputtagnum","myRef","gutterBottom","count","container","item","xs","inputRef","label","updateval","value","PurposeForm","state","setState","handleOpen","generateBarCode","event","target","justify","formControl","onOpen","purposeval","inputProps","button","minWidth","barcode","navbar2","handleDrawerOpen","handleDrawerClose","pushReporting","history","push","pushInvManag","pushHome","homepage","inv_manag","report","signoutFunction","classNames","appBar","appBarShift","disableGutters","toolbar","aria-label","menuButton","menuButtonHidden","noWrap","title","username","drawerPaper","drawerPaperClose","toolbarIcon","bind","handleSignOut","primary","withRouter","root","paddingRight","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","flexGrow","whiteSpace","overflowX","appBarSpacer","content","height","overflow","chartContainer","tableContainer","h5","marginBottom","purposetext","purp","steps","Checkout","handleClose1","activeStep","orderdetails","partnum","quantity","tagnum","handleClose2","handleClose3","handleClose4","window","location","reload","handleClose5","handleClose6","open6","handleClose7","open7","handleOrderDetail","handlePurposeChange","purposedetails","handlepg0Reset","handleNoSubmit","open2","handlepg1Reset","purpose","handleNext","handleSubmit","dataObj","test","substring","length","headerObj","sessionStorage","getItem","axios","post","headers","then","res","err","data","getCount","cnt","handleBack","getStepContent","step","barcodeVal","field1","field2","field3","Error","getResetButton","actstep","companyname","stepper","map","key","buttons","paper1","contextTypes","router","PropTypes","object","loadSection","buttonHolder","flexWrap","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","cols","incCheckBoxHead","indeterminate","checked","numeric","disablePadding","sortDirection","placement","enterDelay","active","direction","handleSort1","hinttext","floatinglabeltext","query","e","handleQueryChange","EnhancedTableToolbar","highlight","spacer","actions","lighten","light","text","dark","flex","initialState","selected","page","rowsPerPage","columnToSort","columnToQuery","EnhancedTable","handleSort","columnName","handleQueryChange1","handleSelectAllClick","handleSelAll","rows","handleClick","handleSelected","handleChangePage","handleChangeRowsPerPage","isSelected","indexOf","dataPassed","columns","tableTitle","incCheckBox","emptyRows","min","formQuery","toLowerCase","tableWrapper","table","filter","x","includes","slice","row","hover","role","tabIndex","rowItem","col","scope","toString","replace","colSpan","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","textField","noValidate","range1","handleDateChange","InputLabelProps","shrink","InputProps","startAdornment","range2","ExcelFile","ReactExport","ExcelSheet","Download","dataArray","font","sz","bold","fill","patternType","fgColor","rgb","alignment","vertical","horizontal","multiDataSet","keyHolder","dataHolder","wch","bgColor","border","bottom","numFmt","i","Object","keys","j","element","filename","dataSet","polyfill","ranges","ranges2","period","runReport","modalOpen","reportType","handleClose345","openModal","handleChange","prop","handleDate","handleSummarySubmit","comp","holderArray","dObj","RECNO","scandate","split","CODE","PART","QTY","TAG_NUM","newSel","selectedIndex","newSelected","concat","n","select","option1","option","updSelected","handleSelectAll","path","mdiLoading","size","rotate","spin","SimpleLineChart","passData","dataKey","formatter","Intl","NumberFormat","format","strokeDasharray","stroke","activeDot","r","dataTable","filtered","Dashboard","getChartData","conditions","email","holderObject","Word_Mon","Consumed","Received","received","catch","getTableData","holderArrayTable","holderObjectTable","tagcount","holdQueryString","PrivateRoute","auth","rest","Route","render","Redirect","to","pathname","from","signUp","CC","UN","email1","validE","error","PW","REPW","checkEmail","signuppage","preventDefault","funcs_","req","companyCode","userName","rePassWord","validEM","layout","initial_State","openerror","passwordrst","status","handleSendEmail","origin","v_to_email","v_subject","v_body","SEND_TO","SUBJECT","MESSAGE","handlemodalClose","updatePW","repassword","pw","functions","match","params","disabled","redirectToRefererrer","App","myCheckOutPage","signOut","compName","myReportingPage","myDashboardPage","clearState","pwHolder","check","tokenObj","Email","CompCode","compname","comp_name","token","setItem","removeItem","compCD","getKey","Switch","exact","SignUP","passwordRS","update","Boolean","hostname","createMuiTheme","500","action","typography","useNextVariants","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc245526.chunk.js","sourcesContent":["const bcrypt = require('bcrypt-nodejs');\nconst saltRounds = 12;\nconst salt = bcrypt.genSaltSync(saltRounds);\n\nconst func_ = {\n    encryptPW: function(password) {\n        // console.log('This is the data being passed to the encryp function, password ', password);\n        let hash = bcrypt.hashSync(password, salt);\n        // bcrypt.hash(password, saltRounds).then(function(hash) {\n        //\n        //     if(hash) {\n        //         cb(null, hash);\n        //         console.log('This is the hash ', err);\n        //     }\n        //     cb(hash, null);\n        //     console.log('This is the hash ', data);\n        // });\n        if (hash) {\n            return hash;\n        }else{\n            return 0\n        }\n    },\n    checkPW:function(passwordEnt, passwordIS) {\n        const compareVal = bcrypt.compareSync(passwordEnt, passwordIS);\n        if(compareVal) {\n            return compareVal\n        }return 0\n\n    }\n\n};\n\nmodule.exports = func_;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Link from '@material-ui/core/Link';\n\nconst styles = theme => console.log(theme) || ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3,\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n    },\n    avatar: {\n        margin: theme.spacing.unit,\n        backgroundColor: 'green',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing.unit,\n    },\n    submit: {\n        marginTop: theme.spacing.unit * 3,\n        backgroundColor: 'green',\n        color: 'white',\n    },\n});\nfunction SignIn(props) {\n    const { classes } = props;\n\n    return (\n        <main className={classes.main}>\n            <CssBaseline />\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"usrname\">UserName</InputLabel>\n                        <Input id=\"usrname\" name=\"usrname\" autoComplete=\"usrname\" autoFocus onChange={props.handleinput} />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={props.handleinput} />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color= \"primary\"\n                        className={classes.submit}\n                        onClick={props.handlesubmit}\n                    >\n                        Sign in\n                    </Button>\n\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                        <Link href={'/#/signup'} className={classes.link}>First time user?</Link>\n\n                    </Typography>\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                        <Link href={'/#/forgotdorwssap'} className={classes.link}>Trouble signing in? </Link>\n\n                    </Typography>\n\n                </form>\n            </Paper>\n\n        </main>\n    );\n}\n\nSignIn.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignIn);\n\n","import React from \"react\";\nimport SignIn from '../../components/SignIn';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n    modal: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    }\n});\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nclass Login1 extends React.Component {\n    render(props) {\n        const{classes} = this.props;\n        return (\n            <React.Fragment>\n                <SignIn handleinput={this.props.getValue}  handlesubmit={this.props.handlesubmit} handleadd={this.props.handleAdd}/>\n\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.props.open1}\n                        onClose={this.props.handleClose}\n                    >\n                        <div style={getModalStyle()} className={classes.modal}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                User Already Exist.\n                            </Typography>\n                        </div>\n                    </Modal>\n                    <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.props.open}\n                    onClose={this.props.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.modal}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            Error\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Username or Password is incorrect.\n                        </Typography>\n                    </div>\n                </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.props.open3}\n                        onClose={this.props.handleClose}\n                    >\n                        <div style={getModalStyle()} className={classes.modal}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Please provide a Username and Password.\n                            </Typography>\n                        </div>\n                    </Modal>\n\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.props.open4}\n                        onClose={this.props.handleClose}\n                    >\n                        <div style={getModalStyle()} className={classes.modal}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                User Added\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                User {this.props.usrname} has been added.\n                            </Typography>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.props.open5}\n                        onClose={this.props.handleClose}\n                    >\n                        <div style={getModalStyle()} className={classes.modal}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                NO User Exist.\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(Login1);\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass orderDetail extends React.Component {\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.inputpart === '' && this.props.inputqty === '' && this.props.inputtagnum === '') {\n            // this.myRef.focus();\n            this.focusUsernameInputField(this.myRef);\n        }\n    }\n    focusUsernameInputField = (input) => {\n        if (input) {\n           input.focus()\n        }\n    };\n    render () {\n    return (\n        <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom>\n                Order Details - Scanned Material Count {this.props.count}\n            </Typography>\n            <Grid container spacing={24}>\n                {/*<Grid item xs={12} sm={6}>*/}\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        inputRef={(input) => {this.myRef = input}}\n                        id=\"partnum\"\n                        name=\"partnum\"\n                        label=\"partnum\"\n                        fullWidth\n                        autoComplete=\"pnum\"\n                        onChange={this.props.updateval}\n                        value={this.props.inputpart}\n                        autoFocus={true}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"quantity\"\n                        name=\"quantity\"\n                        label=\"Quantity\"\n                        fullWidth\n                        autoComplete=\"qty\"\n                        onChange={this.props.updateval}\n                        value={this.props.inputqty}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"tagnum\"\n                        name=\"tagnum\"\n                        label=\"Tag Number\"\n                        fullWidth\n                        autoComplete=\"tgnum\"\n                        onChange={this.props.updateval}\n                        value={this.props.inputtagnum}\n                    />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );}\n}\nexport default orderDetail;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst styles = theme => ({\n    button: {\n        display: 'block',\n        marginTop: theme.spacing.unit * 2,\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    barcode: {\n        align: 'center',\n    },\n});\n\nclass PurposeForm extends React.Component {\n    state = {\n        open: false,\n    };\n\n    // handleChange = event => {\n    //     this.setState({ [event.target.name]: event.target.value });\n    //     console.log(this.state);\n    // };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    generateBarCode = event => {\n        this.setState({[event.target.name]: event.target.value});\n    };\n\n    render()\n    {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Typography variant=\"h6\" gutterBottom>\n                    Purpose\n                </Typography>\n                <Grid container spacing={24} justify={'center'}>\n                    <Grid item xs>\n                        <form autoComplete=\"off\">\n                            {/*<Button className={classes.button} onClick={this.handleOpen}>*/}\n                                {/*Select the PURPOSE.*/}\n                            {/*</Button>*/}\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"purpose\">Purpose</InputLabel>\n                                <Select\n                                    open={this.state.open}\n                                    onClose={this.handleClose}\n                                    onOpen={this.handleOpen}\n                                    value={this.props.purposeval}\n                                    onChange={this.props.updateval}\n                                    inputProps={{\n                                        name: 'purpose',\n                                        id: 'purp',\n                                    }}\n                                >\n                                    <MenuItem value=\"\">\n                                        <em>None</em>\n                                    </MenuItem>\n                                    <MenuItem value={1}>Receipt</MenuItem>\n                                    <MenuItem value={2}>Consume</MenuItem>\n                                    <MenuItem value={3}>Error</MenuItem>\n                                    <MenuItem value={4}>Cycle Count</MenuItem>\n                                    <MenuItem value={5}>Production Receipt</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    </Grid>\n                    {/*{this.props.purposeval === '' ?*/}\n                        {/*(<Grid item xs>*/}\n                        {/*</Grid>) : (*/}\n                            {/*<Grid item xs className={classes.barcode}>*/}\n                                {/*<Barcode*/}\n                                    {/*value = {purposetext(this.props.purposeval).substring(0,3) + this.props.barcodeVal}*/}\n                                    {/*// width = {2}*/}\n                                    {/*height = {100}*/}\n                                    {/*format = {\"CODE128\"}*/}\n                                    {/*displayValue = {true}*/}\n                                    {/*fontOptions = {\"\"}*/}\n                                    {/*font = {\"monospace\"}*/}\n                                    {/*textAlign = {\"center\"}*/}\n                                    {/*textPosition = {\"bottom\"}*/}\n                                    {/*textMargin = {2}*/}\n                                    {/*fontSize = {20}*/}\n                                    {/*background = {\"#ffffff\"}*/}\n                                    {/*lineColor = {\"#000000\"}*/}\n                                    {/*margin = {10}*/}\n                                    {/*marginTop = {undefined}*/}\n                                    {/*marginBottom = {undefined}*/}\n                                    {/*marginLeft = {undefined}*/}\n                                    {/*marginRight = {undefined}*/}\n                                {/*/>*/}\n                            {/*</Grid>*/}\n                        {/*)}*/}\n                    <Grid item xs={12}>\n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        );\n    }\n}\nPurposeForm.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(PurposeForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { withStyles } from '@material-ui/core/styles';\nimport { mainListItems } from './../ListItems';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport {withRouter} from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n});\n\nclass navbar2 extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    pushReporting = () => {\n        this.props.history.push('/reporting');\n    };\n\n    pushInvManag = () => {\n        this.props.history.push('/manage_inv');\n    };\n\n    pushHome = () => {\n        this.props.history.push('/home_page');\n    };\n\n    render () {\n\n        const { classes } = this.props;\n\n        return(\n        <div>\n        <AppBar\n            position=\"absolute\"\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\n        >\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Open drawer\"\n                    onClick={this.handleDrawerOpen}\n                    className={classNames(\n                        classes.menuButton,\n                        this.state.open && classes.menuButtonHidden,\n                    )}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    noWrap\n                    className={classes.title}\n                >\n                    Pacesetter Steel --- {this.props.username}\n                </Typography>\n                <IconButton color=\"inherit\">\n                    {/*<Badge badgeContent={4} color=\"secondary\">*/}\n                        {/*<NotificationsIcon />*/}\n                    {/*</Badge>*/}\n                </IconButton>\n            </Toolbar>\n        </AppBar>\n        <Drawer\n        variant=\"permanent\"\n        classes={{\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\n        }}\n        open={this.state.open}\n            >\n            <div className={classes.toolbarIcon}>\n            <IconButton onClick={this.handleDrawerClose}>\n            <ChevronLeftIcon />\n            </IconButton>\n    </div>\n    <Divider />\n        <List>{mainListItems(this.pushHome.bind(this), this.pushInvManag.bind(this), this.pushReporting.bind(this), this.props.handleSignOut)}</List>\n    <Divider />\n        {/*<List>{secondaryListItems}</List>*/}\n    </Drawer>\n        </div>\n        )}\n\n}\n\nnavbar2.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withRouter(withStyles(styles)(navbar2));","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CollectionsBookmarkOutlined from '@material-ui/icons/CollectionsBookmarkOutlined';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LogOut from '@material-ui/icons/AssignmentReturnRounded';\n\nexport const mainListItems = (homepage, inv_manag, report, signoutFunction) => (\n    <div>\n        <ListItem onClick={homepage} button>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem onClick={inv_manag} button>\n            <ListItemIcon>\n                <CollectionsBookmarkOutlined />\n            </ListItemIcon>\n            <ListItemText primary=\"Material\" />\n        </ListItem>\n        <ListItem onClick={report} button>\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText  primary=\"Reports\" />\n        </ListItem>\n        <ListItem onClick={signoutFunction}  button>\n            <ListItemIcon>\n                {/*<Icon path={mdiLogoutVariant}*/}\n                      {/*size={1.5}*/}\n                      {/*horizontal*/}\n                      {/*vertical*/}\n                      {/*// // rotate={90}*/}\n                      {/*color=\"#86af49\"*/}\n                      {/*// // spin*/}\n                {/*/>*/}\n                <LogOut />\n            </ListItemIcon>\n            <ListItemText primary=\"Log Out\" />\n        </ListItem>\n    </div>\n);\n//\n// export const secondaryListItems = (\n//     <div>\n//         <ListSubheader inset>Saved reports</ListSubheader>\n//         <ListItem button>\n//             <ListItemIcon>\n//                 {/*<AssignmentIcon />*/}\n//             </ListItemIcon>\n//             <ListItemText primary=\"Current month\" />\n//         </ListItem>\n//         <ListItem button>\n//             <ListItemIcon>\n//                 {/*<AssignmentIcon />*/}\n//             </ListItemIcon>\n//             <ListItemText primary=\"Last quarter\" />\n//         </ListItem>\n//         <ListItem button>\n//             <ListItemIcon>\n//                 {/*<AssignmentIcon />*/}\n//             </ListItemIcon>\n//             <ListItemText primary=\"Year-end sale\" />\n//         </ListItem>\n//     </div>\n// );\n\n\n","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport OrderDetail from'./../../components/OrderDetail';\nimport PurposeSection from './../../components/PurposeSection';\nimport Modal from '@material-ui/core/Modal';\nimport Navbar from '../../components/Navbar2';\nimport axios from 'axios';\nfunction purposetext(purp) {\n    switch (purp) {\n        case 1:\n            return 'RECEIPT';\n        case 2:\n            return 'CONSUME';\n        case 3:\n            return 'ERROR';\n        case 4:\n            return 'CYCLE COUNT';\n        case 5:\n            return 'PRODUCTION RECEIPT';\n        default:\n            return '';\n        // default:\n        //     throw new Error('Unknown step');\n    }\n}\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        overflow: 'auto',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n    paper1: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit,\n        overflow: 'auto',\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * -1,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n        align: 'center',\n    },\n    loadSection: {\n        align: 'center',\n        marginTop: theme.spacing.unit * 3,\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        align: 'center',\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    buttonHolder: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    }\n});\n\n\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nconst steps = ['Purpose', 'Order Detail'];\n\nclass Checkout extends React.Component {\n    static contextTypes = {\n        router: PropTypes.object\n    };\n\n\n    constructor(props) {\n        super(props);\n        const initialState = {\n            activeStep: 0,\n            orderdetails : {partnum: '',\n                quantity: '',\n                tagnum: ''\n            },\n            purposedetails: {\n                purpose: 2\n            },\n            open: false,\n            open1: false,\n            open2: false,\n            open3: false,\n            open4: false,\n            open5: false,\n            open6:false,\n            open7: false,\n            count: 0,\n        };\n        this.state = initialState;\n    }\n    handleClose = () => {\n        this.setState({open1: false });\n    };\n\n    handleClose1 = () => {\n        this.setState({activeStep: 1,\n            orderdetails : {\n                partnum: '',\n                quantity: '',\n                tagnum: ''\n            },\n            open: false\n        });\n\n    };\n\n    handleClose2 = () => {\n\n    };\n\n    handleClose3 = () => {\n        this.setState({open3: false });\n    };\n\n    handleClose4 = () => {\n        this.setState({open4: false});\n        window.location.reload();\n\n    };\n\n    handleClose5 = () => {\n        this.setState({activeStep: 1,\n            open5: false\n        });\n    };\n\n    handleClose6 = () => {\n        this.setState({activeStep: 1,\n            open6: false\n        });\n    };\n\n    handleClose7 = () => {\n        this.setState({activeStep: 1,\n            open7: false\n        });\n    };\n\n    handleOrderDetail = event => {\n        const { name, value} = event.target;\n        this.setState(prevState => ({\n                                orderdetails: {\n                                    ...prevState.orderdetails,\n                                    [name]: value\n                                }\n        }));\n\n    };\n    handlePurposeChange = event => {\n        const { name, value} = event.target;\n        this.setState(prevState => ({\n            purposedetails: {\n                ...prevState.purposedetails,\n                [name]: value\n            }\n        }));\n\n    };\n    handlepg0Reset = () => {\n        this.setState({orderdetails:\n                {partnum: '',\n                quantity: '',\n                tagnum: ''\n            }});\n    };\n\n    handleNoSubmit = () => {\n        this.setState({open2: false}) ;\n    };\n    handlepg1Reset = () => {\n        this.setState({purposedetails:\n                {purpose: '',\n                barcode: ''\n                }\n        });\n    };\n    handleNext = () => {\n        if((this.state.activeStep === 1 && (this.state.orderdetails.partnum !== '' && this.state.orderdetails.tagnum !== '' && this.state.orderdetails.quantity !== '')) || (this.state.activeStep === 0 && (this.state.purposedetails.purpose !== '' )) ) {\n            this.setState(state => ({\n                activeStep: state.activeStep + 1,\n            }));\n        }else {\n            this.setState({open1: true});\n        }\n        // this.setState(state => ({\n        //     activeStep: state.activeStep + 1,\n        // }));\n        // console.log(\"curent state: \", this.state);\n    };\n\n    handleSubmit = () => {\n        const checkLet = /[\\D]/;\n        const dataObj = {\n            partnum: this.state.orderdetails.partnum,\n            quantity: checkLet.test(this.state.orderdetails.quantity.substring(1,1)) ? this.state.orderdetails.quantity.substring(1,this.state.orderdetails.quantity.length -1) : this.state.orderdetails.quantity,\n            tagnum: this.state.orderdetails.tagnum,\n            purpose: purposetext(this.state.purposedetails.purpose)\n        };\n\n        const headerObj = {\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\n        };\n        axios.post(\"/api/processScan\",dataObj, {headers: headerObj}).then((res, err) => {\n            // console.log(\"Added submit to the client checkout page \", res);\n            if((res.data.data !== null && res.data.data === true) || (res.data.data === 1)){\n                if(this.state.purposedetails.purpose === 3) {\n                    this.setState({count: this.state.count - 1});\n                    this.setState({activeStep: 1,\n                        orderdetails : {\n                            partnum: '',\n                            quantity: '',\n                            tagnum: ''\n                        }\n                    });\n                }else {\n                    this.setState({count: this.state.count + 1});\n                    this.setState({activeStep: 1,\n                        orderdetails : {\n                            partnum: '',\n                            quantity: '',\n                            tagnum: ''\n                        }\n                    });\n                }\n                //removed to increase scan efficency.\n                // this.setState({open: true, open2: false});\n            }else if (res.data.data === null) {\n                this.setState({open3: true, open2: false, orderdetails : {\n                        partnum: '',\n                        quantity: '',\n                        tagnum: ''\n                    }});\n            }else if (res.data.data === 'INVALIDTOKEN') {\n                this.setState({open4: true, orderdetails : {\n                        partnum: '',\n                        quantity: '',\n                        tagnum: ''\n                    }})\n            }else if (res.data.data === 'TAGALREADYCONSUMED') {\n                this.setState({open5: true, open2: false, orderdetails : {\n                        partnum: '',\n                        quantity: '',\n                        tagnum: ''\n                    }})\n            }else if (res.data.data === 'NOERROR') {\n                this.setState({open6: true, open2: false, orderdetails : {\n                        partnum: '',\n                        quantity: '',\n                        tagnum: ''\n                    }})\n            }else if (res.data.data === 'RECEIPT') {\n                this.setState({count: this.state.count + 1, orderdetails : {\n                        partnum: '',\n                        quantity: '',\n                        tagnum: ''\n                    }});\n                // this.setState({open7: true, open2: false})\n            }\n\n        })\n\n\n    };\n    getCount = () => {\n        const headerObj = {\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\n        };\n      axios.post('/api/getcount',{},{headers: headerObj}).then((res, err) => {\n          // console.log('This is the response to the get count, ', res.data.count[0][0].count);\n          const cnt = res.data.count[0][0].count || 0;\n          if (cnt > 0) {\n              this.setState({count: cnt});\n          }\n      })\n    };\n\n    handleBack = () => {\n        this.setState(state => ({\n            activeStep: state.activeStep - 1,\n        }));\n        // console.log(\"curent state: \", this.state);\n    };\n    getStepContent = (step) => {\n        switch (step) {\n            case 0:\n                return <PurposeSection updateval={this.handlePurposeChange.bind(this)} purposeval={this.state.purposedetails.purpose} barcodeVal={this.state.orderdetails.tagnum}/>;\n            case 1:\n                return <OrderDetail field1={this.state.orderdetails.partnum} field2={this.state.orderdetails.quantity} field3={this.state.orderdetails.tagnum} updateval={this.handleOrderDetail.bind(this)} inputpart={this.state.orderdetails.partnum} inputqty={this.state.orderdetails.quantity} inputtagnum={this.state.orderdetails.tagnum} count={this.state.count}/>;\n            // case 2:\n            //     return <Review pnumber={this.state.orderdetails.partnum} tagnumber={this.state.orderdetails.tagnum} qty={this.state.orderdetails.quantity} purposeval={this.state.purposedetails.purpose}/>;\n            default:\n                throw new Error('Unknown step');\n        }\n    };\n    getResetButton = (actstep, classes) => {\n        switch(actstep) {\n            case 0:\n                return (<Button onClick={this.handlepg1Reset} className={classes.button} variant=\"outlined\">\n                    Reset\n                </Button>);\n            case 1:\n                return (<Button onClick={this.handlepg0Reset} className={classes.button} variant=\"outlined\">\n                            Reset\n                        </Button>);\n            default:\n                return ('');\n        }\n    };\n\n    componentWillMount() {\n        // this.setState({companyName: this.props});\n\n        // console.log('the state in teh comp will mount, ', this.props);\n        this.getCount();\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { activeStep } = this.state;\n\n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                <CssBaseline/>\n                <Navbar handleSignOut={this.props.handleSignOut} username={this.props.companyname}/>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                        <Paper className={classes.paper}>\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                                Order Input\n                            </Typography>\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\n                                {steps.map(label => (\n                                    <Step key={label}>\n                                        <StepLabel>{label}</StepLabel>\n                                    </Step>\n                                ))}\n                            </Stepper>\n                            {this.getStepContent(activeStep)}\n                            <div className={classes.buttons}>\n                                {activeStep === steps.length - 1 ?\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={this.handleSubmit}\n                                        className={classes.button}\n                                    >\n                                        Submit\n                                    </Button>\n                                    :\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={this.handleNext}\n                                        className={classes.button}\n                                    >\n                                        Next\n                                    </Button>}\n                                {activeStep !== 0 && (\n                                    <Button onClick={this.handleBack} className={classes.button}>\n                                        Back\n                                    </Button>\n                                )}\n                                {this.getResetButton(activeStep, classes)}\n                            </div>\n                        </Paper>\n                    </main>\n                </div>\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open}\n                        onClose={this.handleClose1}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Added\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Material movement has been added.\n                            </Typography>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open1}\n                        onClose={this.handleClose}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Please make sure all fields are filled in correctly.\n                            </Typography>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open2}\n                        onClose={this.handleClose2}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Summary\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Part Number: {this.state.orderdetails.partnum} || Quantity: {this.state.orderdetails.quantity.substring(1,this.state.orderdetails.quantity.length)} Lb. || Tag Number: {this.state.orderdetails.tagnum}\n                            </Typography>\n                            <Button onClick={this.handleNoSubmit} className={classes.button}>\n                                Do Not Submit\n                            </Button>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open3}\n                        onClose={this.handleClose3}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Material was not added, please ensure all data is in the appropriate field.\n                            </Typography>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open4}\n                        onClose={this.handleClose4}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Session Has expired -- Please Log in again.\n                            </Typography>\n                        </div>\n\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open5}\n                        onClose={this.handleClose5}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Tag Number does not exist.\n\n                                ---- or ----\n\n                                Tag Number has been consumed.\n                            </Typography>\n                        </div>\n\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open6}\n                        onClose={this.handleClose6}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                No Error To Correct.\n                            </Typography>\n                        </div>\n\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open7}\n                        onClose={this.handleClose7}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Success\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Receipt Successfully processed.\n                            </Typography>\n                        </div>\n\n                    </Modal>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nCheckout.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Checkout);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport classNames from 'classnames';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nimport orderBy from 'lodash/orderBy';\nimport TextField from '@material-ui/core/TextField';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\n\nclass EnhancedTableHead extends React.Component {\n    render() {\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount, cols, incCheckBoxHead } = this.props;\n        // console.log(\"Enhanced header, Order: \" + order + \". OrderBy: \" + orderBy);\n        // console.log(\"Enhanced header, cols props \" + cols[0].id);\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell padding=\"checkbox\">\n                        {incCheckBoxHead ? <Checkbox\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\n                            checked={numSelected === rowCount}\n                            onChange={onSelectAllClick}\n                            color='primary'\n                        /> : ''}\n\n                    </TableCell>\n                    {cols.map(\n                        cols => (\n                            <TableCell\n                                key={cols.id}\n                                align={cols.numeric ? 'right' : 'left'}\n                                display='flex'\n                                padding={cols.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === cols.id ? order : false}\n                            >\n                                <div display='block'>\n                                    <Tooltip\n                                        title=\"Sort\"\n                                        placement={cols.numeric ? 'bottom-end' : 'bottom-start'}\n                                        enterDelay={300}\n                                    >\n                                        <TableSortLabel\n                                            active={orderBy === cols.id}\n                                            direction={order}\n                                            onClick={(event) => this.props.handleSort1(event, cols.id)}\n                                        >\n                                            {cols.label}\n                                        </TableSortLabel>\n                                    </Tooltip>\n                                </div>\n                                <div display='block'>\n                                    <TextField\n                                        name={cols.id}\n                                        hinttext=\"Query\"\n                                        floatinglabeltext=\"Query\"\n                                        value={this.props.query}\n                                        onChange={(e) => this.props.handleQueryChange(e)}\n\n                                    />\n                                </div>\n                            </TableCell>\n                        ),\n                        this,\n                    )}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\nEnhancedTableHead.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n    root: {\n        paddingRight: theme.spacing.unit,\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: theme.palette.primary.main,\n                backgroundColor: lighten(theme.palette.primary.light, 0.85),\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.primary.dark,\n            },\n    spacer: {\n        flex: '1 1 50%',\n    },\n    actions: {\n        color: theme.palette.text.primary,\n    },\n    title: {\n        flex: '0 0 auto',\n    },\n});\n\nlet EnhancedTableToolbar = props => {\n    const { numSelected, classes, title } = props;\n    return (\n        <Toolbar\n            className={classNames(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            <div className={classes.title}>\n                {numSelected > 0 ? (\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\n                        {numSelected} selected\n                    </Typography>\n                ) : (\n                    <Typography variant=\"h6\" id=\"tableTitle\">\n                        {title}\n                    </Typography>\n                )}\n            </div>\n            <div className={classes.spacer} />\n            <div className={classes.actions}>\n            </div>\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        hover: 'primary',\n        overflowX: 'auto'\n    },\n    table: {\n        minWidth: 360,\n        backgroundColor: 'primary',\n    },\n    highlight: {\n        color: theme.palette.text.primary,\n        backgroundColor: theme.palette.primary.dark\n    },\n    rowItem: {\n        width: '90%'\n    }\n});\nconst initialState = {\n    selected: [],\n    page: 0,\n    rowsPerPage: 5,\n    columnToSort: '',\n    sortDirection: 'desc',\n    query: '',\n    columnToQuery: '',\n\n};\nclass EnhancedTable extends React.Component {\n    state = initialState;\n    constructor (props) {\n        super(props);\n        const {dataPassed} = this.props;\n        //const {dataPassed, selected} = this.props;\n        this.state = {\n            ...initialState,\n            rows: dataPassed,\n            selected: []\n        };\n    };\n    handleSort = (event, columnName) => {\n        // console.log(\"sort event object: \");\n        // console.log(\"Sort data is being hit Column Name:\", columnName);\n        this.setState({\n            columnToSort: columnName,\n            sortDirection: this.state.columnToSort === columnName ? (this.state.sortDirection === 'desc' ? 'asc' : 'desc') : 'asc'\n        });\n        // console.log(\"State of the state after the update in the sort data function \", this.state);\n    };\n\n    handleQueryChange1 = (event) => {\n        this.setState({\n            columnToQuery: event.target.name,\n            query: event.target.value\n        })\n    };\n\n    componentDidMount () {\n        // console.log(\"Component Did Mount\");\n        const { dataPassed } = this.props;\n        // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\n        this.setState({\n            rows: dataPassed\n        })\n    };\n\n    handleSelectAllClick = event => {\n        this.props.handleSelAll(event.target.checked, this.state.rows);\n    };\n\n    handleClick = (event, id) => {\n        this.props.handleSelected(id);\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    isSelected = id => this.props.selected.indexOf(id) !== -1;\n\n    render() {\n        const { classes, columns, tableTitle, selected, incCheckBox} = this.props;\n        const rows = this.props.dataPassed;\n        const { sortDirection, columnToSort, rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\n        const formQuery = this.state.query.toLowerCase();\n        // console.log(\"data being passed to table\", this.state.columnToSort);\n        // console.log(\"data being passed to table, columns\", columns);\n        // console.log(\"State in the table, \", this.state);\n\n        return (\n            <ResponsiveContainer width=\"99%\" height={320}>\n            <Paper className={classes.root}>\n                <EnhancedTableToolbar numSelected={selected.length} title={tableTitle} />\n                <div className={classes.tableWrapper}>\n                    <Table className={classes.table} aria-labelledby={tableTitle}>\n                        <EnhancedTableHead\n                            incCheckBoxHead = {incCheckBox}\n                            numSelected={selected.length}\n                            order={sortDirection}\n                            orderBy={columnToSort}\n                            onSelectAllClick={this.handleSelectAllClick}\n                            rowCount={rows.length}\n                            cols={columns}\n                            handleSort1={this.handleSort}\n                            handleQueryChange={this.handleQueryChange1}\n                        />\n                        <TableBody>\n\n                            {orderBy(this.state.query ? rows.filter(x => x[this.state.columnToQuery].toLowerCase().includes(formQuery)) : rows, this.state.columnToSort, this.state.sortDirection).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                                <TableRow\n                                    key={row.id}\n                                    hover\n                                    onClick={event => this.handleClick(event, row.id)}\n                                    role=\"checkbox\"\n                                    tabIndex={-1}\n                                    className={classes.rowItem}\n                                    selected={this.isSelected(row.id)}\n                                >\n                                    <TableCell padding=\"checkbox\">\n                                        {incCheckBox ? <Checkbox color='primary' checked={this.isSelected(row.id)} /> : ''}\n                                    </TableCell>\n                                    {columns.map((col) => (\n                                        <TableCell component=\"th\" scope=\"row\" align={col.numeric ? \"right\" : \"left\"} key={col.id}>\n                                            {col.numeric ? row[col.id].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : row[col.id]}\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            ))}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 48 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </Paper>\n            </ResponsiveContainer>\n        );\n    }\n}\n\nEnhancedTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EnhancedTable);\n\n// const actionsStyles = theme => ({\n//     root: {\n//         flexShrink: 0,\n//         color: theme.palette.text.secondary,\n//         marginLeft: theme.spacing.unit * 2.5,\n//     },\n// });\n//\n// class TablePaginationActions extends React.Component {\n//     handleFirstPageButtonClick = event => {\n//         this.props.onChangePage(event, 0);\n//     };\n//\n//     handleBackButtonClick = event => {\n//         this.props.onChangePage(event, this.props.page - 1);\n//     };\n//\n//     handleNextButtonClick = event => {\n//         this.props.onChangePage(event, this.props.page + 1);\n//     };\n//\n//     handleLastPageButtonClick = event => {\n//         this.props.onChangePage(\n//             event,\n//             Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n//         );\n//     };\n//\n//     render() {\n//         const { classes, count, page, rowsPerPage, theme } = this.props;\n//\n//         return (\n//             <div className={classes.root}>\n//                 <IconButton\n//                     onClick={this.handleFirstPageButtonClick}\n//                     disabled={page === 0}\n//                     aria-label=\"First Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n//                 </IconButton>\n//                 <IconButton\n//                     onClick={this.handleBackButtonClick}\n//                     disabled={page === 0}\n//                     aria-label=\"Previous Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n//                 </IconButton>\n//                 <IconButton\n//                     onClick={this.handleNextButtonClick}\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//                     aria-label=\"Next Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n//                 </IconButton>\n//                 <IconButton\n//                     onClick={this.handleLastPageButtonClick}\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n//                     aria-label=\"Last Page\"\n//                 >\n//                     {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n//                 </IconButton>\n//             </div>\n//         );\n//     }\n// }\n//\n// TablePaginationActions.propTypes = {\n//     classes: PropTypes.object.isRequired,\n//     count: PropTypes.number.isRequired,\n//     onChangePage: PropTypes.func.isRequired,\n//     page: PropTypes.number.isRequired,\n//     rowsPerPage: PropTypes.number.isRequired,\n//     theme: PropTypes.object.isRequired,\n// };\n//\n// const TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\n//     TablePaginationActions,\n// );\n//\n// const styles = theme => ({\n//     root: {\n//         width: 'auto',\n//         marginTop: theme.spacing.unit * 3,\n//     },\n//     table: {\n//         minWidth: 500,\n//     },\n//     tableWrapper: {\n//         overflowX: 'auto',\n//     },\n// });\n//\n// const initialState = {\n//     rows: [],\n//     page: 0,\n//     rowsPerPage: 5,\n// };\n//\n// class SimpleTable extends React.Component {\n//     constructor (props) {\n//         super(props);\n//         const {dataPassed} = this.props;\n//         this.state = {\n//                 ...initialState,\n//                 rows: dataPassed\n//         };\n//     }\n//     componentDidMount () {\n//         // console.log(\"Component Did Mount\");\n//         const { dataPassed } = this.props;\n//         // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\n//         this.setState({\n//             rows: dataPassed\n//         })\n//     }\n//     handleChangePage = (event, page) => {\n//         this.setState({ page });\n//     };\n//     handleChangeRowsPerPage = event => {\n//         this.setState({ page: 0, rowsPerPage: event.target.value });\n//     };\n//     render() {\n//         const { classes, columns, sortDirection, columnToSort } = this.props;\n//         const rows = this.props.dataPassed;\n//         const { rowsPerPage, page } = this.state;\n//         const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\n//         // console.log(\"This is the props \" + sortDirection + \" \" + columnToSort);\n//         return (\n//             <Paper className={classes.root}>\n//                 <div className={classes.tableWrapper}>\n//                     <Table className={classes.table}>\n//                                      <TableHead>\n//                                        <TableRow>\n//                                            <TableCell padding=\"checkbox\">\n//                                                <Checkbox />\n//                                            </TableCell>\n//                                            {columns.map((col) => (\n//                                                <TableCell align=\"left\">\n//                                                    <div onClick={() => this.props.handleSort(col.prop)}><span>{col.name} {columnToSort === col.prop ? (sortDirection === \"asc\" ? <UpArrow/> : <DownArrow/>) : null} </span></div>\n//                                                </TableCell>\n//                                            ))}\n//                                         </TableRow>\n//                                        </TableHead>\n//                         <TableBody>\n//                             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n//                                 <TableRow key={row.id}>\n//\n//                                     {columns.map((col) => (\n//                                         <TableCell component=\"th\" scope=\"row\" align=\"left\">\n//                                             {row[col.prop]}\n//                                         </TableCell>\n//                                     ))}\n//                                 </TableRow>\n//                             ))}\n//                             {emptyRows > 0 && (\n//                                 <TableRow style={{ height: 48 * emptyRows }}>\n//                                     <TableCell colSpan={6} />\n//                                 </TableRow>\n//                             )}\n//                         </TableBody>\n//                         <TableFooter>\n//                             <TableRow>\n//                                 <TablePagination\n//                                     rowsPerPageOptions={[5, 10, 25]}\n//                                     colSpan={3}\n//                                     count={rows.length}\n//                                     rowsPerPage={rowsPerPage}\n//                                     page={page}\n//                                     SelectProps={{\n//                                         native: true,\n//                                     }}\n//                                     onChangePage={this.handleChangePage}\n//                                     onChangeRowsPerPage={this.handleChangeRowsPerPage}\n//                                     ActionsComponent={TablePaginationActionsWrapped}\n//                                 />\n//                             </TableRow>\n//                         </TableFooter>\n//                     </Table>\n//                 </div>\n//             </Paper>\n//         );\n//     }\n// }\n// SimpleTable.propTypes = {\n//     classes: PropTypes.object.isRequired,\n// };\n//\n// export default withStyles(styles)(SimpleTable);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing.unit * .5,\n        marginRight: theme.spacing.unit,\n        width: 200,\n        marginTop: theme.spacing.unit * 3,\n    },\n});\n\nfunction DatePickers(props) {\n    const { classes } = props;\n\n    return (\n        <form className={classes.container} noValidate>\n            <TextField\n                className={classes.textField}\n                id=\"range1\"\n                label=\"From\"\n                type=\"date\"\n                variant=\"outlined\"\n                color=\"primary\"\n                value={props.range1}\n                onChange={props.handleDateChange}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">Time</InputAdornment>,\n                }}\n            />\n            <TextField\n                id=\"range2\"\n                label=\"To\"\n                type=\"date\"\n                variant=\"outlined\"\n                color=\"primary\"\n                value={props.range2}\n                onChange={props.handleDateChange}\n                className={classes.textField}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n            />\n        </form>\n    );\n}\n\nDatePickers.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DatePickers);","import React from \"react\";\nimport ReactExport from \"react-data-export\";\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst styles = theme => ({\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        align: 'center',\n    }\n\n});\n\nclass Download extends React.Component {\n    render() {\n        const { classes, dataArray } = this.props;\n        console.log(`data array being passed is ${dataArray}`);\n        const data = [[{\n                        value: \"Rec Number\",\n                        style: {\n                            font: {\n                                    sz: \"18\",\n                                    bold: true\n                                },\n                            fill: {\n                                    patternType: \"solid\",\n                                    fgColor:{\n                                            rgb: \"86af49\"\n                                            }\n                                    },\n                            alignment: {\n                                    vertical: \"center\",\n                                    horizontal: \"center\"}\n                                }\n                        },\n            {\n                value: \"Scan Date\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Scan Code\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Product\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Quantity\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        }\n                    },\n                    alignment: {\n                        vertical: \"center\",\n                        horizontal: \"center\"}\n                }\n            },\n            {\n                value: \"Tag Number\",\n                style: {\n                    font: {\n                        sz: \"18\",\n                        bold: true\n                    },\n                    fill: {\n                        patternType: \"solid\",\n                        fgColor:{\n                            rgb: \"86af49\"\n                        },\n                        alignment: {\n                            vertical: \"center\",\n                            horizontal: \"center\"}\n                    }\n                }\n            }\n                    ]];\n        const multiDataSet = [];\n        let keyHolder = [];\n        let dataHolder = [];\n\n        const columnsArray = [\n            {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\",\n                style: {\n                    fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"0\"\n\n                }\n            },\n            {title: \"Scan Date\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"yyyy-mm-dd\"\n\n                }\n            },\n            {title: \"Scan Code\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n\n                }\n            },\n            {title: \"Product\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\n\n                }\n            },\n            {title: \"Quantity\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"#,##0\"\n\n                }\n            },\n            {title: \"Tag Number\", width: {wch: 12},\n                style: {\n                    fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\n                    font:{sz: \"14\", bold: true},\n                    alignment: {vertical: \"center\", horizontal: \"center\"},\n                    border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\n                    numFmt: \"#,##0\"\n\n                }\n            }\n        ];\n\n        // multiDataSet.push({ySteps: 1, columns: columnsArray});\n        multiDataSet.push({columns: columnsArray});\n\n        //have to loop through data being passed and create an array of objects\n\n        //looping through array being passed so array[0] will give us first object\n        for (let i = 0; i < dataArray.length; i++) {\n            dataHolder = [];\n            keyHolder = [];\n            //putting all the keys of the object into an array\n            keyHolder = Object.keys(dataArray[i]);\n            for (let j = 1; j < keyHolder.length; j++) {\n                if ((i+1) % 2 === 1) {\n                    if( j === 5 ) {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }else {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }\n                }\n                else {\n                    if( j === 5 ) {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }else {\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\n                    }\n                }\n            }\n            data.push(dataHolder);\n\n        }\n\n\n        multiDataSet[0].data = data;\n        //multiDataSet[0].data = data;\n\n        console.log(\"This is the object being created: \", multiDataSet);\n        console.log(\"This is the original object passed as param: \", dataArray);\n\n        return (\n            <ExcelFile element={\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    align='center'\n                >\n                    Download Report\n                </Button>\n            } filename={\"Report Request\"}>\n                {/*<ExcelSheet data={dataArray} name=\"Scanned_Report\">*/}\n                {/*    <ExcelColumn label=\"Rec Number\" value=\"recno\" />*/}\n                {/*    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>*/}\n                {/*    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>*/}\n                {/*    <ExcelColumn label=\"Product\" value=\"product\"/>*/}\n                {/*    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>*/}\n                {/*    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>*/}\n                {/*    /!*<ExcelColumn label=\"Marital Status\"*!/*/}\n                {/*                 /!*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*!/*/}\n                {/*</ExcelSheet>*/}\n                <ExcelSheet dataSet={multiDataSet} name=\"Scanned_Report\" />\n            </ExcelFile>\n        );\n    }\n}\n\nexport default withStyles(styles)(Download);\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Navbar from './../../components/Navbar2';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Table from '../../components/SimpleTable';\nimport Icon from '@mdi/react';\nimport {mdiLoading} from \"@mdi/js\";\nimport axios from 'axios';\nimport DateBox from '../../components/DateSelector';\nimport Download from '../../components/ExcelExport';\nrequire('es6-promise').polyfill();\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        overflow: 'auto',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n    paper1: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit,\n        overflow: 'auto',\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * -1,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n        align: 'center',\n    },\n    loadSection: {\n        align: 'center',\n        marginTop: theme.spacing.unit * 3,\n    },\n        button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        align: 'center',\n    },\n    buttonHolder: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        marginTop: theme.spacing.unit * 2\n    }\n});\n\nconst ranges = [{\n    value: 1,\n    label: 'Today'\n},{\n    value: 2,\n    label: 'Current Week'\n},{\n    value: 3,\n    label: 'MTD'\n},{\n    value: 4,\n    label: 'YTD'\n},{\n    value: 5,\n    label: 'Custom'\n}];\n\nconst ranges2 = [{\n    value: 0,\n    label: 'No Selection'\n},{\n    value: 1,\n    label: 'Summary Report'\n},{\n    value: 2,\n    label: 'Scanned Report'\n}];\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nconst initialState = {\n    period : \"\",\n    runReport: false,\n    open: false,\n    modalOpen: false,\n    open2: false,\n    open3: false,\n    open4: false,\n    open5: false,\n    data: null,\n    range1: \"\",\n    range2: \"\",\n    columnToSort: \"\",\n    sortDirection: \"desc\",\n    reportType: 0,\n    selected: []\n};\n\nclass report extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    }\n    handleClose = () => {\n        this.setState({ modalOpen: false });\n    };\n    handleClose2 = () => {\n        this.setState({\n            open2: false,\n            range1: \"\",\n            range2: \"\"\n        })\n    };\n\n    handleClose345 = () => {\n        this.setState(initialState);\n\n    };\n\n\n    openModal = () => {\n        this.setState({open: true})\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleChange = prop => event => {\n        const { value } = event.target;\n        this.setState({\n        [prop] : value,\n        range1: \"\",\n        range2: \"\"\n        })\n    };\n    handleDate = (event) => {\n        // console.log(\"the event target object beign passed to the handledate, \", event.target.value);\n        const { value, id} = event.target;\n        if(id === 'range2') {\n            if(this.state.range1 > value) {\n                this.setState({open2: true});\n            }\n        }\n        this.setState({\n            [id] : value\n        });\n        // console.log(\"state once date is changed\", this.state);\n    };\n    //for the table in order to get the data that has been selected to the parent\n\n    updSelected (newSel) {\n        const { selected } = this.state;\n        const selectedIndex = selected.indexOf(newSel);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, newSel);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n        this.setState({\n            selected: newSelected\n        });\n\n        // console.log(\"update selected on dasboard being hit, \", this.state);\n    }\n    handleSelectAll (checked, rows) {\n        if (checked) {\n            this.setState({ selected: rows.map(n => n.id) });\n            // return;\n        }else {\n            this.setState({selected: [], filter: false});\n        }\n    }\n\n    // end\n\n    handleSummarySubmit = () => {\n        const headerObj = {\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\n        };\n\n        axios.post('/summaryreporting',{},{headers: headerObj}).then((res, err) => {\n                if (err) {\n                    //coding if error making call\n                    this.setState({open3: true})\n                }else {\n                //    console.log('this is the resonse from summary reporting', res.data.data);\n                    if(res.data.data && res.data.data !== 3) {\n                        this.setState({open5: true})\n                    }else if (res.data.data === 3) {\n                        //coding for if error adding to table\n                        this.setState({open4:true})\n                    }\n                }\n        })\n    };\n\n    handleSubmit = () => {\n        const headerObj = {\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\n        };\n        this.setState({runReport: true, data: null});\n        let dataObj;\n        if (this.state.period === 5){\n            dataObj = {comp: this.props.companyname, period: this.state.period, range1: this.state.range1, range2: this.state.range2};\n        }else {\n            dataObj  = {comp: this.props.companyname, period: this.state.period};\n        }\n\n        let holderArray = [];\n            axios.post('/reporting', dataObj, {headers: headerObj}).then((res, err) => {\n                if(err) {\n                    // console.log('Error in getting data from database for reporting ', err);\n                }\n                // console.log('this is the response from the reporting 1', res.data.data[0]);\n                if(res.data.data[0] !== null && res.data.data[0].length > 0) {\n                    //console.log('Data coming back from reporting: ', res.data.data[0]);\n                    for (let i = 0; i < res.data.data[0].length; i++) {\n\n                        // let holderDate = res.data.data[0][i].SCANDATE;\n                        // let holderArr =  holderDate.split('T');\n                        // console.log(\"Splitting the date, \", holderArr);\n                        let dObj = {\n                            'id' : res.data.data[0][i].RECNO,\n                            'recno': res.data.data[0][i].RECNO.toString(),\n                            'scandate': res.data.data[0][i].scandate.split('T')[0],\n                            'scancode': res.data.data[0][i].CODE,\n                            'product': res.data.data[0][i].PART,\n                            'quantity': res.data.data[0][i].QTY,\n                            'tagnum': res.data.data[0][i].TAG_NUM,\n                        };\n\n                        holderArray.push(dObj);\n                    }\n                    this.setState({data: holderArray});\n                    holderArray = [];\n                }else {\n                    this.setState({data: []\n                    });\n                }\n                // console.log('this is the state after the submit, ', this.state);\n            })\n\n    };\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n            <div className={classes.root}>\n                <CssBaseline/>\n                < Navbar handleSignOut={this.props.handleSignOut} username={this.props.companyname}/>\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer}/>\n                    <Paper className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n                            Reporting\n                        </Typography>\n                        <React.Fragment>\n                            <TextField\n                                select\n                                className={classNames(classes.textField)}\n                                variant=\"outlined\"\n                                label=\"Report Type\"\n                                align='center'\n                                value={this.state.reportType}\n                                onChange={this.handleChange('reportType')}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">Report Type</InputAdornment>,\n                                }}\n                            >\n                                {ranges2.map(option1 => (\n                                    <MenuItem key={option1.value} value={option1.value}>\n                                        {option1.label}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                            {this.state.reportType === 2 ? <div>\n                                    <TextField\n                                        select\n                                        className={classNames(classes.margin, classes.textField)}\n                                        variant=\"outlined\"\n                                        label=\"Time Range\"\n                                        align='center'\n                                        value={this.state.period}\n                                        onChange={this.handleChange('period')}\n                                        InputProps={{\n                                            startAdornment: <InputAdornment position=\"start\">Time</InputAdornment>,\n                                        }}\n                                    >\n                                        {ranges.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n\n                                    {this.state.period === 5 &&\n\n                                    <DateBox handleDateChange={this.handleDate.bind(this)}\n                                             range1={this.state.range1} range2={this.state.range2}/>}\n\n\n                                    {((this.state.period !== \"\" && this.state.period !== 5) || (this.state.period === 5 && this.state.range1 !==\"\" && this.state.range2 !== \"\")) &&\n                                    <div className={classes.buttonHolder}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.handleSubmit}\n                                            className={classes.button}\n                                            align='center'\n                                        >\n                                            Run Report\n                                        </Button>\n\n                                        {this.state.runReport && (this.state.data !== null && <Download dataArray={this.state.data}/>) }\n                                    </div>\n                                    }\n\n                                </div> :\n                                    //need to add the code to handle the submit for the summary report\n                                (this.state.reportType === 1 && (<div className={classes.buttonHolder}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.handleSummarySubmit}\n                                            className={classes.button}\n                                            align='center'\n                                        >\n                                            Run Summary Report\n                                        </Button>\n                                    </div>))\n\n                            }\n                            <CssBaseline/>\n\n                            <div>\n                                {this.state.runReport && this.state.reportType === 2 &&\n                                (this.state.data !== null ?\n                                        <Table\n                                            handleSelected={this.updSelected.bind(this)}\n                                            handleSelAll={this.handleSelectAll.bind(this)}\n                                            selected={this.state.selected}\n                                            dataPassed={this.state.data}\n                                            tableTitle={\"Report\"}\n                                            incCheckBox={false}\n                                            columns={[\n                                                {\n                                                    name: 'Rec Number',\n                                                    id: 'recno',\n                                                    numeric: false,\n                                                    disablePadding: true,\n                                                    label: 'Rec Number'\n                                                },\n                                                {\n                                                    name: 'Scan Date',\n                                                    id: 'scandate',\n                                                    numeric: false,\n                                                    disablePadding: true,\n                                                    label: 'Scan Date'\n                                                },\n                                                {\n                                                    name: 'Scan Code',\n                                                    id: 'scancode',\n                                                    numeric: false,\n                                                    disablePadding: true,\n                                                    label: 'Scan Code'\n                                                },\n                                                {\n                                                    name: 'Product',\n                                                    id: 'product',\n                                                    numeric: false,\n                                                    disablePadding: true,\n                                                    label: 'Product Number'\n                                                },\n                                                {\n                                                    name: 'Quantity',\n                                                    id: 'quantity',\n                                                    numeric: true,\n                                                    disablePadding: true,\n                                                    label: 'Quantity in Inventory'\n                                                },\n                                                {\n                                                    name: 'Tag Number',\n                                                    id: 'tagnum',\n                                                    numeric: false,\n                                                    disablePadding: true,\n                                                    label: 'Tag Number'\n                                                }\n                                            ]}\n                                        />\n                                        :\n                                        <Paper>\n                                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\n                                                <Icon path={mdiLoading}\n                                                      size={1.5}\n                                                      horizontal\n                                                      vertical\n                                                      rotate={90}\n                                                      color=\"#86af49\"\n                                                      spin/>\n                                            </Typography>\n                                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\n                                                Loading...\n                                            </Typography>\n                                        </Paper>\n                                )\n                                }\n                            </div>\n                        </React.Fragment>\n                    </Paper>\n                </main>\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.modalOpen}\n                        onClose={this.handleClose}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                One of the fields was left unfilled.\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open2}\n                        onClose={this.handleClose2}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Invalid Date Range.\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open3}\n                        onClose={this.handleClose345}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                There was an error with your request.  Please refresh your page and try again.\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open4}\n                        onClose={this.handleClose345}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                There was an error with your request.\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n                <div>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open5}\n                        onClose={this.handleClose345}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Success!\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                An email will be sent to the email on file with the report.\n                            </Typography>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\nreport.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(report);","import React from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport Legend from 'recharts/lib/component/Legend';\n\nfunction SimpleLineChart(passData) {\n    const data = [];\n\n\n    for (let i = 0; i < passData.passData.length; i++) {\n      data.push(passData.passData[i]);\n    }\n\n    // console.log('passdata that is being passed, ', passData);\n    return (\n        // 99% per https://github.com/recharts/recharts/issues/172\n\n        <ResponsiveContainer width=\"99%\" height={480}>\n            <LineChart data={data}>\n                <XAxis dataKey=\"name\" />\n                <YAxis formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"Consumed\" stroke=\"#82ca9d\" formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\n                <Line type=\"monotone\" dataKey=\"Received\" stroke=\"#8884d8\" activeDot={{ r: 8 }} formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\n            </LineChart>\n        </ResponsiveContainer>\n\n    );\n}\n\nexport default SimpleLineChart;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport SimpleLineChart from '../../components/SimpleLineChart';\nimport SimpleTable from '../../components/SimpleTable';\nimport Navbar from '../../components/Navbar2';\nimport axios from 'axios';\nimport Icon from '@mdi/react';\nimport { mdiLoading } from '@mdi/js';\nimport Paper from '@material-ui/core/Paper';\nimport Button from \"@material-ui/core/Button\";\nrequire('es6-promise').polyfill();\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginLeft: 12,\n        marginRight: 36,\n    },\n    menuButtonHidden: {\n        display: 'none',\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawerPaper: {\n        position: 'relative',\n        whiteSpace: 'nowrap',\n        overflow: 'auto',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerPaperClose: {\n        overflowX: 'hidden',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        width: theme.spacing.unit * 7,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing.unit * 9,\n        },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    chartContainer: {\n        marginLeft: -22,\n    },\n    tableContainer: {\n        height: 320,\n        marginLeft: theme.spacing.unit * 5,\n    },\n    h5: {\n        marginBottom: theme.spacing.unit * 2,\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit,\n        overflow: 'auto',\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * 6,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n        align: 'center',\n    },\n    loadSection: {\n        align: 'center',\n    },\n    button: {\n        marginTop: theme.spacing.unit * -1,\n        marginLeft: theme.spacing.unit,\n        display: 'inline-flex',\n        justifyContent: 'center',\n        align: 'center',\n    },\n});\n\nconst initialState = {\n    data: null,\n    dataTable: null,\n    columnToSort: \"\",\n    sortDirection: \"desc\",\n    filtered: false,\n    selected: [],\n};\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    };\n    UNSAFE_componentWillMount() {\n            if(this.state.dataTable === null) {\n                this.getChartData();\n                this.getTableData();\n            }\n\n    }\n    updSelected (newSel) {\n        const { selected } = this.state;\n        const selectedIndex = selected.indexOf(newSel);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, newSel);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n        this.setState({\n            selected: newSelected\n        });\n\n        // console.log(\"update selected on dasboard being hit, \", this.state);\n    }\n    handleSelectAll (checked, rows) {\n        if (checked) {\n            this.setState({ selected: rows.map(n => n.id) });\n            // return;\n        }else {\n            this.setState({selected: [], filter: false});\n        }\n    }\n    getChartData = (conditions) => {\n        const headerObj = {\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\n        };\n        let holderArray = [];\n        // console.log('chart data is function is being hit');\n        axios.post('/api/consumed', {email: this.state.email, filtered: conditions || false}, {headers: headerObj}).then((res) => {\n            let holderObject = {};\n            if(res.data.data !== null) {\n                //console.log('Data that is coming back from the consumption, ', res.data.data[0]);\n                //have the array built here\n                holderArray = [];\n                for (let i = 0; i < res.data.data[0].length; i++) {\n                    holderObject = {\n                        name: res.data.data[0][i].Word_Mon,\n                        Consumed: res.data.data[0][i].Consumed,\n                        Received: res.data.data[0][i].received\n                    };\n                    // holderArray = this.state.data;\n                    holderArray.push(holderObject);\n                }\n\n                this.setState({data: holderArray});\n                //console.log(`this is the chart data ${this.state.data.holderArray}`);\n                holderArray = [];\n            }\n            // console.log('Holder Array for the data, ', this.state.data);\n        }).catch((err) => {\n            // console.log('Error: ', err);\n        });\n\n    };\n    getTableData = () => {\n        const headerObj = {\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\n        };\n        let holderArrayTable = [];\n        axios.post('/api/consumedTable', this.state.email, {headers: headerObj}).then((res) => {\n            let holderObjectTable = {};\n            if(res.data.data !== null) {\n                 //console.log('Data that is coming back from the consumption, ', res.data.data[0]);\n                //have the array built here\n                holderArrayTable = [];\n                for (let i = 0; i < res.data.data[0].length; i++) {\n                    holderObjectTable = {\n                        id: res.data.data[0][i].PART,\n                        name: res.data.data[0][i].PART,\n                        tagcount: res.data.data[0][i].tagcount.toString(),\n                        quantity: res.data.data[0][i].quantity.toString()\n                    };\n                    holderArrayTable.push(holderObjectTable);\n                }\n                this.setState({dataTable: holderArrayTable});\n                holderArrayTable = [];\n            }\n        }).catch((err) => {\n            // console.log('error in getting the table data, ', err);\n        })\n    };\n    handleSubmit = () => {\n        let holdQueryString = \"\";\n        const {selected} = this.state;\n        if(selected.length > 0) {\n            selected.map((x) => {\n                if(selected.indexOf(x) === selected.length -1) {\n                    holdQueryString = holdQueryString + \"'\" + x + \"'\";\n                }else{\n                    holdQueryString = holdQueryString + \"'\" + x + \"', \";\n                }\n                return holdQueryString;\n            });\n            this.setState({\n                filtered: holdQueryString\n            });\n            // console.log(\"Data in teh handle submit in the dasboard page, \", holdQueryString);\n            // console.log(\"Data in teh handle submit in the dasboard page, \", this.state);\n\n            this.getChartData(holdQueryString);\n        }else{\n            this.getChartData();\n        }\n    };\n\n    render() {\n        // console.log('Holder Array for the data,1 ', this.state.data);\n        const { classes } = this.props;\n        // console.log('data being passed to the line chart befroe the return, ', this.state.data);\n        // console.log('data being passed to the order by', orderBy(this.state.dataTable, this.state.columnToSort, this.state.sortDirection));\n        return (\n\n                <div className={classes.root}>\n                <CssBaseline/>\n                < Navbar handleSignOut={this.props.handleSignOut} username={this.props.companyname}/>\n                <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <div display='in-line'>\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                Product Flow {this.state.selected.length === 0 &&\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleSubmit}\n                    className={classes.button}\n                    align='center'\n                >\n                    Reset\n                </Button>\n                }\n                </Typography>\n                </div>\n                <Typography component=\"div\" className={classes.chartContainer}>\n\n                    {this.state.data\n                            ?\n                                <SimpleLineChart passData={this.state.data}/>\n                            :\n                                <div className={classes.tableContainer}>\n                                <Paper className={classes.paper}>\n                                    <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\n                                        <Icon path={mdiLoading}\n                                            size={1.5}\n                                            horizontal\n                                            vertical\n                                            rotate={90}\n                                            color=\"#86af49\"\n                                            spin/>\n                                     </Typography>\n                                    <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\n                                        Loading...\n                                    </Typography>\n                                </Paper>\n                                </div>\n                    }\n\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\n                Products {this.state.selected.length > 0 &&\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleSubmit}\n                    className={classes.button}\n                    align='center'\n                >\n                    Update Chart\n                </Button>\n                }\n                </Typography>\n                <div className={classes.tableContainer}>\n\n                    {this.state.dataTable\n                        ?\n                            <SimpleTable\n                                handleSelected={this.updSelected.bind(this)}\n                                handleSelAll={this.handleSelectAll.bind(this)}\n                                selected={this.state.selected}\n                                dataPassed={this.state.dataTable}\n                                incCheckBox={true}\n                                tableTitle=\"Products\"\n                                columns={[\n                                    {\n                                        name: 'Product',\n                                        id: 'name',\n                                        numeric: false,\n                                        disablePadding: false,\n                                        label: \"Product\"\n                                    },\n                                    {\n                                        name: 'Tag Count',\n                                        id: 'tagcount',\n                                        numeric: true,\n                                        disablePadding: false,\n                                        label: \"Tag Count\"\n                                    },\n                                    {\n                                        name: 'Quantity in Inventory',\n                                        id: 'quantity',\n                                        numeric: true,\n                                        disablePadding: false,\n                                        label: 'Quantity in Inventory'\n                                    }\n                                ]}\n                            />\n                        :\n                        <Paper className={classes.paper}>\n                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\n                                <Icon path={mdiLoading}\n                                      size={1.5}\n                                      horizontal\n                                      vertical\n                                      rotate={90}\n                                      color=\"#86af49\"\n                                      spin/>\n                            </Typography>\n                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\n                                Loading...\n                            </Typography>\n                        </Paper>\n                    }\n                </div>\n                </main>\n                </div>\n        )\n    }\n}\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Dashboard);","import {Redirect, Route} from \"react-router-dom\";\nimport React from \"react\";\n\n\nfunction PrivateRoute({ component: Component, auth, ...rest }) {\n\n    // console.log('this is what is being passed to private router constructor, ' + auth);\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                (auth)\n                    ? (\n                        <Component {...props} />\n                    ) : (\n                        <Redirect\n                            to={{\n                                pathname: \"/login1\",\n                                state: { from: props.location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nclass signUp extends React.Component {\n\n    render () {\n        return <React.Fragment>\n            <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\n                Create account\n             </Typography>\n            <Grid container spacing={24}>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"companyCode\"\n                        name=\"companyCode\"\n                        label=\"Company Code\"\n                        fullWidth\n                        autoComplete=\"companyCode\"\n                        onChange={this.props.updateval}\n                        value={this.props.CC}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"userName\"\n                        name=\"userName\"\n                        label=\"User Name\"\n                        fullWidth\n                        autoComplete=\"usnm\"\n                        onChange={this.props.updateval}\n                        value={this.props.UN}\n                    />\n                </Grid>\n\n\n                { this.props.email1 === '' ?\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            fullWidth\n                            autoComplete=\"email\"\n                            onChange={this.props.updateval}\n                            value={this.props.email1}\n                        />\n                    </Grid> :\n                    (\n\n                    (this.props.validE) ?\n                    <Grid item xs={12}>\n                    <TextField\n                    required\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"email\"\n                    onChange={this.props.updateval}\n                    value={this.props.email1}\n                    />\n                    </Grid>\n                :\n                    <Grid item xs={12}>\n                    <TextField\n                    error\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"email\"\n                    onChange={this.props.updateval}\n                    value={this.props.email1}\n                    />\n                    </Grid>\n\n                    )}\n\n\n\n                <Grid item xs={12}>\n                    <TextField\n                        required\n                        id=\"password\"\n                        name=\"password\"\n                        label=\"Password\"\n                        fullWidth\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={this.props.updateval}\n                        value={this.props.PW}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    {this.props.PW === this.props.REPW ?\n                        ( <TextField\n                            required\n                            id=\"rePassWord\"\n                            name=\"rePassWord\"\n                            label=\"Re-Enter Password\"\n                            fullWidth\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={this.props.updateval}\n                            value={this.props.REPW}\n                        />) : (\n                            <TextField\n                                error\n                                id=\"rePassWord\"\n                                name=\"rePassWord\"\n                                label=\"Re-Enter PassWord\"\n                                fullWidth\n                                type=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={this.props.updateval}\n                                value={this.props.REPW}\n                            />\n                        )\n                    }\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    }\n\n}\n\nexport default signUp;","import React from \"react\";\nimport Modal from '@material-ui/core/Modal';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SignUp from '../../components/SignUp';\nimport PropTypes from \"prop-types\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport funcs_ from \"../../functions/functions\";\nrequire('es6-promise').polyfill();\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nfunction checkEmail(email) {\n    let emailRGEX = /[\\w.]+@\\w+\\.(net|com|edu|gov)/;\n\n    return emailRGEX.test(email);\n}\n\nconst styles = theme => ({\n    modal: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        // justifyContent: 'center',\n        // align: 'center',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        textAlign: 'center',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * 6,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n\n    },\n});\n\nclass signuppage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            companyCode: '',\n            userName: '',\n            email: '',\n            password: '',\n            rePassWord: '',\n            open1: false,\n            open: false,\n            open2: false,\n            open3: false,\n            validEM: true,\n        };\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        let dataObj ={...this.state};\n        dataObj.password = funcs_.encryptPW(this.state.password);\n        //let v_Email = this.state.validEM;\n\n        if (checkEmail(this.state.email)) {\n            axios.post('/register', dataObj).then((req, res) => {\n                // console.log(\"This is the response to the front end from the register api \", req);\n                if(req.data.data === true) {\n                    this.setState({open1: true});\n                }else if (req.data.data === 3) {\n                    this.setState({open2: true});\n                }else if (req.data.data === 0) {\n                    this.setState({open: true});\n                }\n            });\n        }else {\n            this.setState({open3: true})\n        }\n\n\n    };\n    handleClose = (event) => {\n      this.setState({open: false, open2: false});\n        window.location.reload();\n    };\n    handleClose1 = (event) => {\n        this.setState({open1: false});\n        window.location.href = '/#/login1'\n    };\n\n    handleClose3 = (event) => {\n        this.setState({open3: false, email: ''});\n        // window.location.reload();\n    };\n    handleChange = (event) => {\n        const {name , value} = event.target;\n        this.setState({\n            [name] : value\n        })\n    };\n    render () {\n        const { classes } = this.props;\n\n        return (\n            <React.Fragment>\n            <CssBaseline />\n            <main className={classes.layout}>\n            <Paper className={classes.paper}>\n            <SignUp updateval={this.handleChange.bind(this)} CC={this.state.companyCode} UN={this.state.userName} PW={this.state.password} REPW={this.state.rePassWord} email1={this.state.email} validE={checkEmail(this.state.email)}/>\n            <div>\n                {((this.state.password === this.state.rePassWord) && (this.state.password !== '' && this.state.companyCode !== '' && this.state.userName !== '' && this.state.email !== '')) ? (\n                <Button\n                    className={classes.button}\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={this.handleSubmit}\n                >\n                    Sign Up!\n                </Button>\n                ): (\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">\n                        Already have an account? Click here to <Link href={'/#/login1'} className={classes.link}>Sign-In</Link>\n                    </Typography>\n                )\n                }\n            </div>\n            </Paper>\n            </main>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open1}\n                    onClose={this.handleClose1}\n                >\n                    <div style={getModalStyle()} className={classes.modal}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            User Added\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            User {this.state.userName} has been added.\n                        </Typography>\n                    </div>\n                </Modal>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div style={getModalStyle()} className={classes.modal}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            User already exist for the current User Code\n                        </Typography>\n\n                    </div>\n                </Modal>\n\n                <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.state.open2}\n                onClose={this.handleClose}\n            >\n                <div style={getModalStyle()} className={classes.modal}>\n                    <Typography variant=\"h6\" id=\"modal-title\">\n                        No Company Code exist.\n                    </Typography>\n\n                </div>\n            </Modal>\n\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open3}\n                    onClose={this.handleClose3}\n                >\n                    <div style={getModalStyle()} className={classes.modal}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            Please Provide a valid email address.\n                        </Typography>\n\n                    </div>\n                </Modal>\n\n        </React.Fragment>\n        )\n    }\n}\nsignuppage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(signuppage);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from \"prop-types\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport axios from 'axios';\nimport Modal from '@material-ui/core/Modal';\n//import Link from '@material-ui/core/Link';\n\n\nconst styles = theme => ({\n    modal: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        // justifyContent: 'center',\n        // align: 'center',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        textAlign: 'center',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * 6,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n\n    },\n});\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nconst initial_State = {\n    username: '',\n    email: '',\n    open1: false,\n    open2: false,\n    open3: false,\n    open4: false,\n    openerror: false\n};\n\nclass passwordrst extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = initial_State;\n    }\n    handleSubmit = () => {\n        const dataObj = {\n          username: this.state.username,\n          email: this.state.email\n        };\n        if (this.state.username !== '' && this.state.email !== '') {\n            axios.post('/passwordReset', dataObj).then((res) => {\n                //value 1 is when the username does not exist\n                // console.log(\"This is the reponse to the password reset, \", res.data);\n                if(res.status === 200) {\n                    if(res.data.data === 1) {\n                        //username does not match\n                        this.setState({open1: true})\n                    }else if (res.data.data === 2) {\n                        //email does not match\n                        this.setState({open2: true})\n                    }else if (res.data.data === 3) {\n                        //error adding the data\n                        this.setState({open3: true})\n                    }\n                    else if (res.data.data) {\n                        //add code to send email to client\n                        this.setState({id: res.data.data.data.id});\n                        this.handleSendEmail(this.state.email, \"Password Reset\", `Please follow the link below to Reset Password. \\n  ${window.location.origin}/updateinfo/${this.state.id}`);\n                    }\n                }\n            }).catch((err) => {\n                if(err) {\n                    this.setState({open3: true})\n                }\n            })\n        }else{\n            this.setState({openerror: true})\n        }\n    };\n\n    handleSendEmail = (v_to_email, v_subject, v_body) => {\n        const dataObj = {\n            SEND_TO: v_to_email,\n            SUBJECT: v_subject,\n            MESSAGE: v_body\n        };\n\n        axios.post('/sendEmail', dataObj).then((res) => {\n            if (res.data.data && res.data.data !== 3) {\n                this.setState({open4: true});\n            }\n        }).catch()\n    };\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name] : value\n        })\n    };\n    handlemodalClose = () => {\n          this.setState(initial_State);\n    };\n\n    render () {\n        const {classes} = this.props;\n        return (\n        <React.Fragment>\n        <CssBaseline />\n            <main className={classes.layout}>\n                <Paper className={classes.paper}>\n                <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\n                    Please provide the following:\n                </Typography>\n                <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            id=\"username\"\n                            name=\"username\"\n                            label=\"User Name\"\n                            fullWidth\n                            autoComplete=\"username\"\n                            onChange={this.handleChange}\n                            value={this.state.username}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            required\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            fullWidth\n                            autoComplete=\"usnm\"\n                            onChange={this.handleChange}\n                            value={this.state.email}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            className={classes.button}\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={this.handleSubmit}\n                        >\n                            Submit\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n        </main>\n        <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            open={this.state.open1}\n            onClose={() => {this.handlemodalClose()}}\n        >\n            <div style={getModalStyle()} className={classes.modal}>\n                <Typography variant=\"h6\" id=\"modal-title\">\n                    Error\n                </Typography>\n                <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                    {this.state.username} is not a valid username. Provide a valid Username.\n                </Typography>\n            </div>\n        </Modal>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.state.open2}\n                onClose={() => {this.handlemodalClose()}}\n            >\n                <div style={getModalStyle()} className={classes.modal}>\n                    <Typography variant=\"h6\" id=\"modal-title\">\n                        Error\n                    </Typography>\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                        {this.state.email} is not a valid E-Mail. Provide a valid E-Mail.\n                    </Typography>\n                </div>\n            </Modal>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.state.open3}\n                onClose={() => {this.handlemodalClose()}}\n            >\n                <div style={getModalStyle()} className={classes.modal}>\n                    <Typography variant=\"h6\" id=\"modal-title\">\n                        Error\n                    </Typography>\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                        There was an error processing your request.  Please try close the browser and retry.\n                    </Typography>\n                </div>\n            </Modal>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.state.open4}\n                onClose={() => {this.handlemodalClose()}}\n            >\n                <div style={getModalStyle()} className={classes.modal}>\n                    <Typography variant=\"h6\" id=\"modal-title\">\n                        Click on Link below\n                    </Typography>\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                        An email has been sent to the email address on file with directions on how to reset your password.\n                    </Typography>\n                </div>\n            </Modal>\n            <Modal\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                open={this.state.openerror}\n                onClose={() => {this.handlemodalClose()}}\n            >\n                <div style={getModalStyle()} className={classes.modal}>\n                    <Typography variant=\"h6\" id=\"modal-title\">\n                        Error\n                    </Typography>\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                        Please make sure all fields are filled out.\n                        {/*<Link href={`/updateinfo/${this.state.id}`} className={classes.link}>Click Here</Link>*/}\n                    </Typography>\n                </div>\n            </Modal>\n    </React.Fragment>\n        )\n    }\n}\npasswordrst.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(passwordrst);","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from \"prop-types\";\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport functions from '../../functions/functions';\nimport axios from 'axios';\nimport Modal from \"@material-ui/core/Modal\";\nrequire('es6-promise').polyfill();\n\n\nconst styles = theme => ({\n    modal: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n        // justifyContent: 'center',\n        // align: 'center',\n    },\n    layout: {\n        width: 'auto',\n        marginLeft: theme.spacing.unit * 2,\n        marginRight: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n        textAlign: 'center',\n    },\n    paper: {\n        marginTop: theme.spacing.unit * 3,\n        marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            marginTop: theme.spacing.unit * 6,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n\n    },\n});\n\nfunction getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n}\n\nclass updatePW extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {\n    //         password: '',\n    //         repassword: ''\n    //     }\n    // }\n\n    state = {\n            password: '',\n            repassword: '',\n            open: false,\n            open1: false\n    };\n\n    handleSubmit = (event, id) => {\n        if ((this.state.password === this.state.repassword) && this.state.password !== '') {\n            const encrypPW = functions.encryptPW(this.state.password);\n            const dataObj = {\n                id,\n                pw: encrypPW,\n            };\n            axios.post('/updateDrowssap', dataObj).then((res) => {\n                if (res.data === 'SUCCESS') {\n                    this.setState({open: true});\n                }\n                // console.log(\"Area where the data is coming back from updating password\")\n            }).catch((err) => {\n                if(err) {\n                    this.setState({open1: true});\n                }\n            });\n            return false;\n        }\n    };\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({\n            [name] : value\n        })\n    };\n    handleClose = () => {\n        this.setState({open: false});\n        window.location.href = '/#/login1'\n    };\n\n    handleClose1 = () => {\n        this.setState({open1: false})\n    };\n\n    render () {\n        const {classes} = this.props;\n        let id = this.props.match.params.id;\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\n                            Please provide the following:\n                        </Typography>\n                        <Grid container spacing={24}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"New Password\"\n                                    fullWidth\n                                    autoComplete=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.password}\n                                />\n                            </Grid>\n                            {(this.state.password === this.state.repassword) &&\n                            <Grid item xs={12}>\n                                <TextField\n                                    required\n                                    id=\"repassword\"\n                                    name=\"repassword\"\n                                    type=\"password\"\n                                    label=\"Please re-enter your password.\"\n                                    fullWidth\n                                    autoComplete=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.repassword}\n                                />\n                            </Grid>\n\n                            }\n\n\n\n                            { (this.state.password !== this.state.repassword)  &&\n                            <Grid item xs={12}>\n                                <TextField\n                                    error\n                                    id=\"repassword\"\n                                    name=\"repassword\"\n                                    type=\"password\"\n                                    label=\"Please re-enter your password.\"\n                                    fullWidth\n                                    autoComplete=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.repassword}\n                                />\n                            </Grid>\n                            }\n\n                            {this.state.password === this.state.repassword ?\n                            <Button\n                                className={classes.button}\n                                size=\"small\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={false}\n                                onClick={(event) => {this.handleSubmit(id)}}\n                            >\n                                Submit\n                            </Button> :\n                                <div></div>\n\n                            }\n\n                        </Grid>\n                    </Paper>\n\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open}\n                        onClose={this.handleClose()}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Success\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Password has successfully been updated.\n                            </Typography>\n                            <Button onClick={this.handleClose()} className={classes.button}>\n                            Close\n                        </Button>\n                        </div>\n                    </Modal>\n                    <Modal\n                        aria-labelledby=\"simple-modal-title\"\n                        aria-describedby=\"simple-modal-description\"\n                        open={this.state.open1}\n                        onClose={this.handleClose1}\n                    >\n                        <div style={getModalStyle()} className={classes.paper1}>\n                            <Typography variant=\"h6\" id=\"modal-title\">\n                                Error\n                            </Typography>\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                                Password Was not updated.\n                            </Typography>\n                            <Button onClick={this.handleClose1()}>\n                                Close\n                            </Button>\n                        </div>\n                    </Modal>\n\n\n                </main>\n            </React.Fragment>\n        )\n    }\n}\nupdatePW.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(updatePW);","import React, { Component } from 'react';\nimport {Route,  Switch, Redirect} from \"react-router-dom\";\nimport Login1 from \"./pages/Login1\";\nimport Checkout from './pages/ClientCheckout';\nimport Report from './pages/Reporting';\nimport Dashboard from './pages/DashBoard';\nimport axios from 'axios';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport SignUP from './pages/SignUpPage';\nimport passwordRS from './components/PasswordReset';\nimport funcs_ from './functions/functions';\nimport update from './pages/updatePW';\n//import { Router, Route, IndexRoute, Link, IndexLink, browserHistory, hashHistory, Redirect, Switch } from 'react-router';\n\nrequire('es6-promise').polyfill();\n\nconst initialState = {open1: false,\n    open3: false,\n    redirectToRefererrer: false,\n    open: false,\n    open4: false,\n    open5: false,\n    auth: false\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    };\n    myCheckOutPage = () => {\n        return (\n            <Checkout handleSignOut={this.signOut.bind(this)} companyname={this.state.compName} />\n        )\n    };\n    myReportingPage = () => {\n        return (\n            <Report handleSignOut={this.signOut.bind(this)} companyname={this.state.compName} />\n        )\n    };\n    myDashboardPage = () => {\n        return (\n            <Dashboard handleSignOut={this.signOut.bind(this)} companyname={this.state.compName}/>\n        )\n    };\n    signOut(){\n        sessionStorage.removeItem('token');\n        this.setState({auth: false});\n        window.location.reload();\n    };\n    reload () {\n        window.location.reload();\n    }\n    getKey (){\n        const token = window.sessionStorage.getItem('token');\n        // console.log('before it hits the api verify route ', token);\n        // console.log(\"This is the path, \", window.location);\n        if(token !== null) {\n            axios.post('/api/verify', {token}).then((res, err) => {\n\n                // console.log('This is the response from the getkey route ', res.data);\n                // console.log('This is the type of for the res.data ', typeof res.data);\n                // console.log('this is the data for res.data.data ', res.data.dataObj);\n\n                // return res.data.data === true;\n                if(res.data.dataObj.data === true){\n                    this.setState({companyCode : res.data.dataObj.compCD, email: res.data.dataObj.email, auth: true, compName: res.data.dataObj.compName});\n                    // console.log(\"state \", this.state);\n                }else{\n                    this.setState({auth:false})\n                }\n                if(this.props.location.pathname ==='/login1' && this.state.auth === true) {\n                    this.props.history.push('/home_page');\n\n                    //creating a timeout to reload page once the token has expired\n                    // console.log('value being passed to the set time out ', (res.data.dataObj.expires - new Date().getTime() ));\n                    // this.interval = setTimeout(this.reload, + res.data.dataObj.expires + new Date().getTime() );\n                }\n            });\n        }else{\n            this.setState({auth:false})\n        }\n    }\n    UNSAFE_componentWillMount(){\n        // clearTimeout(this.interval);\n        this.getKey();\n        // console.log('This is the state in the component will mount ', this.state);\n        // document.title = 'Client Dashboard';\n\n      };\n    componentDidMount() {\n        // console.log(\"This is the state when the component moutned \", this.state);\n        // window.location.href = '/login1';\n    }\n    getValue = (event) => {\n        // Updates the input state\n        const {name, value} = event.target;\n        this.setState(\n            {\n                [name]: value\n            }\n        );\n    };\n\n    clearState = () => {\n        this.setState(initialState)\n    };\n\n    handleClose = () => {\n        this.setState({ open: false, open1: false });\n        this.clearState();\n        window.location.href = '/#/login1'\n    };\n\n    handlesubmit = (event) => {\n        event.preventDefault();\n        const pwHolder = this.state.password;\n        if((typeof (this.state.usrname) === 'undefined' || (this.state.usrname == null)) && (typeof this.state.password === 'undefined' || this.state.password == null)) {\n            this.setState({open3: true});\n        }else {\n            let dataObj ={...this.state};\n            dataObj.password = funcs_.encryptPW(pwHolder);\n\n        // console.log(\"created data object app.js page line 118 \", dataObj);\n\n        axios.post('/login', dataObj).then((res, err) => {\n            // console.log('this is the response for the login', res);\n            // console.log('this is the response for the login', res.data);\n            if(typeof (res.data.password) !== 'undefined' ){\n                const check = funcs_.checkPW(this.state.password, res.data.password);\n                this.setState({password: ''});\n                const tokenObj = {\n                    check: check,\n                    id: res.data.id,\n                    username: res.data.username,\n                    email: res.data.Email,\n                    comp: res.data.CompCode,\n                    compname: res.data.comp_name\n                };\n\n                if (check) {\n                    //creating token\n                    axios.post('/verify/api', tokenObj).then((res, err) => {\n                        // console.log(\"app. js handle submit verify request response, res: \", res);\n                        if(typeof res.data.token !== 'undefined') {\n                            //save this on local storage\n                            sessionStorage.setItem('token', res.data.token);\n                            this.setState({auth: true, email: res.data.email, compName: res.data.compName});\n                            // console.log('this is the state after the auth was udpated ', this.state);\n                            this.props.history.push('/home_page');\n                        }else{\n                            this.setState({open: true});\n                        }\n                    })\n                }else {\n                    this.setState({open: true});\n                }\n            }else {\n                this.setState({open5: true});\n            }\n        }).catch((e) => {\n            // console.log('Error: ', e);\n        });}\n    };\n    handleAdd = (event) => {\n        event.preventDefault();\n        // console.log('this is the state of the log-in page', this.state);\n        let dataObj ={...this.state};\n        dataObj.password = funcs_.encryptPW(this.state.password);\n        // console.log(\"this is the hashed password, \", dataObj.password);\n        axios.post('/register', dataObj).then((res, err) => {\n            // console.log('just wanted to see the error ', err);\n            if(err){\n                // console.log('There was an error ', err);\n            }else{\n                // res.status(200).json({message: 'this is the data' + res});\n                if(res.data.data === 0) {\n                    // console.log('Data was not Added.  User already exist ', res);\n                    this.setState({open1: true});\n                }\n                else if(res.data.data === 3 ) {\n                    // console.log('Data was not Added.  User already exist ', res);\n                    this.setState({open1: true});\n                }\n                else {\n                    // console.log('Data was added ', res);\n                    this.setState({open4: true});\n                }\n            }\n        }).catch((e) => {\n            // console.log('Error: ', e);\n        });\n    };\n    render() {\n\n        return (\n            <div>\n                {/*{window.location ==+ '/' ? <Redirect from=\"/\" exact to=\"/login1\" /> : ''}*/}\n\n                <Switch>\n                    <Redirect exact from=\"/\" to=\"/login1\"/>\n                    <Route exact path=\"/login1\"><Login1 getValue={this.getValue.bind(this)}  usrname={this.state.usrname} open3={this.state.open3} open4={this.state.open4} open5={this.state.open5} handlesubmit={this.handlesubmit.bind(this)} handleAdd={this.handleAdd.bind(this)} open={this.state.open} open1={this.state.open1} handleClose={this.handleClose.bind(this)}/></Route>\n                    <Route exact path=\"/signup\" component={SignUP}/>\n                    <Route exact path=\"/forgotdorwssap\" component={passwordRS}/>\n                    <Route exact path ='/updateinfo/:id' component={update}/>\n                    <PrivateRoute exact path=\"/home_page\" component={this.myDashboardPage} auth={this.state.auth}/>\n                    <PrivateRoute exact path=\"/manage_inv\" component={this.myCheckOutPage} auth={this.state.auth}/>\n                    <PrivateRoute exact path=\"/reporting\" component={this.myReportingPage} auth={this.state.auth}/>\n                </Switch>\n            </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n//ariel.m.vidal@gmail.com\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider}  from \"@material-ui/core/styles\";\n\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {500 : \"#86af49\"},\n        action: {\n            active: \"#b5e7a0\",\n            hover: \"#618685\"\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nReactDOM.render((\n    <Router >\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}