{"version":3,"sources":["functions/functions.js","components/SignIn/signin.js","pages/Login1/Login1.js","components/OrderDetail/orderDetail.js","components/PurposeSection/purpose.js","components/Navbar2/navbar3.js","components/ListItems/listItems.js","pages/ClientCheckout/clientCKout.js","components/SimpleTable/simpleTable.js","components/DateSelector/dateTextBox.js","components/ExcelExport/excelExport.js","pages/Reporting/reporting.js","components/SimpleLineChart/simpleLineChart.js","pages/DashBoard/dashboard.js","components/PrivateRoute/PrivateRoute.js","components/SignUp/signUp.js","pages/SignUpPage/signuppage.js","components/PasswordReset/passwordrst.js","pages/updatePW/updatePW.js","App.js","serviceWorker.js","index.js"],"names":["bcrypt","require","salt","genSaltSync","func_","encryptPW","password","hash","hashSync","checkPW","passwordEnt","passwordIS","compareVal","compareSync","module","exports","withStyles","theme","console","log","main","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","avatar","margin","backgroundColor","form","submit","color","props","classes","className","component","variant","required","fullWidth","htmlFor","id","name","autoComplete","autoFocus","onChange","handleinput","type","onClick","handlesubmit","align","href","link","getModalStyle","top","rand","left","transform","Math","round","random","Login1","this","Fragment","getValue","handleadd","handleAdd","aria-labelledby","aria-describedby","open","open1","onClose","handleClose","style","modal","open3","open4","usrname","open5","React","Component","position","palette","background","boxShadow","shadows","outline","orderDetail","focusUsernameInputField","input","focus","prevProps","prevState","snapshot","inputpart","inputqty","inputtagnum","myRef","gutterBottom","count","container","item","xs","inputRef","label","updateval","value","PurposeForm","state","setState","handleOpen","generateBarCode","event","target","justify","formControl","onOpen","purposeval","inputProps","button","minWidth","barcode","navbar2","handleDrawerOpen","handleDrawerClose","pushReporting","history","push","pushInvManag","pushHome","homepage","inv_manag","report","signoutFunction","classNames","appBar","appBarShift","disableGutters","toolbar","aria-label","menuButton","menuButtonHidden","noWrap","title","username","drawerPaper","drawerPaperClose","toolbarIcon","bind","handleSignOut","primary","withRouter","root","paddingRight","justifyContent","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","flexGrow","whiteSpace","overflowX","appBarSpacer","content","height","overflow","chartContainer","tableContainer","h5","marginBottom","purposetext","purp","steps","Checkout","handleClose1","activeStep","orderdetails","partnum","quantity","tagnum","handleClose2","handleClose3","handleClose4","window","location","reload","handleClose5","handleClose6","open6","handleClose7","open7","handleOrderDetail","handlePurposeChange","purposedetails","handlepg0Reset","handleNoSubmit","open2","handlepg1Reset","purpose","handleNext","handleSubmit","dataObj","substring","length","headerObj","sessionStorage","getItem","axios","post","headers","then","res","err","data","getCount","cnt","handleBack","getStepContent","step","barcodeVal","field1","field2","field3","Error","getResetButton","actstep","companyname","stepper","map","key","buttons","paper1","contextTypes","router","PropTypes","object","loadSection","buttonHolder","flexWrap","EnhancedTableHead","onSelectAllClick","order","orderBy","numSelected","rowCount","cols","incCheckBoxHead","indeterminate","checked","numeric","disablePadding","sortDirection","placement","enterDelay","active","direction","handleSort1","hinttext","floatinglabeltext","query","e","handleQueryChange","EnhancedTableToolbar","highlight","spacer","actions","lighten","light","text","dark","flex","initialState","selected","page","rowsPerPage","columnToSort","columnToQuery","EnhancedTable","handleSort","columnName","handleQueryChange1","handleSelectAllClick","handleSelAll","rows","handleClick","handleSelected","handleChangePage","handleChangeRowsPerPage","isSelected","indexOf","dataPassed","columns","tableTitle","incCheckBox","emptyRows","min","formQuery","toLowerCase","tableWrapper","table","filter","x","includes","slice","row","hover","role","tabIndex","rowItem","col","scope","toString","replace","colSpan","rowsPerPageOptions","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","textField","noValidate","range1","handleDateChange","InputLabelProps","shrink","InputProps","startAdornment","range2","ExcelFile","ReactExport","ExcelSheet","Download","dataArray","font","sz","bold","fill","patternType","fgColor","rgb","alignment","vertical","horizontal","multiDataSet","keyHolder","dataHolder","i","Object","keys","j","numFmt","element","filename","dataSet","polyfill","ranges","ranges2","period","runReport","modalOpen","reportType","handleClose345","openModal","handleChange","prop","handleDate","handleSummarySubmit","comp","holderArray","holderArr","SCANDATE","split","dObj","RECNO","CODE","PART","QTY","TAG_NUM","newSel","selectedIndex","newSelected","concat","n","select","option1","option","updSelected","handleSelectAll","path","mdiLoading","size","rotate","spin","SimpleLineChart","passData","dataKey","formatter","Intl","NumberFormat","format","strokeDasharray","stroke","activeDot","r","dataTable","filtered","Dashboard","getChartData","conditions","email","holderObject","Month","Consumed","Received","catch","getTableData","holderArrayTable","holderObjectTable","tagcount","holdQueryString","PrivateRoute","auth","rest","Route","render","Redirect","to","pathname","from","signUp","CC","UN","email1","validE","error","PW","REPW","checkEmail","test","signuppage","preventDefault","funcs_","validEM","req","companyCode","userName","rePassWord","layout","initial_State","passwordrst","status","handleSendEmail","v_to_email","v_subject","v_body","SEND_TO","SUBJECT","MESSAGE","handlemodalClose","updatePW","repassword","pw","functions","match","params","disabled","redirectToRefererrer","App","myCheckOutPage","signOut","compName","myReportingPage","myDashboardPage","clearState","pwHolder","check","tokenObj","Email","CompCode","compname","comp_name","token","setItem","removeItem","compCD","getKey","exact","Switch","SignUP","passwordRS","update","Boolean","hostname","createMuiTheme","500","action","typography","useNextVariants","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e222dd7c.chunk.js","sourcesContent":["const bcrypt = require('bcrypt-nodejs');\r\nconst saltRounds = 12;\r\nconst salt = bcrypt.genSaltSync(saltRounds);\r\n\r\nconst func_ = {\r\n    encryptPW: function(password) {\r\n        // console.log('This is the data being passed to the encryp function, password ', password);\r\n        let hash = bcrypt.hashSync(password, salt);\r\n        // bcrypt.hash(password, saltRounds).then(function(hash) {\r\n        //\r\n        //     if(hash) {\r\n        //         cb(null, hash);\r\n        //         console.log('This is the hash ', err);\r\n        //     }\r\n        //     cb(hash, null);\r\n        //     console.log('This is the hash ', data);\r\n        // });\r\n        if (hash) {\r\n            return hash;\r\n        }else{\r\n            return 0\r\n        }\r\n    },\r\n    checkPW:function(passwordEnt, passwordIS) {\r\n        const compareVal = bcrypt.compareSync(passwordEnt, passwordIS);\r\n        if(compareVal) {\r\n            return compareVal\r\n        }return 0\r\n\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = func_;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst styles = theme => console.log(theme) || ({\r\n    main: {\r\n        width: 'auto',\r\n        display: 'block', // Fix IE 11 issue.\r\n        marginLeft: theme.spacing.unit * 3,\r\n        marginRight: theme.spacing.unit * 3,\r\n        [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n            width: 400,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 8,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing.unit,\r\n        backgroundColor: 'green',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing.unit,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        backgroundColor: 'green',\r\n        color: 'white',\r\n    },\r\n});\r\nfunction SignIn(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <main className={classes.main}>\r\n            <CssBaseline />\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"usrname\">UserName</InputLabel>\r\n                        <Input id=\"usrname\" name=\"usrname\" autoComplete=\"usrname\" autoFocus onChange={props.handleinput} />\r\n                    </FormControl>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                        <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={props.handleinput} />\r\n                    </FormControl>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color= \"primary\"\r\n                        className={classes.submit}\r\n                        onClick={props.handlesubmit}\r\n                    >\r\n                        Sign in\r\n                    </Button>\r\n\r\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                        <Link href={'/signup'} className={classes.link}>First time user?</Link>\r\n\r\n                    </Typography>\r\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                        <Link href={'/forgotdorwssap'} className={classes.link}>Trouble signing in? </Link>\r\n\r\n                    </Typography>\r\n\r\n                </form>\r\n            </Paper>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nSignIn.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignIn);\r\n\r\n","import React from \"react\";\r\nimport SignIn from '../../components/SignIn';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = theme => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    }\r\n});\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nclass Login1 extends React.Component {\r\n    render(props) {\r\n        const{classes} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <SignIn handleinput={this.props.getValue}  handlesubmit={this.props.handlesubmit} handleadd={this.props.handleAdd}/>\r\n\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.props.open1}\r\n                        onClose={this.props.handleClose}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.modal}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                User Already Exist.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.props.open}\r\n                    onClose={this.props.handleClose}\r\n                >\r\n                    <div style={getModalStyle()} className={classes.modal}>\r\n                        <Typography variant=\"h6\" id=\"modal-title\">\r\n                            Error\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                            Username or Password is incorrect.\r\n                        </Typography>\r\n                    </div>\r\n                </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.props.open3}\r\n                        onClose={this.props.handleClose}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.modal}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Please provide a Username and Password.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.props.open4}\r\n                        onClose={this.props.handleClose}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.modal}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                User Added\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                User {this.props.usrname} has been added.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.props.open5}\r\n                        onClose={this.props.handleClose}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.modal}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                NO User Exist.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Login1);\r\n\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass orderDetail extends React.Component {\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.inputpart === '' && this.props.inputqty === '' && this.props.inputtagnum === '') {\r\n            // this.myRef.focus();\r\n            this.focusUsernameInputField(this.myRef);\r\n        }\r\n    }\r\n    focusUsernameInputField = (input) => {\r\n        if (input) {\r\n           input.focus()\r\n        }\r\n    };\r\n    render () {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order Details - Scanned Material Count {this.props.count}\r\n            </Typography>\r\n            <Grid container spacing={24}>\r\n                {/*<Grid item xs={12} sm={6}>*/}\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={(input) => {this.myRef = input}}\r\n                        id=\"partnum\"\r\n                        name=\"partnum\"\r\n                        label=\"partnum\"\r\n                        fullWidth\r\n                        autoComplete=\"pnum\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.inputpart}\r\n                        autoFocus={true}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"quantity\"\r\n                        name=\"quantity\"\r\n                        label=\"Quantity\"\r\n                        fullWidth\r\n                        autoComplete=\"qty\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.inputqty}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"tagnum\"\r\n                        name=\"tagnum\"\r\n                        label=\"Tag Number\"\r\n                        fullWidth\r\n                        autoComplete=\"tgnum\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.inputtagnum}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );}\r\n}\r\nexport default orderDetail;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        display: 'block',\r\n        marginTop: theme.spacing.unit * 2,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    barcode: {\r\n        align: 'center',\r\n    },\r\n});\r\n\r\nclass PurposeForm extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    // handleChange = event => {\r\n    //     this.setState({ [event.target.name]: event.target.value });\r\n    //     console.log(this.state);\r\n    // };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    generateBarCode = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n    render()\r\n    {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Purpose\r\n                </Typography>\r\n                <Grid container spacing={24} justify={'center'}>\r\n                    <Grid item xs>\r\n                        <form autoComplete=\"off\">\r\n                            {/*<Button className={classes.button} onClick={this.handleOpen}>*/}\r\n                                {/*Select the PURPOSE.*/}\r\n                            {/*</Button>*/}\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"purpose\">Purpose</InputLabel>\r\n                                <Select\r\n                                    open={this.state.open}\r\n                                    onClose={this.handleClose}\r\n                                    onOpen={this.handleOpen}\r\n                                    value={this.props.purposeval}\r\n                                    onChange={this.props.updateval}\r\n                                    inputProps={{\r\n                                        name: 'purpose',\r\n                                        id: 'purp',\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value=\"\">\r\n                                        <em>None</em>\r\n                                    </MenuItem>\r\n                                    <MenuItem value={1}>Receipt</MenuItem>\r\n                                    <MenuItem value={2}>Consume</MenuItem>\r\n                                    <MenuItem value={3}>Error</MenuItem>\r\n                                    <MenuItem value={4}>Cycle Count</MenuItem>\r\n                                    <MenuItem value={5}>Production Receipt</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                    </Grid>\r\n                    {/*{this.props.purposeval === '' ?*/}\r\n                        {/*(<Grid item xs>*/}\r\n                        {/*</Grid>) : (*/}\r\n                            {/*<Grid item xs className={classes.barcode}>*/}\r\n                                {/*<Barcode*/}\r\n                                    {/*value = {purposetext(this.props.purposeval).substring(0,3) + this.props.barcodeVal}*/}\r\n                                    {/*// width = {2}*/}\r\n                                    {/*height = {100}*/}\r\n                                    {/*format = {\"CODE128\"}*/}\r\n                                    {/*displayValue = {true}*/}\r\n                                    {/*fontOptions = {\"\"}*/}\r\n                                    {/*font = {\"monospace\"}*/}\r\n                                    {/*textAlign = {\"center\"}*/}\r\n                                    {/*textPosition = {\"bottom\"}*/}\r\n                                    {/*textMargin = {2}*/}\r\n                                    {/*fontSize = {20}*/}\r\n                                    {/*background = {\"#ffffff\"}*/}\r\n                                    {/*lineColor = {\"#000000\"}*/}\r\n                                    {/*margin = {10}*/}\r\n                                    {/*marginTop = {undefined}*/}\r\n                                    {/*marginBottom = {undefined}*/}\r\n                                    {/*marginLeft = {undefined}*/}\r\n                                    {/*marginRight = {undefined}*/}\r\n                                {/*/>*/}\r\n                            {/*</Grid>*/}\r\n                        {/*)}*/}\r\n                    <Grid item xs={12}>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nPurposeForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(PurposeForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { mainListItems } from './../ListItems';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing.unit * 7,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9,\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    chartContainer: {\r\n        marginLeft: -22,\r\n    },\r\n    tableContainer: {\r\n        height: 320,\r\n    },\r\n    h5: {\r\n        marginBottom: theme.spacing.unit * 2,\r\n    },\r\n});\r\n\r\nclass navbar2 extends React.Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    pushReporting = () => {\r\n        this.props.history.push('/reporting');\r\n    };\r\n\r\n    pushInvManag = () => {\r\n        this.props.history.push('/manage_inv');\r\n    };\r\n\r\n    pushHome = () => {\r\n        this.props.history.push('/home_page');\r\n    };\r\n\r\n    render () {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return(\r\n        <div>\r\n        <AppBar\r\n            position=\"absolute\"\r\n            className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n        >\r\n            <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                    onClick={this.handleDrawerOpen}\r\n                    className={classNames(\r\n                        classes.menuButton,\r\n                        this.state.open && classes.menuButtonHidden,\r\n                    )}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                    color=\"inherit\"\r\n                    noWrap\r\n                    className={classes.title}\r\n                >\r\n                    Pacesetter Steel --- {this.props.username}\r\n                </Typography>\r\n                <IconButton color=\"inherit\">\r\n                    {/*<Badge badgeContent={4} color=\"secondary\">*/}\r\n                        {/*<NotificationsIcon />*/}\r\n                    {/*</Badge>*/}\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n        }}\r\n        open={this.state.open}\r\n            >\r\n            <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n            </IconButton>\r\n    </div>\r\n    <Divider />\r\n        <List>{mainListItems(this.pushHome.bind(this), this.pushInvManag.bind(this), this.pushReporting.bind(this), this.props.handleSignOut)}</List>\r\n    <Divider />\r\n        {/*<List>{secondaryListItems}</List>*/}\r\n    </Drawer>\r\n        </div>\r\n        )}\r\n\r\n}\r\n\r\nnavbar2.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(navbar2));","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport CollectionsBookmarkOutlined from '@material-ui/icons/CollectionsBookmarkOutlined';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LogOut from '@material-ui/icons/AssignmentReturnRounded';\r\n\r\nexport const mainListItems = (homepage, inv_manag, report, signoutFunction) => (\r\n    <div>\r\n        <ListItem onClick={homepage} button>\r\n            <ListItemIcon>\r\n                <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Dashboard\" />\r\n        </ListItem>\r\n        <ListItem onClick={inv_manag} button>\r\n            <ListItemIcon>\r\n                <CollectionsBookmarkOutlined />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Material\" />\r\n        </ListItem>\r\n        <ListItem onClick={report} button>\r\n            <ListItemIcon>\r\n                <BarChartIcon />\r\n            </ListItemIcon>\r\n            <ListItemText  primary=\"Reports\" />\r\n        </ListItem>\r\n        <ListItem onClick={signoutFunction}  button>\r\n            <ListItemIcon>\r\n                {/*<Icon path={mdiLogoutVariant}*/}\r\n                      {/*size={1.5}*/}\r\n                      {/*horizontal*/}\r\n                      {/*vertical*/}\r\n                      {/*// // rotate={90}*/}\r\n                      {/*color=\"#86af49\"*/}\r\n                      {/*// // spin*/}\r\n                {/*/>*/}\r\n                <LogOut />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Log Out\" />\r\n        </ListItem>\r\n    </div>\r\n);\r\n//\r\n// export const secondaryListItems = (\r\n//     <div>\r\n//         <ListSubheader inset>Saved reports</ListSubheader>\r\n//         <ListItem button>\r\n//             <ListItemIcon>\r\n//                 {/*<AssignmentIcon />*/}\r\n//             </ListItemIcon>\r\n//             <ListItemText primary=\"Current month\" />\r\n//         </ListItem>\r\n//         <ListItem button>\r\n//             <ListItemIcon>\r\n//                 {/*<AssignmentIcon />*/}\r\n//             </ListItemIcon>\r\n//             <ListItemText primary=\"Last quarter\" />\r\n//         </ListItem>\r\n//         <ListItem button>\r\n//             <ListItemIcon>\r\n//                 {/*<AssignmentIcon />*/}\r\n//             </ListItemIcon>\r\n//             <ListItemText primary=\"Year-end sale\" />\r\n//         </ListItem>\r\n//     </div>\r\n// );\r\n\r\n\r\n","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OrderDetail from'./../../components/OrderDetail';\r\nimport PurposeSection from './../../components/PurposeSection';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Navbar from '../../components/Navbar2';\r\nimport axios from 'axios';\r\nfunction purposetext(purp) {\r\n    switch (purp) {\r\n        case 1:\r\n            return 'RECEIPT';\r\n        case 2:\r\n            return 'CONSUME';\r\n        case 3:\r\n            return 'ERROR';\r\n        case 4:\r\n            return 'CYCLE COUNT';\r\n        case 5:\r\n            return 'PRODUCTION RECEIPT';\r\n        default:\r\n            return '';\r\n        // default:\r\n        //     throw new Error('Unknown step');\r\n    }\r\n}\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'auto',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing.unit * 7,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9,\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    chartContainer: {\r\n        marginLeft: -22,\r\n    },\r\n    tableContainer: {\r\n        height: 320,\r\n    },\r\n    h5: {\r\n        marginBottom: theme.spacing.unit * 2,\r\n    },\r\n    paper1: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit * 25,\r\n        padding: theme.spacing.unit,\r\n        overflow: 'auto',\r\n        width: '50%',\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * 6,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n    },\r\n    loadSection: {\r\n        align: 'center',\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    buttonHolder: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    }\r\n});\r\n\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nconst steps = ['Purpose', 'Order Detail'];\r\n\r\nclass Checkout extends React.Component {\r\n    static contextTypes = {\r\n        router: PropTypes.object\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const initialState = {\r\n            activeStep: 0,\r\n            orderdetails : {partnum: '',\r\n                quantity: '',\r\n                tagnum: ''\r\n            },\r\n            purposedetails: {\r\n                purpose: 2\r\n            },\r\n            open: false,\r\n            open1: false,\r\n            open2: false,\r\n            open3: false,\r\n            open4: false,\r\n            open5: false,\r\n            open6:false,\r\n            open7: false,\r\n            count: 0,\r\n        };\r\n        this.state = initialState;\r\n    }\r\n    handleClose = () => {\r\n        this.setState({open1: false });\r\n    };\r\n\r\n    handleClose1 = () => {\r\n        this.setState({activeStep: 1,\r\n            orderdetails : {\r\n                partnum: '',\r\n                quantity: '',\r\n                tagnum: ''\r\n            },\r\n            open: false\r\n        });\r\n\r\n    };\r\n\r\n    handleClose2 = () => {\r\n\r\n    };\r\n\r\n    handleClose3 = () => {\r\n        this.setState({open3: false });\r\n    };\r\n\r\n    handleClose4 = () => {\r\n        this.setState({open4: false});\r\n        window.location.reload();\r\n\r\n    };\r\n\r\n    handleClose5 = () => {\r\n        this.setState({activeStep: 1,\r\n            open5: false\r\n        });\r\n    };\r\n\r\n    handleClose6 = () => {\r\n        this.setState({activeStep: 1,\r\n            open6: false\r\n        });\r\n    };\r\n\r\n    handleClose7 = () => {\r\n        this.setState({activeStep: 1,\r\n            open7: false\r\n        });\r\n    };\r\n\r\n    handleOrderDetail = event => {\r\n        const { name, value} = event.target;\r\n        this.setState(prevState => ({\r\n                                orderdetails: {\r\n                                    ...prevState.orderdetails,\r\n                                    [name]: value\r\n                                }\r\n        }));\r\n\r\n    };\r\n    handlePurposeChange = event => {\r\n        const { name, value} = event.target;\r\n        this.setState(prevState => ({\r\n            purposedetails: {\r\n                ...prevState.purposedetails,\r\n                [name]: value\r\n            }\r\n        }));\r\n\r\n    };\r\n    handlepg0Reset = () => {\r\n        this.setState({orderdetails:\r\n                {partnum: '',\r\n                quantity: '',\r\n                tagnum: ''\r\n            }});\r\n    };\r\n\r\n    handleNoSubmit = () => {\r\n        this.setState({open2: false}) ;\r\n    };\r\n    handlepg1Reset = () => {\r\n        this.setState({purposedetails:\r\n                {purpose: '',\r\n                barcode: ''\r\n                }\r\n        });\r\n    };\r\n    handleNext = () => {\r\n        if((this.state.activeStep === 1 && (this.state.orderdetails.partnum !== '' && this.state.orderdetails.tagnum !== '' && this.state.orderdetails.quantity !== '')) || (this.state.activeStep === 0 && (this.state.purposedetails.purpose !== '' )) ) {\r\n            this.setState(state => ({\r\n                activeStep: state.activeStep + 1,\r\n            }));\r\n        }else {\r\n            this.setState({open1: true});\r\n        }\r\n        // this.setState(state => ({\r\n        //     activeStep: state.activeStep + 1,\r\n        // }));\r\n        // console.log(\"curent state: \", this.state);\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const dataObj = {\r\n            partnum: this.state.orderdetails.partnum,\r\n            quantity: this.state.orderdetails.quantity.substring(1,this.state.orderdetails.quantity.length),\r\n            tagnum: this.state.orderdetails.tagnum,\r\n            purpose: purposetext(this.state.purposedetails.purpose)\r\n        };\r\n\r\n        const headerObj = {\r\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\r\n        };\r\n        axios.post(\"/api/processScan\",dataObj, {headers: headerObj}).then((res, err) => {\r\n            // console.log(\"Added submit to the client checkout page \", res);\r\n            if((res.data.data !== null && res.data.data === true) || (res.data.data === 1)){\r\n                if(this.state.purposedetails.purpose === 3) {\r\n                    this.setState({count: this.state.count - 1});\r\n                    this.setState({activeStep: 1,\r\n                        orderdetails : {\r\n                            partnum: '',\r\n                            quantity: '',\r\n                            tagnum: ''\r\n                        }\r\n                    });\r\n                }else {\r\n                    this.setState({count: this.state.count + 1});\r\n                    this.setState({activeStep: 1,\r\n                        orderdetails : {\r\n                            partnum: '',\r\n                            quantity: '',\r\n                            tagnum: ''\r\n                        }\r\n                    });\r\n                }\r\n                //removed to increase scan efficency.\r\n                // this.setState({open: true, open2: false});\r\n            }else if (res.data.data === null) {\r\n                this.setState({open3: true, open2: false, orderdetails : {\r\n                        partnum: '',\r\n                        quantity: '',\r\n                        tagnum: ''\r\n                    }});\r\n            }else if (res.data.data === 'INVALIDTOKEN') {\r\n                this.setState({open4: true, orderdetails : {\r\n                        partnum: '',\r\n                        quantity: '',\r\n                        tagnum: ''\r\n                    }})\r\n            }else if (res.data.data === 'TAGALREADYCONSUMED') {\r\n                this.setState({open5: true, open2: false, orderdetails : {\r\n                        partnum: '',\r\n                        quantity: '',\r\n                        tagnum: ''\r\n                    }})\r\n            }else if (res.data.data === 'NOERROR') {\r\n                this.setState({open6: true, open2: false, orderdetails : {\r\n                        partnum: '',\r\n                        quantity: '',\r\n                        tagnum: ''\r\n                    }})\r\n            }else if (res.data.data === 'RECEIPT') {\r\n                this.setState({count: this.state.count + 1, orderdetails : {\r\n                        partnum: '',\r\n                        quantity: '',\r\n                        tagnum: ''\r\n                    }});\r\n                // this.setState({open7: true, open2: false})\r\n            }\r\n\r\n        })\r\n\r\n\r\n    };\r\n    getCount = () => {\r\n        const headerObj = {\r\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\r\n        };\r\n      axios.post('/api/getcount',{},{headers: headerObj}).then((res, err) => {\r\n          // console.log('This is the response to the get count, ', res.data.count[0][0].count);\r\n          const cnt = res.data.count[0][0].count || 0;\r\n          if (cnt > 0) {\r\n              this.setState({count: cnt});\r\n          }\r\n      })\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState(state => ({\r\n            activeStep: state.activeStep - 1,\r\n        }));\r\n        // console.log(\"curent state: \", this.state);\r\n    };\r\n    getStepContent = (step) => {\r\n        switch (step) {\r\n            case 0:\r\n                return <PurposeSection updateval={this.handlePurposeChange.bind(this)} purposeval={this.state.purposedetails.purpose} barcodeVal={this.state.orderdetails.tagnum}/>;\r\n            case 1:\r\n                return <OrderDetail field1={this.state.orderdetails.partnum} field2={this.state.orderdetails.quantity} field3={this.state.orderdetails.tagnum} updateval={this.handleOrderDetail.bind(this)} inputpart={this.state.orderdetails.partnum} inputqty={this.state.orderdetails.quantity} inputtagnum={this.state.orderdetails.tagnum} count={this.state.count}/>;\r\n            // case 2:\r\n            //     return <Review pnumber={this.state.orderdetails.partnum} tagnumber={this.state.orderdetails.tagnum} qty={this.state.orderdetails.quantity} purposeval={this.state.purposedetails.purpose}/>;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    };\r\n    getResetButton = (actstep, classes) => {\r\n        switch(actstep) {\r\n            case 0:\r\n                return (<Button onClick={this.handlepg1Reset} className={classes.button} variant=\"outlined\">\r\n                    Reset\r\n                </Button>);\r\n            case 1:\r\n                return (<Button onClick={this.handlepg0Reset} className={classes.button} variant=\"outlined\">\r\n                            Reset\r\n                        </Button>);\r\n            default:\r\n                return ('');\r\n        }\r\n    };\r\n\r\n    componentWillMount() {\r\n        // this.setState({companyName: this.props});\r\n\r\n        // console.log('the state in teh comp will mount, ', this.props);\r\n        this.getCount();\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { activeStep } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <Navbar handleSignOut={this.props.handleSignOut} username={this.props.companyname}/>\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer}/>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                                Order Input\r\n                            </Typography>\r\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                                {steps.map(label => (\r\n                                    <Step key={label}>\r\n                                        <StepLabel>{label}</StepLabel>\r\n                                    </Step>\r\n                                ))}\r\n                            </Stepper>\r\n                            {this.getStepContent(activeStep)}\r\n                            <div className={classes.buttons}>\r\n                                {activeStep === steps.length - 1 ?\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.handleSubmit}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        Submit\r\n                                    </Button>\r\n                                    :\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        Next\r\n                                    </Button>}\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={this.handleBack} className={classes.button}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                {this.getResetButton(activeStep, classes)}\r\n                            </div>\r\n                        </Paper>\r\n                    </main>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open}\r\n                        onClose={this.handleClose1}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Added\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Material movement has been added.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open1}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Please make sure all fields are filled in correctly.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open2}\r\n                        onClose={this.handleClose2}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Summary\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Part Number: {this.state.orderdetails.partnum} || Quantity: {this.state.orderdetails.quantity.substring(1,this.state.orderdetails.quantity.length)} Lb. || Tag Number: {this.state.orderdetails.tagnum}\r\n                            </Typography>\r\n                            <Button onClick={this.handleNoSubmit} className={classes.button}>\r\n                                Do Not Submit\r\n                            </Button>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open3}\r\n                        onClose={this.handleClose3}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Material was not added, please ensure all data is in the appropriate field.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open4}\r\n                        onClose={this.handleClose4}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Session Has expired -- Please Log in again.\r\n                            </Typography>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open5}\r\n                        onClose={this.handleClose5}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Tag Number does not exist.\r\n\r\n                                ---- or ----\r\n\r\n                                Tag Number has been consumed.\r\n                            </Typography>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open6}\r\n                        onClose={this.handleClose6}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                No Error To Correct.\r\n                            </Typography>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open7}\r\n                        onClose={this.handleClose7}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Success\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Receipt Successfully processed.\r\n                            </Typography>\r\n                        </div>\r\n\r\n                    </Modal>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nCheckout.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Checkout);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport classNames from 'classnames';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport orderBy from 'lodash/orderBy';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n    render() {\r\n        const { onSelectAllClick, order, orderBy, numSelected, rowCount, cols, incCheckBoxHead } = this.props;\r\n        // console.log(\"Enhanced header, Order: \" + order + \". OrderBy: \" + orderBy);\r\n        // console.log(\"Enhanced header, cols props \" + cols[0].id);\r\n        return (\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell padding=\"checkbox\">\r\n                        {incCheckBoxHead ? <Checkbox\r\n                            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                            checked={numSelected === rowCount}\r\n                            onChange={onSelectAllClick}\r\n                            color='primary'\r\n                        /> : ''}\r\n\r\n                    </TableCell>\r\n                    {cols.map(\r\n                        cols => (\r\n                            <TableCell\r\n                                key={cols.id}\r\n                                align={cols.numeric ? 'right' : 'left'}\r\n                                display='flex'\r\n                                padding={cols.disablePadding ? 'none' : 'default'}\r\n                                sortDirection={orderBy === cols.id ? order : false}\r\n                            >\r\n                                <div display='block'>\r\n                                    <Tooltip\r\n                                        title=\"Sort\"\r\n                                        placement={cols.numeric ? 'bottom-end' : 'bottom-start'}\r\n                                        enterDelay={300}\r\n                                    >\r\n                                        <TableSortLabel\r\n                                            active={orderBy === cols.id}\r\n                                            direction={order}\r\n                                            onClick={(event) => this.props.handleSort1(event, cols.id)}\r\n                                        >\r\n                                            {cols.label}\r\n                                        </TableSortLabel>\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div display='block'>\r\n                                    <TextField\r\n                                        name={cols.id}\r\n                                        hinttext=\"Query\"\r\n                                        floatinglabeltext=\"Query\"\r\n                                        value={this.props.query}\r\n                                        onChange={(e) => this.props.handleQueryChange(e)}\r\n\r\n                                    />\r\n                                </div>\r\n                            </TableCell>\r\n                        ),\r\n                        this,\r\n                    )}\r\n                </TableRow>\r\n            </TableHead>\r\n        );\r\n    }\r\n}\r\nEnhancedTableHead.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.string.isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n    root: {\r\n        paddingRight: theme.spacing.unit,\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.primary.main,\r\n                backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.primary.dark,\r\n            },\r\n    spacer: {\r\n        flex: '1 1 100%',\r\n    },\r\n    actions: {\r\n        color: theme.palette.text.primary,\r\n    },\r\n    title: {\r\n        flex: '0 0 auto',\r\n    },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n    const { numSelected, classes, title } = props;\r\n    return (\r\n        <Toolbar\r\n            className={classNames(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <div className={classes.title}>\r\n                {numSelected > 0 ? (\r\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                        {title}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n            <div className={classes.spacer} />\r\n            <div className={classes.actions}>\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        hover: 'primary'\r\n    },\r\n    table: {\r\n        minWidth: 1020,\r\n        backgroundColor: 'primary',\r\n    },\r\n    highlight: {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.primary.dark\r\n    },\r\n    rowItem: {\r\n        width: '90%'\r\n    }\r\n});\r\nconst initialState = {\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n    columnToSort: '',\r\n    sortDirection: 'desc',\r\n    query: '',\r\n    columnToQuery: '',\r\n\r\n};\r\nclass EnhancedTable extends React.Component {\r\n    state = initialState;\r\n    constructor (props) {\r\n        super(props);\r\n        const {dataPassed} = this.props;\r\n        //const {dataPassed, selected} = this.props;\r\n        this.state = {\r\n            ...initialState,\r\n            rows: dataPassed,\r\n            selected: []\r\n        };\r\n    };\r\n    handleSort = (event, columnName) => {\r\n        // console.log(\"sort event object: \");\r\n        // console.log(\"Sort data is being hit Column Name:\", columnName);\r\n        this.setState({\r\n            columnToSort: columnName,\r\n            sortDirection: this.state.columnToSort === columnName ? (this.state.sortDirection === 'desc' ? 'asc' : 'desc') : 'asc'\r\n        });\r\n        // console.log(\"State of the state after the update in the sort data function \", this.state);\r\n    };\r\n\r\n    handleQueryChange1 = (event) => {\r\n        this.setState({\r\n            columnToQuery: event.target.name,\r\n            query: event.target.value\r\n        })\r\n    };\r\n\r\n    componentDidMount () {\r\n        // console.log(\"Component Did Mount\");\r\n        const { dataPassed } = this.props;\r\n        // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\r\n        this.setState({\r\n            rows: dataPassed\r\n        })\r\n    };\r\n\r\n    handleSelectAllClick = event => {\r\n        this.props.handleSelAll(event.target.checked, this.state.rows);\r\n    };\r\n\r\n    handleClick = (event, id) => {\r\n        this.props.handleSelected(id);\r\n    };\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n\r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    isSelected = id => this.props.selected.indexOf(id) !== -1;\r\n\r\n    render() {\r\n        const { classes, columns, tableTitle, selected, incCheckBox} = this.props;\r\n        const rows = this.props.dataPassed;\r\n        const { sortDirection, columnToSort, rowsPerPage, page } = this.state;\r\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\r\n        const formQuery = this.state.query.toLowerCase();\r\n        // console.log(\"data being passed to table\", this.state.columnToSort);\r\n        // console.log(\"data being passed to table, columns\", columns);\r\n        // console.log(\"State in the table, \", this.state);\r\n\r\n        return (\r\n            <Paper className={classes.root}>\r\n                <EnhancedTableToolbar numSelected={selected.length} title={tableTitle} />\r\n                <div className={classes.tableWrapper}>\r\n                    <Table className={classes.table} aria-labelledby={tableTitle}>\r\n                        <EnhancedTableHead\r\n                            incCheckBoxHead = {incCheckBox}\r\n                            numSelected={selected.length}\r\n                            order={sortDirection}\r\n                            orderBy={columnToSort}\r\n                            onSelectAllClick={this.handleSelectAllClick}\r\n                            rowCount={rows.length}\r\n                            cols={columns}\r\n                            handleSort1={this.handleSort}\r\n                            handleQueryChange={this.handleQueryChange1}\r\n                        />\r\n                        <TableBody>\r\n\r\n                            {orderBy(this.state.query ? rows.filter(x => x[this.state.columnToQuery].toLowerCase().includes(formQuery)) : rows, this.state.columnToSort, this.state.sortDirection).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n                                <TableRow\r\n                                    key={row.id}\r\n                                    hover\r\n                                    onClick={event => this.handleClick(event, row.id)}\r\n                                    role=\"checkbox\"\r\n                                    tabIndex={-1}\r\n                                    className={classes.rowItem}\r\n                                    selected={this.isSelected(row.id)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        {incCheckBox ? <Checkbox color='primary' checked={this.isSelected(row.id)} /> : ''}\r\n                                    </TableCell>\r\n                                    {columns.map((col) => (\r\n                                        <TableCell component=\"th\" scope=\"row\" align={col.numeric ? \"right\" : \"left\"} key={col.id}>\r\n                                            {col.numeric ? row[col.id].toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : row[col.id]}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{ height: 48 * emptyRows }}>\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </div>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    backIconButtonProps={{\r\n                        'aria-label': 'Previous Page',\r\n                    }}\r\n                    nextIconButtonProps={{\r\n                        'aria-label': 'Next Page',\r\n                    }}\r\n                    onChangePage={this.handleChangePage}\r\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nEnhancedTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(EnhancedTable);\r\n\r\n// const actionsStyles = theme => ({\r\n//     root: {\r\n//         flexShrink: 0,\r\n//         color: theme.palette.text.secondary,\r\n//         marginLeft: theme.spacing.unit * 2.5,\r\n//     },\r\n// });\r\n//\r\n// class TablePaginationActions extends React.Component {\r\n//     handleFirstPageButtonClick = event => {\r\n//         this.props.onChangePage(event, 0);\r\n//     };\r\n//\r\n//     handleBackButtonClick = event => {\r\n//         this.props.onChangePage(event, this.props.page - 1);\r\n//     };\r\n//\r\n//     handleNextButtonClick = event => {\r\n//         this.props.onChangePage(event, this.props.page + 1);\r\n//     };\r\n//\r\n//     handleLastPageButtonClick = event => {\r\n//         this.props.onChangePage(\r\n//             event,\r\n//             Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n//         );\r\n//     };\r\n//\r\n//     render() {\r\n//         const { classes, count, page, rowsPerPage, theme } = this.props;\r\n//\r\n//         return (\r\n//             <div className={classes.root}>\r\n//                 <IconButton\r\n//                     onClick={this.handleFirstPageButtonClick}\r\n//                     disabled={page === 0}\r\n//                     aria-label=\"First Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n//                 </IconButton>\r\n//                 <IconButton\r\n//                     onClick={this.handleBackButtonClick}\r\n//                     disabled={page === 0}\r\n//                     aria-label=\"Previous Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n//                 </IconButton>\r\n//                 <IconButton\r\n//                     onClick={this.handleNextButtonClick}\r\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//                     aria-label=\"Next Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n//                 </IconButton>\r\n//                 <IconButton\r\n//                     onClick={this.handleLastPageButtonClick}\r\n//                     disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n//                     aria-label=\"Last Page\"\r\n//                 >\r\n//                     {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n//                 </IconButton>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n//\r\n// TablePaginationActions.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n//     count: PropTypes.number.isRequired,\r\n//     onChangePage: PropTypes.func.isRequired,\r\n//     page: PropTypes.number.isRequired,\r\n//     rowsPerPage: PropTypes.number.isRequired,\r\n//     theme: PropTypes.object.isRequired,\r\n// };\r\n//\r\n// const TablePaginationActionsWrapped = withStyles(actionsStyles, { withTheme: true })(\r\n//     TablePaginationActions,\r\n// );\r\n//\r\n// const styles = theme => ({\r\n//     root: {\r\n//         width: 'auto',\r\n//         marginTop: theme.spacing.unit * 3,\r\n//     },\r\n//     table: {\r\n//         minWidth: 500,\r\n//     },\r\n//     tableWrapper: {\r\n//         overflowX: 'auto',\r\n//     },\r\n// });\r\n//\r\n// const initialState = {\r\n//     rows: [],\r\n//     page: 0,\r\n//     rowsPerPage: 5,\r\n// };\r\n//\r\n// class SimpleTable extends React.Component {\r\n//     constructor (props) {\r\n//         super(props);\r\n//         const {dataPassed} = this.props;\r\n//         this.state = {\r\n//                 ...initialState,\r\n//                 rows: dataPassed\r\n//         };\r\n//     }\r\n//     componentDidMount () {\r\n//         // console.log(\"Component Did Mount\");\r\n//         const { dataPassed } = this.props;\r\n//         // console.log(`component will moutn has this array being passed to it ${dataPassed}`);\r\n//         this.setState({\r\n//             rows: dataPassed\r\n//         })\r\n//     }\r\n//     handleChangePage = (event, page) => {\r\n//         this.setState({ page });\r\n//     };\r\n//     handleChangeRowsPerPage = event => {\r\n//         this.setState({ page: 0, rowsPerPage: event.target.value });\r\n//     };\r\n//     render() {\r\n//         const { classes, columns, sortDirection, columnToSort } = this.props;\r\n//         const rows = this.props.dataPassed;\r\n//         const { rowsPerPage, page } = this.state;\r\n//         const emptyRows = rowsPerPage - Math.min(rowsPerPage, (rows != null ? rows.length : 0) - page * rowsPerPage);\r\n//         // console.log(\"This is the props \" + sortDirection + \" \" + columnToSort);\r\n//         return (\r\n//             <Paper className={classes.root}>\r\n//                 <div className={classes.tableWrapper}>\r\n//                     <Table className={classes.table}>\r\n//                                      <TableHead>\r\n//                                        <TableRow>\r\n//                                            <TableCell padding=\"checkbox\">\r\n//                                                <Checkbox />\r\n//                                            </TableCell>\r\n//                                            {columns.map((col) => (\r\n//                                                <TableCell align=\"left\">\r\n//                                                    <div onClick={() => this.props.handleSort(col.prop)}><span>{col.name} {columnToSort === col.prop ? (sortDirection === \"asc\" ? <UpArrow/> : <DownArrow/>) : null} </span></div>\r\n//                                                </TableCell>\r\n//                                            ))}\r\n//                                         </TableRow>\r\n//                                        </TableHead>\r\n//                         <TableBody>\r\n//                             {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\r\n//                                 <TableRow key={row.id}>\r\n//\r\n//                                     {columns.map((col) => (\r\n//                                         <TableCell component=\"th\" scope=\"row\" align=\"left\">\r\n//                                             {row[col.prop]}\r\n//                                         </TableCell>\r\n//                                     ))}\r\n//                                 </TableRow>\r\n//                             ))}\r\n//                             {emptyRows > 0 && (\r\n//                                 <TableRow style={{ height: 48 * emptyRows }}>\r\n//                                     <TableCell colSpan={6} />\r\n//                                 </TableRow>\r\n//                             )}\r\n//                         </TableBody>\r\n//                         <TableFooter>\r\n//                             <TableRow>\r\n//                                 <TablePagination\r\n//                                     rowsPerPageOptions={[5, 10, 25]}\r\n//                                     colSpan={3}\r\n//                                     count={rows.length}\r\n//                                     rowsPerPage={rowsPerPage}\r\n//                                     page={page}\r\n//                                     SelectProps={{\r\n//                                         native: true,\r\n//                                     }}\r\n//                                     onChangePage={this.handleChangePage}\r\n//                                     onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n//                                     ActionsComponent={TablePaginationActionsWrapped}\r\n//                                 />\r\n//                             </TableRow>\r\n//                         </TableFooter>\r\n//                     </Table>\r\n//                 </div>\r\n//             </Paper>\r\n//         );\r\n//     }\r\n// }\r\n// SimpleTable.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n// };\r\n//\r\n// export default withStyles(styles)(SimpleTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit * .5,\r\n        marginRight: theme.spacing.unit,\r\n        width: 200,\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n});\r\n\r\nfunction DatePickers(props) {\r\n    const { classes } = props;\r\n\r\n    return (\r\n        <form className={classes.container} noValidate>\r\n            <TextField\r\n                className={classes.textField}\r\n                id=\"range1\"\r\n                label=\"From\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                value={props.range1}\r\n                onChange={props.handleDateChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">Time</InputAdornment>,\r\n                }}\r\n            />\r\n            <TextField\r\n                id=\"range2\"\r\n                label=\"To\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                value={props.range2}\r\n                onChange={props.handleDateChange}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nDatePickers.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DatePickers);","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport Button from '@material-ui/core/Button';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n// const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst styles = theme => ({\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    }\r\n\r\n});\r\n\r\n\r\nclass Download extends React.Component {\r\n    render() {\r\n        const { classes, dataArray } = this.props;\r\n        const data = [[{\r\n                        value: \"Rec Number\",\r\n                        style: {\r\n                            font: {\r\n                                    sz: \"18\",\r\n                                    bold: true\r\n                                },\r\n                            fill: {\r\n                                    patternType: \"solid\",\r\n                                    fgColor:{\r\n                                            rgb: \"86af49\"\r\n                                            }\r\n                                    },\r\n                            alignment: {\r\n                                    vertical: \"center\",\r\n                                    horizontal: \"center\"}\r\n                                }\r\n                        },\r\n            {\r\n                value: \"Scan Date\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Scan Code\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Product\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Quantity\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        }\r\n                    },\r\n                    alignment: {\r\n                        vertical: \"center\",\r\n                        horizontal: \"center\"}\r\n                }\r\n            },\r\n            {\r\n                value: \"Tag Number\",\r\n                style: {\r\n                    font: {\r\n                        sz: \"18\",\r\n                        bold: true\r\n                    },\r\n                    fill: {\r\n                        patternType: \"solid\",\r\n                        fgColor:{\r\n                            rgb: \"86af49\"\r\n                        },\r\n                        alignment: {\r\n                            vertical: \"center\",\r\n                            horizontal: \"center\"}\r\n                    }\r\n                }\r\n            }\r\n                    ]];\r\n        const multiDataSet = [];\r\n        let keyHolder = [];\r\n        let dataHolder = [];\r\n\r\n        const columnsArray = [\r\n            // {title: \"Rec Number\", width: {wch: 12}, background: \"FF00FF00\"\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", bgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"0\"\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Scan Date\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"yyyy-mm-dd\"\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Scan Code\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Product\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}}\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Quantity\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"#,##0\"\r\n                //\r\n                // }\r\n            // },\r\n            // {title: \"Tag Number\", width: {wch: 12},\r\n                // style: {\r\n                //     fill: {patternType: \"solid\", fgColor: {rgb: \"FF00FF00\"}},\r\n                //     font:{sz: \"14\", bold: true},\r\n                //     alignment: {vertical: \"center\", horizontal: \"center\"},\r\n                //     border: {bottom: {style: \"thick\", color: { rgb: \"FFFFAA00\" }}},\r\n                //     numFmt: \"#,##0\"\r\n                //\r\n                // }\r\n            // }\r\n        ];\r\n\r\n        // multiDataSet.push({ySteps: 1, columns: columnsArray});\r\n        multiDataSet.push({columns: columnsArray});\r\n\r\n        //have to loop through data being passed and create an array of objects\r\n\r\n        //looping through array being passed so array[0] will give us first object\r\n        for (let i = 0; i < dataArray.length; i++) {\r\n            dataHolder = [];\r\n            keyHolder = [];\r\n            //putting all the keys of the object into an array\r\n            keyHolder = Object.keys(dataArray[i]);\r\n            for (let j = 1; j < keyHolder.length; j++) {\r\n                if ((i+1) % 2 === 1) {\r\n                    if( j === 5 ) {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }else {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }\r\n                }\r\n                else {\r\n                    if( j === 5 ) {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, numFmt: \"#,##0\", alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }else {\r\n                        dataHolder.push({value: dataArray[i][keyHolder[j]], style: {font: {sz: \"12\"}, fill: {patternType: \"solid\", fgColor:{rgb: \"b5e7a0\"}}, alignment: {vertical: \"center\", horizontal: \"center\"}}});\r\n                    }\r\n                }\r\n            }\r\n            data.push(dataHolder);\r\n\r\n        }\r\n\r\n\r\n\r\n        multiDataSet[0].data = data;\r\n\r\n        console.log(\"This is the object being created: \", multiDataSet);\r\n        console.log(\"This is the original object passed as param: \", dataArray);\r\n\r\n        return (\r\n            <ExcelFile element={\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    align='center'\r\n                >\r\n                    Download Report\r\n                </Button>\r\n            } filename={\"Report Request\"}>\r\n                {/*<ExcelSheet data={dataArray} name=\"Scanned_Report\">*/}\r\n                {/*    <ExcelColumn label=\"Rec Number\" value=\"recno\" />*/}\r\n                {/*    <ExcelColumn label=\"Scan Date\" value=\"scandate\"/>*/}\r\n                {/*    <ExcelColumn label=\"Scan Code\" value=\"scancode\"/>*/}\r\n                {/*    <ExcelColumn label=\"Product\" value=\"product\"/>*/}\r\n                {/*    <ExcelColumn label=\"Quantity\" value=\"quantity\"/>*/}\r\n                {/*    <ExcelColumn label=\"Tag Number\" value=\"tagnum\"/>*/}\r\n                {/*    /!*<ExcelColumn label=\"Marital Status\"*!/*/}\r\n                {/*                 /!*value={(col) => col.is_married ? \"Married\" : \"Single\"}/>*!/*/}\r\n                {/*</ExcelSheet>*/}\r\n                <ExcelSheet dataSet={multiDataSet} name=\"Scanned_Report\" />\r\n            </ExcelFile>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Download);\r\n\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Navbar from './../../components/Navbar2';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Table from '../../components/SimpleTable';\r\nimport Icon from '@mdi/react';\r\nimport {mdiLoading} from \"@mdi/js\";\r\nimport axios from 'axios';\r\nimport DateBox from '../../components/DateSelector';\r\nimport Download from '../../components/ExcelExport';\r\nrequire('es6-promise').polyfill();\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'auto',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing.unit * 7,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9,\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    chartContainer: {\r\n        marginLeft: -22,\r\n    },\r\n    tableContainer: {\r\n        height: 320,\r\n    },\r\n    h5: {\r\n        marginBottom: theme.spacing.unit * 2,\r\n    },\r\n    paper1: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        padding: theme.spacing.unit,\r\n        overflow: 'auto',\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * -1,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n        align: 'center',\r\n    },\r\n    loadSection: {\r\n        align: 'center',\r\n        marginTop: theme.spacing.unit * 3,\r\n    },\r\n        button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    },\r\n    buttonHolder: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing.unit * 2\r\n    }\r\n});\r\n\r\nconst ranges = [{\r\n    value: 1,\r\n    label: 'Today'\r\n},{\r\n    value: 2,\r\n    label: 'Current Week'\r\n},{\r\n    value: 3,\r\n    label: 'MTD'\r\n},{\r\n    value: 4,\r\n    label: 'YTD'\r\n},{\r\n    value: 5,\r\n    label: 'Custom'\r\n}];\r\n\r\nconst ranges2 = [{\r\n    value: 0,\r\n    label: 'No Selection'\r\n},{\r\n    value: 1,\r\n    label: 'Summary Report'\r\n},{\r\n    value: 2,\r\n    label: 'Scanned Report'\r\n}];\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nconst initialState = {\r\n    period : \"\",\r\n    runReport: false,\r\n    open: false,\r\n    modalOpen: false,\r\n    open2: false,\r\n    open3: false,\r\n    open4: false,\r\n    open5: false,\r\n    data: null,\r\n    range1: \"\",\r\n    range2: \"\",\r\n    columnToSort: \"\",\r\n    sortDirection: \"desc\",\r\n    reportType: 0,\r\n    selected: []\r\n};\r\n\r\nclass report extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ modalOpen: false });\r\n    };\r\n    handleClose2 = () => {\r\n        this.setState({\r\n            open2: false,\r\n            range1: \"\",\r\n            range2: \"\"\r\n        })\r\n    };\r\n\r\n    handleClose345 = () => {\r\n        this.setState(initialState);\r\n\r\n    };\r\n\r\n\r\n    openModal = () => {\r\n        this.setState({open: true})\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleChange = prop => event => {\r\n        const { value } = event.target;\r\n        this.setState({\r\n        [prop] : value,\r\n        range1: \"\",\r\n        range2: \"\"\r\n        })\r\n    };\r\n    handleDate = (event) => {\r\n        // console.log(\"the event target object beign passed to the handledate, \", event.target.value);\r\n        const { value, id} = event.target;\r\n        if(id === 'range2') {\r\n            if(this.state.range1 > value) {\r\n                this.setState({open2: true});\r\n            }\r\n        }\r\n        this.setState({\r\n            [id] : value\r\n        });\r\n        // console.log(\"state once date is changed\", this.state);\r\n    };\r\n    //for the table in order to get the data that has been selected to the parent\r\n\r\n    updSelected (newSel) {\r\n        const { selected } = this.state;\r\n        const selectedIndex = selected.indexOf(newSel);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, newSel);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        this.setState({\r\n            selected: newSelected\r\n        });\r\n\r\n        // console.log(\"update selected on dasboard being hit, \", this.state);\r\n    }\r\n    handleSelectAll (checked, rows) {\r\n        if (checked) {\r\n            this.setState({ selected: rows.map(n => n.id) });\r\n            // return;\r\n        }else {\r\n            this.setState({selected: [], filter: false});\r\n        }\r\n    }\r\n\r\n    // end\r\n\r\n    handleSummarySubmit = () => {\r\n        const headerObj = {\r\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\r\n        };\r\n\r\n        axios.post('/summaryreporting',{},{headers: headerObj}).then((res, err) => {\r\n                if (err) {\r\n                    //coding if error making call\r\n                    this.setState({open3: true})\r\n                }else {\r\n                    console.log('this is the resonse from summary reporting', res.data.data);\r\n                    if(res.data.data && res.data.data !== 3) {\r\n                        this.setState({open5: true})\r\n                    }else if (res.data.data === 3) {\r\n                        //coding for if error adding to table\r\n                        this.setState({open4:true})\r\n                    }\r\n                }\r\n        })\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const headerObj = {\r\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\r\n        };\r\n        this.setState({runReport: true, data: null});\r\n        let dataObj;\r\n        if (this.state.period === 5){\r\n            dataObj = {comp: this.props.companyname, period: this.state.period, range1: this.state.range1, range2: this.state.range2};\r\n        }else {\r\n            dataObj  = {comp: this.props.companyname, period: this.state.period};\r\n        }\r\n\r\n        let holderArray = [];\r\n            axios.post('/reporting', dataObj, {headers: headerObj}).then((res, err) => {\r\n                if(err) {\r\n                    // console.log('Error in getting data from database for reporting ', err);\r\n                }\r\n                // console.log('this is the response from the reporting 1', res.data.data[0]);\r\n                if(res.data.data[0] !== null && res.data.data[0].length > 0) {\r\n                    for (let i = 0; i < res.data.data[0].length; i++) {\r\n                        let holderDate = res.data.data[0][i].SCANDATE + '';\r\n                        let holderArr =  holderDate.split('T');\r\n                        // console.log(\"Splitting the date, \", holderArr);\r\n                        let dObj = {\r\n                            'id' : res.data.data[0][i].RECNO,\r\n                            'recno': res.data.data[0][i].RECNO.toString(),\r\n                            'scandate': holderArr[0],\r\n                            'scancode': res.data.data[0][i].CODE,\r\n                            'product': res.data.data[0][i].PART,\r\n                            'quantity': res.data.data[0][i].QTY,\r\n                            'tagnum': res.data.data[0][i].TAG_NUM,\r\n                        };\r\n\r\n                        holderArray.push(dObj);\r\n                    }\r\n                    this.setState({data: holderArray});\r\n                    holderArray = [];\r\n                }else {\r\n                    this.setState({data: []\r\n                    });\r\n                }\r\n                // console.log('this is the state after the submit, ', this.state);\r\n            })\r\n\r\n    };\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                < Navbar handleSignOut={this.props.handleSignOut} username={this.props.companyname}/>\r\n                <main className={classes.content}>\r\n                    <div className={classes.appBarSpacer}/>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                            Reporting\r\n                        </Typography>\r\n                        <React.Fragment>\r\n                            <TextField\r\n                                select\r\n                                className={classNames(classes.textField)}\r\n                                variant=\"outlined\"\r\n                                label=\"Report Type\"\r\n                                align='center'\r\n                                value={this.state.reportType}\r\n                                onChange={this.handleChange('reportType')}\r\n                                InputProps={{\r\n                                    startAdornment: <InputAdornment position=\"start\">Report Type</InputAdornment>,\r\n                                }}\r\n                            >\r\n                                {ranges2.map(option1 => (\r\n                                    <MenuItem key={option1.value} value={option1.value}>\r\n                                        {option1.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            {this.state.reportType === 2 ? <div>\r\n                                    <TextField\r\n                                        select\r\n                                        className={classNames(classes.margin, classes.textField)}\r\n                                        variant=\"outlined\"\r\n                                        label=\"Time Range\"\r\n                                        align='center'\r\n                                        value={this.state.period}\r\n                                        onChange={this.handleChange('period')}\r\n                                        InputProps={{\r\n                                            startAdornment: <InputAdornment position=\"start\">Time</InputAdornment>,\r\n                                        }}\r\n                                    >\r\n                                        {ranges.map(option => (\r\n                                            <MenuItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </TextField>\r\n\r\n                                    {this.state.period === 5 &&\r\n\r\n                                    <DateBox handleDateChange={this.handleDate.bind(this)}\r\n                                             range1={this.state.range1} range2={this.state.range2}/>}\r\n\r\n\r\n                                    {((this.state.period !== \"\" && this.state.period !== 5) || (this.state.period === 5 && this.state.range1 !==\"\" && this.state.range2 !== \"\")) &&\r\n                                    <div className={classes.buttonHolder}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={this.handleSubmit}\r\n                                            className={classes.button}\r\n                                            align='center'\r\n                                        >\r\n                                            Run Report\r\n                                        </Button>\r\n\r\n                                        {this.state.runReport && (this.state.data !== null && <Download dataArray={this.state.data}/>) }\r\n                                    </div>\r\n                                    }\r\n\r\n                                </div> :\r\n                                    //need to add the code to handle the submit for the summary report\r\n                                (this.state.reportType === 1 && (<div className={classes.buttonHolder}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={this.handleSummarySubmit}\r\n                                            className={classes.button}\r\n                                            align='center'\r\n                                        >\r\n                                            Run Summary Report\r\n                                        </Button>\r\n                                    </div>))\r\n\r\n                            }\r\n                            <CssBaseline/>\r\n\r\n                            <div>\r\n                                {this.state.runReport && this.state.reportType === 2 &&\r\n                                (this.state.data !== null ?\r\n                                        <Table\r\n                                            handleSelected={this.updSelected.bind(this)}\r\n                                            handleSelAll={this.handleSelectAll.bind(this)}\r\n                                            selected={this.state.selected}\r\n                                            dataPassed={this.state.data}\r\n                                            tableTitle={\"Report\"}\r\n                                            incCheckBox={false}\r\n                                            columns={[\r\n                                                {\r\n                                                    name: 'Rec Number',\r\n                                                    id: 'recno',\r\n                                                    numeric: false,\r\n                                                    disablePadding: true,\r\n                                                    label: 'Rec Number'\r\n                                                },\r\n                                                {\r\n                                                    name: 'Scan Date',\r\n                                                    id: 'scandate',\r\n                                                    numeric: false,\r\n                                                    disablePadding: true,\r\n                                                    label: 'Scan Date'\r\n                                                },\r\n                                                {\r\n                                                    name: 'Scan Code',\r\n                                                    id: 'scancode',\r\n                                                    numeric: false,\r\n                                                    disablePadding: true,\r\n                                                    label: 'Scan Code'\r\n                                                },\r\n                                                {\r\n                                                    name: 'Product',\r\n                                                    id: 'product',\r\n                                                    numeric: false,\r\n                                                    disablePadding: true,\r\n                                                    label: 'Product Number'\r\n                                                },\r\n                                                {\r\n                                                    name: 'Quantity',\r\n                                                    id: 'quantity',\r\n                                                    numeric: true,\r\n                                                    disablePadding: true,\r\n                                                    label: 'Quantity in Inventory'\r\n                                                },\r\n                                                {\r\n                                                    name: 'Tag Number',\r\n                                                    id: 'tagnum',\r\n                                                    numeric: true,\r\n                                                    disablePadding: true,\r\n                                                    label: 'Tag Number'\r\n                                                }\r\n                                            ]}\r\n                                        />\r\n                                        :\r\n                                        <Paper>\r\n                                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\r\n                                                <Icon path={mdiLoading}\r\n                                                      size={1.5}\r\n                                                      horizontal\r\n                                                      vertical\r\n                                                      rotate={90}\r\n                                                      color=\"#86af49\"\r\n                                                      spin/>\r\n                                            </Typography>\r\n                                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\r\n                                                Loading...\r\n                                            </Typography>\r\n                                        </Paper>\r\n                                )\r\n                                }\r\n                            </div>\r\n                        </React.Fragment>\r\n                    </Paper>\r\n                </main>\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.modalOpen}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                One of the fields was left unfilled.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open2}\r\n                        onClose={this.handleClose2}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                Invalid Date Range.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open3}\r\n                        onClose={this.handleClose345}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                There was an error with your request.  Please refresh your page and try again.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open4}\r\n                        onClose={this.handleClose345}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Error\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                There was an error with your request.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n                        open={this.state.open5}\r\n                        onClose={this.handleClose345}\r\n                    >\r\n                        <div style={getModalStyle()} className={classes.paper1}>\r\n                            <Typography variant=\"h6\" id=\"modal-title\">\r\n                                Success!\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                                An email will be sent to the email on file with the report.\r\n                            </Typography>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nreport.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(report);","import React from 'react';\r\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\r\nimport LineChart from 'recharts/lib/chart/LineChart';\r\nimport Line from 'recharts/lib/cartesian/Line';\r\nimport XAxis from 'recharts/lib/cartesian/XAxis';\r\nimport YAxis from 'recharts/lib/cartesian/YAxis';\r\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\r\nimport Tooltip from 'recharts/lib/component/Tooltip';\r\nimport Legend from 'recharts/lib/component/Legend';\r\n\r\nfunction SimpleLineChart(passData) {\r\n    const data = [];\r\n\r\n    for (let i = 0; i < passData.passData.length; i++) {\r\n      data.push(passData.passData[i]);\r\n    }\r\n\r\n    // console.log('passdata that is being passed, ', passData);\r\n    return (\r\n        // 99% per https://github.com/recharts/recharts/issues/172\r\n        <ResponsiveContainer width=\"99%\" height={320}>\r\n            <LineChart data={data}>\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\r\n                <Tooltip />\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"Consumed\" stroke=\"#82ca9d\" formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n                <Line type=\"monotone\" dataKey=\"Received\" stroke=\"#8884d8\" activeDot={{ r: 8 }} formatter = {(value) => new Intl.NumberFormat('en').format(value)}/>\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n\r\nexport default SimpleLineChart;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SimpleLineChart from '../../components/SimpleLineChart';\r\nimport SimpleTable from '../../components/SimpleTable';\r\nimport Navbar from '../../components/Navbar2';\r\nimport axios from 'axios';\r\nimport Icon from '@mdi/react';\r\nimport { mdiLoading } from '@mdi/js';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from \"@material-ui/core/Button\";\r\nrequire('es6-promise').polyfill();\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'auto',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing.unit * 7,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing.unit * 9,\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    chartContainer: {\r\n        marginLeft: -22,\r\n    },\r\n    tableContainer: {\r\n        height: 320,\r\n        marginLeft: theme.spacing.unit * 5,\r\n    },\r\n    h5: {\r\n        marginBottom: theme.spacing.unit * 2,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        padding: theme.spacing.unit,\r\n        overflow: 'auto',\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * 6,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n        align: 'center',\r\n    },\r\n    loadSection: {\r\n        align: 'center',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing.unit * -1,\r\n        marginLeft: theme.spacing.unit,\r\n        display: 'inline-flex',\r\n        justifyContent: 'center',\r\n        align: 'center',\r\n    },\r\n});\r\n\r\nconst initialState = {\r\n    data: null,\r\n    dataTable: null,\r\n    columnToSort: \"\",\r\n    sortDirection: \"desc\",\r\n    filtered: false,\r\n    selected: [],\r\n};\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initialState;\r\n    };\r\n    componentWillMount() {\r\n        if(this.state.dataTable === null) {\r\n            this.getChartData();\r\n            this.getTableData();\r\n        }\r\n    }\r\n    updSelected (newSel) {\r\n        const { selected } = this.state;\r\n        const selectedIndex = selected.indexOf(newSel);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, newSel);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n        this.setState({\r\n            selected: newSelected\r\n        });\r\n\r\n        // console.log(\"update selected on dasboard being hit, \", this.state);\r\n    }\r\n    handleSelectAll (checked, rows) {\r\n        if (checked) {\r\n            this.setState({ selected: rows.map(n => n.id) });\r\n            // return;\r\n        }else {\r\n            this.setState({selected: [], filter: false});\r\n        }\r\n    }\r\n    getChartData = (conditions) => {\r\n        const headerObj = {\r\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\r\n        };\r\n        let holderArray = [];\r\n        // console.log('chart data is function is being hit');\r\n        axios.post('/api/consumed', {email: this.state.email, filtered: conditions || false}, {headers: headerObj}).then((res) => {\r\n            let holderObject = {};\r\n            if(res.data.data !== null) {\r\n                // console.log('Data that is coming back from the consumption, ', res.data.data[0]);\r\n                //have the array built here\r\n                holderArray = [];\r\n                for (let i = 0; i < res.data.data[0].length; i++) {\r\n                    holderObject = {\r\n                        name: res.data.data[0][i].Month,\r\n                        Consumed: res.data.data[0][i].Consumed,\r\n                        Received: res.data.data[0][i].Received\r\n                    };\r\n                    // holderArray = this.state.data;\r\n                    holderArray.push(holderObject);\r\n                }\r\n                this.setState({data: holderArray});\r\n                holderArray = [];\r\n            }\r\n            // console.log('Holder Array for the data, ', this.state.data);\r\n        }).catch((err) => {\r\n            // console.log('Error: ', err);\r\n        });\r\n\r\n    };\r\n    getTableData = () => {\r\n        const headerObj = {\r\n            'Authorization': \"bearer \" + sessionStorage.getItem(\"token\")\r\n        };\r\n        let holderArrayTable = [];\r\n        axios.post('/api/consumedTable', this.state.email, {headers: headerObj}).then((res) => {\r\n            let holderObjectTable = {};\r\n            if(res.data.data !== null) {\r\n                 console.log('Data that is coming back from the consumption, ', res.data.data[0]);\r\n                //have the array built here\r\n                holderArrayTable = [];\r\n                for (let i = 0; i < res.data.data[0].length; i++) {\r\n                    holderObjectTable = {\r\n                        id: res.data.data[0][i].PART,\r\n                        name: res.data.data[0][i].PART,\r\n                        tagcount: res.data.data[0][i].tagcount.toString(),\r\n                        quantity: res.data.data[0][i].quantity.toString()\r\n                    };\r\n                    holderArrayTable.push(holderObjectTable);\r\n                }\r\n                this.setState({dataTable: holderArrayTable});\r\n                holderArrayTable = [];\r\n            }\r\n        }).catch((err) => {\r\n            // console.log('error in getting the table data, ', err);\r\n        })\r\n    };\r\n    handleSubmit = () => {\r\n        let holdQueryString = \"\";\r\n        const {selected} = this.state;\r\n        if(selected.length > 0) {\r\n            selected.map((x) => {\r\n                if(selected.indexOf(x) === selected.length -1) {\r\n                    holdQueryString = holdQueryString + \"'\" + x + \"'\";\r\n                }else{\r\n                    holdQueryString = holdQueryString + \"'\" + x + \"', \";\r\n                }\r\n                return holdQueryString;\r\n            });\r\n            this.setState({\r\n                filtered: holdQueryString\r\n            });\r\n            // console.log(\"Data in teh handle submit in the dasboard page, \", holdQueryString);\r\n            // console.log(\"Data in teh handle submit in the dasboard page, \", this.state);\r\n\r\n            this.getChartData(holdQueryString);\r\n        }else{\r\n            this.getChartData();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        // console.log('Holder Array for the data,1 ', this.state.data);\r\n        const { classes } = this.props;\r\n        // console.log('data being passed to the line chart befroe the return, ', this.state.data);\r\n        // console.log('data being passed to the order by', orderBy(this.state.dataTable, this.state.columnToSort, this.state.sortDirection));\r\n        return (\r\n\r\n                <div className={classes.root}>\r\n                <CssBaseline/>\r\n                < Navbar handleSignOut={this.props.handleSignOut} username={this.props.companyname}/>\r\n                <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <div display='in-line'>\r\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\r\n                Product Flow {this.state.selected.length === 0 &&\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSubmit}\r\n                    className={classes.button}\r\n                    align='center'\r\n                >\r\n                    Reset\r\n                </Button>\r\n                }\r\n                </Typography>\r\n                </div>\r\n                <Typography component=\"div\" className={classes.chartContainer}>\r\n\r\n                    {this.state.data\r\n                            ?\r\n                                <SimpleLineChart passData={this.state.data}/>\r\n                            :\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\r\n                                        <Icon path={mdiLoading}\r\n                                            size={1.5}\r\n                                            horizontal\r\n                                            vertical\r\n                                            rotate={90}\r\n                                            color=\"#86af49\"\r\n                                            spin/>\r\n                                     </Typography>\r\n                                    <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\r\n                                        Loading...\r\n                                    </Typography>\r\n                                </Paper>\r\n                    }\r\n\r\n                </Typography>\r\n                <Typography variant=\"h4\" gutterBottom component=\"h2\">\r\n                Products {this.state.selected.length > 0 &&\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSubmit}\r\n                    className={classes.button}\r\n                    align='center'\r\n                >\r\n                    Update Chart\r\n                </Button>\r\n                }\r\n                </Typography>\r\n                <div className={classes.tableContainer}>\r\n\r\n                    {this.state.dataTable\r\n                        ?\r\n\r\n                            <SimpleTable\r\n                                handleSelected={this.updSelected.bind(this)}\r\n                                handleSelAll={this.handleSelectAll.bind(this)}\r\n                                selected={this.state.selected}\r\n                                dataPassed={this.state.dataTable}\r\n                                incCheckBox={true}\r\n                                tableTitle=\"Products\"\r\n                                columns={[\r\n                                    {\r\n                                        name: 'Product',\r\n                                        id: 'name',\r\n                                        numeric: false,\r\n                                        disablePadding: false,\r\n                                        label: \"Product\"\r\n                                    },\r\n                                    {\r\n                                        name: 'Tag Count',\r\n                                        id: 'tagcount',\r\n                                        numeric: true,\r\n                                        disablePadding: false,\r\n                                        label: \"Tag Count\"\r\n                                    },\r\n                                    {\r\n                                        name: 'Quantity in Inventory',\r\n                                        id: 'quantity',\r\n                                        numeric: true,\r\n                                        disablePadding: false,\r\n                                        label: 'Quantity in Inventory'\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        :\r\n                        <Paper className={classes.paper}>\r\n                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\r\n                                <Icon path={mdiLoading}\r\n                                      size={1.5}\r\n                                      horizontal\r\n                                      vertical\r\n                                      rotate={90}\r\n                                      color=\"#86af49\"\r\n                                      spin/>\r\n                            </Typography>\r\n                            <Typography variant=\"h4\" gutterBottom component=\"h2\" className={classes.loadSection} align=\"center\">\r\n                                Loading...\r\n                            </Typography>\r\n                        </Paper>\r\n                    }\r\n                </div>\r\n                </main>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nDashboard.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);","import {Redirect, Route} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nfunction PrivateRoute({ component: Component, auth, ...rest }) {\r\n\r\n    // console.log('this is what is being passed to private router constructor, ' + auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                (auth)\r\n                    ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login1\",\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nclass signUp extends React.Component {\r\n\r\n    render () {\r\n        return <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\r\n                Create account\r\n             </Typography>\r\n            <Grid container spacing={24}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"companyCode\"\r\n                        name=\"companyCode\"\r\n                        label=\"Company Code\"\r\n                        fullWidth\r\n                        autoComplete=\"companyCode\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.CC}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"userName\"\r\n                        name=\"userName\"\r\n                        label=\"User Name\"\r\n                        fullWidth\r\n                        autoComplete=\"usnm\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.UN}\r\n                    />\r\n                </Grid>\r\n\r\n\r\n                { this.props.email1 === '' ?\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            autoComplete=\"email\"\r\n                            onChange={this.props.updateval}\r\n                            value={this.props.email1}\r\n                        />\r\n                    </Grid> :\r\n                    (\r\n\r\n                    (this.props.validE) ?\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                    required\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                    autoComplete=\"email\"\r\n                    onChange={this.props.updateval}\r\n                    value={this.props.email1}\r\n                    />\r\n                    </Grid>\r\n                :\r\n                    <Grid item xs={12}>\r\n                    <TextField\r\n                    error\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                    autoComplete=\"email\"\r\n                    onChange={this.props.updateval}\r\n                    value={this.props.email1}\r\n                    />\r\n                    </Grid>\r\n\r\n                    )}\r\n\r\n\r\n\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        fullWidth\r\n                        type=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={this.props.updateval}\r\n                        value={this.props.PW}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {this.props.PW === this.props.REPW ?\r\n                        ( <TextField\r\n                            required\r\n                            id=\"rePassWord\"\r\n                            name=\"rePassWord\"\r\n                            label=\"Re-Enter Password\"\r\n                            fullWidth\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={this.props.updateval}\r\n                            value={this.props.REPW}\r\n                        />) : (\r\n                            <TextField\r\n                                error\r\n                                id=\"rePassWord\"\r\n                                name=\"rePassWord\"\r\n                                label=\"Re-Enter PassWord\"\r\n                                fullWidth\r\n                                type=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={this.props.updateval}\r\n                                value={this.props.REPW}\r\n                            />\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    }\r\n\r\n}\r\n\r\nexport default signUp;","import React from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport SignUp from '../../components/SignUp';\r\nimport PropTypes from \"prop-types\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport funcs_ from \"../../functions/functions\";\r\nrequire('es6-promise').polyfill();\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction checkEmail(email) {\r\n    let emailRGEX = /[\\w.]+@\\w+\\.(net|com|edu|gov)/;\r\n\r\n    return emailRGEX.test(email);\r\n}\r\n\r\nconst styles = theme => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        // justifyContent: 'center',\r\n        // align: 'center',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n        textAlign: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        padding: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * 6,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n\r\n    },\r\n});\r\n\r\nclass signuppage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            companyCode: '',\r\n            userName: '',\r\n            email: '',\r\n            password: '',\r\n            rePassWord: '',\r\n            open1: false,\r\n            open: false,\r\n            open2: false,\r\n            open3: false,\r\n            validEM: true,\r\n        };\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let dataObj ={...this.state};\r\n        dataObj.password = funcs_.encryptPW(this.state.password);\r\n        let v_Email = this.state.validEM;\r\n\r\n        if (checkEmail(this.state.email)) {\r\n            axios.post('/register', dataObj).then((req, res) => {\r\n                // console.log(\"This is the response to the front end from the register api \", req);\r\n                if(req.data.data === true) {\r\n                    this.setState({open1: true});\r\n                }else if (req.data.data === 3) {\r\n                    this.setState({open2: true});\r\n                }else if (req.data.data === 0) {\r\n                    this.setState({open: true});\r\n                }\r\n            });\r\n        }else {\r\n            this.setState({open3: true})\r\n        }\r\n\r\n\r\n    };\r\n    handleClose = (event) => {\r\n      this.setState({open: false, open2: false});\r\n        window.location.reload();\r\n    };\r\n    handleClose1 = (event) => {\r\n        this.setState({open1: false});\r\n        window.location.href = '/login1'\r\n    };\r\n\r\n    handleClose3 = (event) => {\r\n        this.setState({open3: false, email: ''});\r\n        // window.location.reload();\r\n    };\r\n    handleChange = (event) => {\r\n        const {name , value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    };\r\n    render () {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <CssBaseline />\r\n            <main className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n            <SignUp updateval={this.handleChange.bind(this)} CC={this.state.companyCode} UN={this.state.userName} PW={this.state.password} REPW={this.state.rePassWord} email1={this.state.email} validE={checkEmail(this.state.email)}/>\r\n            <div>\r\n                {((this.state.password === this.state.rePassWord) && (this.state.password !== '' && this.state.companyCode !== '' && this.state.userName !== '' && this.state.email !== '')) ? (\r\n                <Button\r\n                    className={classes.button}\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleSubmit}\r\n                >\r\n                    Sign Up!\r\n                </Button>\r\n                ): (\r\n                    <Typography component=\"h6\" variant=\"h6\" align=\"center\">\r\n                        Already have an account? Click here to <Link href={'/login1'} className={classes.link}>Sign-In</Link>\r\n                    </Typography>\r\n                )\r\n                }\r\n            </div>\r\n            </Paper>\r\n            </main>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.open1}\r\n                    onClose={this.handleClose1}\r\n                >\r\n                    <div style={getModalStyle()} className={classes.modal}>\r\n                        <Typography variant=\"h6\" id=\"modal-title\">\r\n                            User Added\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                            User {this.state.userName} has been added.\r\n                        </Typography>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <div style={getModalStyle()} className={classes.modal}>\r\n                        <Typography variant=\"h6\" id=\"modal-title\">\r\n                            User already exist for the current User Code\r\n                        </Typography>\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open2}\r\n                onClose={this.handleClose}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        No Company Code exist.\r\n                    </Typography>\r\n\r\n                </div>\r\n            </Modal>\r\n\r\n                <Modal\r\n                    aria-labelledby=\"simple-modal-title\"\r\n                    aria-describedby=\"simple-modal-description\"\r\n                    open={this.state.open3}\r\n                    onClose={this.handleClose3}\r\n                >\r\n                    <div style={getModalStyle()} className={classes.modal}>\r\n                        <Typography variant=\"h6\" id=\"modal-title\">\r\n                            Please Provide a valid email address.\r\n                        </Typography>\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\nsignuppage.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(signuppage);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport axios from 'axios';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst styles = theme => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        // justifyContent: 'center',\r\n        // align: 'center',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n        textAlign: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        padding: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * 6,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n\r\n    },\r\n});\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nconst initial_State = {\r\n    username: '',\r\n    email: '',\r\n    open1: false,\r\n    open2: false,\r\n    open3: false,\r\n    open4: false\r\n};\r\n\r\nclass passwordrst extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = initial_State;\r\n    }\r\n    handleSubmit = () => {\r\n        const dataObj = {\r\n          username: this.state.username,\r\n          email: this.state.email\r\n        };\r\n      axios.post('/passwordReset', dataObj).then((res) => {\r\n        //value 1 is when the username does not exist\r\n          // console.log(\"This is the reponse to the password reset, \", res.data);\r\n          if(res.status === 200) {\r\n              if(res.data.data === 1) {\r\n                  //username does not match\r\n                  this.setState({open1: true})\r\n              }else if (res.data.data === 2) {\r\n                  //email does not match\r\n                  this.setState({open2: true})\r\n              }else if (res.data.data === 3) {\r\n                  //error adding the data\r\n                  this.setState({open3: true})\r\n              }\r\n              else if (res.data.data) {\r\n                  //add code to send email to client\r\n                  this.setState({id: res.data.data.data.id});\r\n                  this.handleSendEmail(this.state.email, \"Inventroy Summary Report\", `Please follow the link below to Reset Password. \\n  http://localhost:3000/updateinfo/${this.state.id}`);\r\n              }\r\n          }\r\n      }).catch((err) => {\r\n\r\n      })\r\n    };\r\n\r\n    handleSendEmail = (v_to_email, v_subject, v_body) => {\r\n        const dataObj = {\r\n            SEND_TO: v_to_email,\r\n            SUBJECT: v_subject,\r\n            MESSAGE: v_body\r\n        };\r\n\r\n        axios.post('/sendEmail', dataObj).then((res) => {\r\n            if (res.data.data && res.data.data !== 3) {\r\n                this.setState({open4: true});\r\n            }\r\n        }).catch()\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    };\r\n    handlemodalClose = () => {\r\n          this.setState(initial_State);\r\n    };\r\n    render () {\r\n        const {classes} = this.props;\r\n        return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\r\n                    Please provide the following:\r\n                </Typography>\r\n                <Grid container spacing={24}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            label=\"User Name\"\r\n                            fullWidth\r\n                            autoComplete=\"username\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.username}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            autoComplete=\"usnm\"\r\n                            onChange={this.handleChange}\r\n                            value={this.state.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button\r\n                            className={classes.button}\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={this.handleSubmit}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </main>\r\n        <Modal\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            open={this.state.open1}\r\n            onClose={() => {this.handlemodalClose()}}\r\n        >\r\n            <div style={getModalStyle()} className={classes.modal}>\r\n                <Typography variant=\"h6\" id=\"modal-title\">\r\n                    Error\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                    {this.state.username} is not a valid username. Provide a valid Username.\r\n                </Typography>\r\n            </div>\r\n        </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open2}\r\n                onClose={() => {this.handlemodalClose()}}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        Error\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                        {this.state.email} is not a valid E-Mail. Provide a valid E-Mail.\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open3}\r\n                onClose={() => {this.handlemodalClose()}}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        Error\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                        There was an error processing your request.  Please try close the browser and retry.\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n            <Modal\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n                open={this.state.open4}\r\n                onClose={() => {this.handlemodalClose()}}\r\n            >\r\n                <div style={getModalStyle()} className={classes.modal}>\r\n                    <Typography variant=\"h6\" id=\"modal-title\">\r\n                        Click on Link below\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\r\n                        An email has been sent to the email address on file with directions on how to reset your password.\r\n                        {/*<Link href={`/updateinfo/${this.state.id}`} className={classes.link}>Click Here</Link>*/}\r\n                    </Typography>\r\n                </div>\r\n            </Modal>\r\n    </React.Fragment>\r\n        )\r\n    }\r\n}\r\npasswordrst.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(passwordrst);","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from \"prop-types\";\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport functions from '../../functions/functions';\r\nimport axios from 'axios';\r\nrequire('es6-promise').polyfill();\r\n\r\n\r\nconst styles = theme => ({\r\n    modal: {\r\n        position: 'absolute',\r\n        width: theme.spacing.unit * 50,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing.unit * 4,\r\n        outline: 'none',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginLeft: theme.spacing.unit,\r\n        // justifyContent: 'center',\r\n        // align: 'center',\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing.unit * 2,\r\n        marginRight: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n        textAlign: 'center',\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing.unit * 3,\r\n        marginBottom: theme.spacing.unit * 3,\r\n        padding: theme.spacing.unit * 2,\r\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\r\n            marginTop: theme.spacing.unit * 6,\r\n            marginBottom: theme.spacing.unit * 6,\r\n            padding: theme.spacing.unit * 3,\r\n        },\r\n\r\n    },\r\n});\r\nclass updatePW extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         password: '',\r\n    //         repassword: ''\r\n    //     }\r\n    // }\r\n\r\n    state = {\r\n            password: '',\r\n            repassword: ''\r\n    };\r\n\r\n    handleSubmit = (event, id) => {\r\n        const encrypPW = functions.encryptPW(this.state.password);\r\n        const dataObj = {\r\n            id,\r\n            pw: encrypPW,\r\n        };\r\n        axios.post('/updateDrowssap', dataObj).then((res) => {\r\n            // console.log(\"Area where the data is coming back from updating password\")\r\n        }).catch((err) => {\r\n\r\n        });\r\n        return false;\r\n    };\r\n    handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    };\r\n    render () {\r\n        const {classes} = this.props;\r\n        let id = this.props.match.params.id;\r\n        return (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <main className={classes.layout}>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography variant=\"h6\" gutterBottom align=\"center\" color=\"primary\">\r\n                            Please provide the following:\r\n                        </Typography>\r\n                        <Grid container spacing={24}>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    label=\"New Password\"\r\n                                    fullWidth\r\n                                    autoComplete=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.password}\r\n                                />\r\n                            </Grid>\r\n                            {(this.state.password === this.state.repassword) &&\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    id=\"repassword\"\r\n                                    name=\"repassword\"\r\n                                    type=\"password\"\r\n                                    label=\"Please re-enter your password.\"\r\n                                    fullWidth\r\n                                    autoComplete=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.repassword}\r\n                                />\r\n                            </Grid>\r\n\r\n                            }\r\n\r\n\r\n\r\n                            { (this.state.password !== this.state.repassword)  &&\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    error\r\n                                    id=\"repassword\"\r\n                                    name=\"repassword\"\r\n                                    type=\"password\"\r\n                                    label=\"Please re-enter your password.\"\r\n                                    fullWidth\r\n                                    autoComplete=\"password\"\r\n                                    onChange={this.handleChange}\r\n                                    value={this.state.repassword}\r\n                                />\r\n                            </Grid>\r\n                            }\r\n\r\n                            {this.state.password === this.state.repassword ?\r\n                            <Button\r\n                                className={classes.button}\r\n                                size=\"small\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={false}\r\n                                onClick={(event) => {this.handleSubmit(id)}}\r\n                            >\r\n                                Submit\r\n                            </Button> :\r\n                                <div></div>\r\n\r\n                            }\r\n\r\n                        </Grid>\r\n                    </Paper>\r\n                </main>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nupdatePW.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(updatePW);","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login1 from \"./pages/Login1\";\nimport Checkout from './pages/ClientCheckout';\nimport Report from './pages/Reporting';\nimport Dashboard from './pages/DashBoard';\nimport axios from 'axios';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport PrivateRoute from './components/PrivateRoute';\nimport SignUP from './pages/SignUpPage';\nimport passwordRS from './components/PasswordReset';\nimport funcs_ from './functions/functions';\nimport update from './pages/updatePW';\nrequire('es6-promise').polyfill();\n\nconst initialState = {open1: false,\n    open3: false,\n    redirectToRefererrer: false,\n    open: false,\n    open4: false,\n    open5: false,\n    auth: false\n};\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    };\n    myCheckOutPage = () => {\n        return (\n            <Checkout handleSignOut={this.signOut.bind(this)} companyname={this.state.compName} />\n        )\n    };\n    myReportingPage = () => {\n        return (\n            <Report handleSignOut={this.signOut.bind(this)} companyname={this.state.compName} />\n        )\n    };\n    myDashboardPage = () => {\n        return (\n            <Dashboard handleSignOut={this.signOut.bind(this)} companyname={this.state.compName}/>\n        )\n    };\n    signOut(){\n        sessionStorage.removeItem('token');\n        this.setState({auth: false});\n        window.location.reload();\n    };\n    reload () {\n        window.location.reload();\n    }\n    getKey (){\n        const token = window.sessionStorage.getItem('token');\n        // console.log('before it hits the api verify route ', token);\n        // console.log(\"This is the path, \", window.location);\n        if(token !== null) {\n            axios.post('/api/verify', {token}).then((res, err) => {\n\n                // console.log('This is the response from the getkey route ', res.data);\n                // console.log('This is the type of for the res.data ', typeof res.data);\n                // console.log('this is the data for res.data.data ', res.data.dataObj);\n\n                // return res.data.data === true;\n                if(res.data.dataObj.data === true){\n                    this.setState({companyCode : res.data.dataObj.compCD, email: res.data.dataObj.email, auth: true, compName: res.data.dataObj.compName});\n                    // console.log(\"state \", this.state);\n                }else{\n                    this.setState({auth:false})\n                }\n                if(this.props.location.pathname ==='/login1' && this.state.auth === true) {\n                    this.props.history.push('/home_page');\n\n                    //creating a timeout to reload page once the token has expired\n                    // console.log('value being passed to the set time out ', (res.data.dataObj.expires - new Date().getTime() ));\n                    // this.interval = setTimeout(this.reload, + res.data.dataObj.expires + new Date().getTime() );\n                }\n            });\n        }else{\n            this.setState({auth:false})\n        }\n    }\n    componentWillMount(){\n        // clearTimeout(this.interval);\n        this.getKey();\n        // console.log('This is the state in the component will mount ', this.state);\n        // document.title = 'Client Dashboard';\n\n      };\n    componentDidMount() {\n        // console.log(\"This is the state when the component moutned \", this.state);\n        // window.location.href = '/login1';\n    }\n    getValue = (event) => {\n        // Updates the input state\n        const {name, value} = event.target;\n        this.setState(\n            {\n                [name]: value\n            }\n        );\n    };\n\n    clearState = () => {\n        this.setState(initialState)\n    };\n\n    handleClose = () => {\n        this.setState({ open: false, open1: false });\n        this.clearState();\n        window.location.href = '/login1'\n    };\n\n    handlesubmit = (event) => {\n        event.preventDefault();\n        const pwHolder = this.state.password;\n        if((typeof (this.state.usrname) === 'undefined' || (this.state.usrname == null)) && (typeof this.state.password === 'undefined' || this.state.password == null)) {\n            this.setState({open3: true});\n        }else {\n            let dataObj ={...this.state};\n            dataObj.password = funcs_.encryptPW(pwHolder);\n\n        // console.log(\"created data object app.js page line 118 \", dataObj);\n\n        axios.post('/login', dataObj).then((res, err) => {\n            // console.log('this is the response for the login', res);\n            // console.log('this is the response for the login', res.data);\n            if(typeof (res.data.password) !== 'undefined' ){\n                const check = funcs_.checkPW(this.state.password, res.data.password);\n                this.setState({password: ''});\n                const tokenObj = {\n                    check: check,\n                    id: res.data.id,\n                    username: res.data.username,\n                    email: res.data.Email,\n                    comp: res.data.CompCode,\n                    compname: res.data.comp_name\n                };\n\n                if (check) {\n                    //creating token\n                    axios.post('/verify/api', tokenObj).then((res, err) => {\n                        // console.log(\"app. js handle submit verify request response, res: \", res);\n                        if(typeof res.data.token !== 'undefined') {\n                            //save this on local storage\n                            sessionStorage.setItem('token', res.data.token);\n                            this.setState({auth: true, email: res.data.email, compName: res.data.compName});\n                            // console.log('this is the state after the auth was udpated ', this.state);\n                            this.props.history.push('/home_page');\n                        }else{\n                            this.setState({open: true});\n                        }\n                    })\n                }else {\n                    this.setState({open: true});\n                }\n            }else {\n                this.setState({open5: true});\n            }\n        }).catch((e) => {\n            // console.log('Error: ', e);\n        });}\n    };\n    handleAdd = (event) => {\n        event.preventDefault();\n        // console.log('this is the state of the log-in page', this.state);\n        let dataObj ={...this.state};\n        dataObj.password = funcs_.encryptPW(this.state.password);\n        // console.log(\"this is the hashed password, \", dataObj.password);\n        axios.post('/register', dataObj).then((res, err) => {\n            // console.log('just wanted to see the error ', err);\n            if(err){\n                // console.log('There was an error ', err);\n            }else{\n                // res.status(200).json({message: 'this is the data' + res});\n                if(res.data.data === 0) {\n                    // console.log('Data was not Added.  User already exist ', res);\n                    this.setState({open1: true});\n                }\n                else if(res.data.data === 3 ) {\n                    // console.log('Data was not Added.  User already exist ', res);\n                    this.setState({open1: true});\n                }\n                else {\n                    // console.log('Data was added ', res);\n                    this.setState({open4: true});\n                }\n            }\n        }).catch((e) => {\n            // console.log('Error: ', e);\n        });\n    };\n    render() {\n\n        return (\n            <div>\n                {window.location === '/' ? <Redirect from=\"/\" exact to=\"/login1\" /> : ''}\n                <Switch>\n                    <Route exact path=\"/login1\"><Login1 getValue={this.getValue.bind(this)}  usrname={this.state.usrname} open3={this.state.open3} open4={this.state.open4} open5={this.state.open5} handlesubmit={this.handlesubmit.bind(this)} handleAdd={this.handleAdd.bind(this)} open={this.state.open} open1={this.state.open1} handleClose={this.handleClose.bind(this)}/></Route>\n                    <Route exact path=\"/signup\" component={SignUP}/>\n                    <Route exact path=\"/forgotdorwssap\" component={passwordRS}/>\n                    <Route exact path ='/updateinfo/:id' component={update}/>\n                    <PrivateRoute exact path=\"/home_page\" component={this.myDashboardPage} auth={this.state.auth}/>\n                    <PrivateRoute exact path=\"/manage_inv\" component={this.myCheckOutPage} auth={this.state.auth}/>\n                    <PrivateRoute exact path=\"/reporting\" component={this.myReportingPage} auth={this.state.auth}/>\n                </Switch>\n            </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n//ariel.m.vidal@gmail.com\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.'\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, MuiThemeProvider}  from \"@material-ui/core/styles\";\n\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {500 : \"#86af49\"},\n        action: {\n            active: \"#b5e7a0\",\n            hover: \"#618685\"\n        }\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n\nReactDOM.render((\n    <Router>\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}